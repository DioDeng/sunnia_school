{"version":3,"file":"js/950.7d6de4d6.js","mappings":"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","sources":["webpack://web/./src/views/teacher/GroupView.vue","webpack://web/./src/components/group/GroupModal.vue","webpack://web/./src/components/group/GroupModal.vue?58bd","webpack://web/./src/components/group/TopicModal.vue","webpack://web/./src/components/group/AddTopicModal.vue","webpack://web/./src/components/group/AddTopicModal.vue?9b0e","webpack://web/./src/components/group/TopicModal.vue?2df3","webpack://web/./src/components/group/ScoreModal.vue","webpack://web/./node_modules/@kurkle/color/dist/color.esm.js","webpack://web/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://web/./node_modules/chart.js/dist/chart.js","webpack://web/./node_modules/vue-chartjs/dist/index.js","webpack://web/./src/components/group/ScoreModal.vue?26b1","webpack://web/./src/components/group/DemoModal.vue","webpack://web/./src/components/group/DemoModal.vue?3316","webpack://web/./src/views/teacher/GroupView.vue?8248","webpack://web/./node_modules/@multiavatar/multiavatar/dist/commonjs/index.js"],"sourcesContent":["<!-- eslint-disable max-len -->\n<template>\n  <section class=\"px-3\">\n    <div class=\"row g-4\">\n      <div class=\"col-3\">\n        <div class=\"list-group\">\n          <template v-for=\"(item, index) in classList\" :key=\"index\">\n            <a\n              href=\"#\"\n              class=\"list-group-item list-group-item-action\"\n              :class=\"{ active: tempData.className === item.className }\"\n              aria-current=\"true\"\n              @click.prevent=\"selectClass(item.className)\"\n            >\n              {{ item.className }}\n            </a>\n          </template>\n          <button\n            class=\"btn btn-heightlight w-100 d-flex justify-content-between text-light\"\n            @click=\"this.$refs.addClass.showModal()\"\n          >\n            <span>建立班級</span><i class=\"bi bi-plus-lg\"></i>\n          </button>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <div class=\"card text-center\">\n          <div class=\"card-header bg-primary\">\n            <ul class=\"nav nav-tabs card-header-tabs\">\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '群組' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '群組'\"\n                >\n                  <i class=\"bi bi-people-fill\"></i>\n                  群組\n                </button>\n              </li>\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '題庫' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '題庫'\"\n                >\n                  <i class=\"bi bi-book\"></i>\n                  題庫\n                </button>\n              </li>\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '成績' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '成績'\"\n                >\n                  <i class=\"bi bi-trophy\"></i>\n                  成績\n                </button>\n              </li>\n              <li class=\"nav-item ms-auto\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '設定' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '設定'\"\n                >\n                  <i class=\"bi bi-gear-fill\"></i>\n                  設定\n                </button>\n              </li>\n            </ul>\n          </div>\n          <!-- group -->\n          <section :class=\"{ 'd-none': route !== '群組' }\">\n            <Group :classData=\"tempData\" />\n          </section>\n          <!-- topic -->\n          <section :class=\"{ 'd-none': route !== '題庫' }\">\n            <TopicModal />\n          </section>\n          <!-- 成績 -->\n          <section :class=\"{ 'd-none': route !== '成績' }\">\n            <ScoreModal />\n          </section>\n          <!-- setting -->\n          <section :class=\"{ 'd-none': route !== '設定' }\">\n            <Demo />\n          </section>\n        </div>\n      </div>\n    </div>\n  </section>\n  <AddClassModal ref=\"addClass\" />\n</template>\n\n<script>\nimport Group from '@/components/group/GroupModal.vue';\nimport TopicModal from '@/components/group/TopicModal.vue';\nimport ScoreModal from '@/components/group/ScoreModal.vue';\nimport AddClassModal from '@/components/group/AddClassModal.vue';\nimport Demo from '@/components/group/DemoModal.vue';\nimport choseData from '@/assets/jsons/chose.json';\nimport classData from '@/assets/jsons/class.json';\n\nexport default {\n  data() {\n    return {\n      route: '群組',\n      sortable: '',\n      choseList: choseData,\n      classList: classData,\n      tempData: {},\n      newList: '',\n    };\n  },\n  components: {\n    AddClassModal,\n    TopicModal,\n    ScoreModal,\n    Group,\n    Demo,\n  },\n  methods: {\n    selectClass(i) {\n      this.classList.forEach((item) => {\n        if (item.className === i) {\n          this.tempData = item;\n        }\n      });\n    },\n  },\n  mounted() {\n    // eslint-disable-next-line prefer-destructuring\n    this.tempData = this.classList[0];\n  },\n};\n</script>\n","<template>\n  <div class=\"card-body overflow-y-scroll\" style=\"height: 65vh\">\n    <div class=\"avtart\">\n      <template v-for=\"(item, key) in tempData.group\" :key=\"key\">\n        <div class=\"card mb-3\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n              <div\n                class=\"d-flex justify-content-center align-items-center h-100\"\n              >\n                <div v-html=\"item.avatar\" class=\"avtart-block\"></div>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">小組名稱{{ item.id }}</h5>\n                <p class=\"card-text\">\n                  This is a wider card with supporting text below as a natural\n                  lead-in to additional content. This content is a little bit\n                  longer.\n                </p>\n                <p class=\"card-text\">\n                  <small class=\"text-body-secondary\"\n                    ><button class=\"btn btn-primary\">查看詳細</button></small\n                  >\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <button class=\"btn btn-outline-primary\" @click=\"addGroup\">新增群組</button>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.avtart-block {\n  height: 75px;\n  width: 75px;\n  border-radius: 50%;\n}\n.avtart {\n  width: 100%;\n  text-align: center;\n}\n</style>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport multiavatar from '@multiavatar/multiavatar';\n\nexport default {\n  data() {\n    return {\n      tempData: {},\n    };\n  },\n  props: ['classData'],\n  watch: {\n    classData() {\n      this.tempData = JSON.parse(JSON.stringify(this.classData));\n      this.createMultiavatar();\n    },\n  },\n  methods: {\n    createMultiavatar() {\n      this.tempData.group.forEach((item) => {\n        // eslint-disable-next-line no-param-reassign\n        item.avatar = multiavatar(item.id);\n      });\n    },\n    addGroup() {\n      const newAvatar = multiavatar('jkdshiwqegf');\n      this.tempData.group.push({ avatar: newAvatar });\n    },\n  },\n};\n</script>\n","import { render } from \"./GroupModal.vue?vue&type=template&id=2a414ca8&scoped=true\"\nimport script from \"./GroupModal.vue?vue&type=script&lang=js\"\nexport * from \"./GroupModal.vue?vue&type=script&lang=js\"\n\nimport \"./GroupModal.vue?vue&type=style&index=0&id=2a414ca8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a414ca8\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-body overflow-y-scroll p-4\" style=\"height: 65vh\" id=\"items\">\n    <div class=\"accordion\" id=\"accordionExample\">\n      <template v-for=\"(item, index) in choseList\" :key=\"index\">\n        <div class=\"accordion-item\">\n          <h2 class=\"accordion-header\">\n            <button\n              class=\"accordion-button\"\n              :class=\"{ collapsed: index !== 0 }\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              :data-bs-target=\"`#${item.id}`\"\n            >\n              {{ item.folderName }} #{{ item.topicList.length }}題\n            </button>\n          </h2>\n          <div\n            :id=\"item.id\"\n            class=\"accordion-collapse collapse\"\n            data-bs-parent=\"#accordionExample\"\n            :class=\"{ show: index === 0 }\"\n          >\n            <div class=\"accordion-body\">\n              <template v-for=\"(data, key) in item.topicList\" :key=\"key\">\n                <div class=\"card mb-2 text-start\">\n                  <div>\n                    <div class=\"card-body\">\n                      <div class=\"text-black-50\">\n                        {{ key + 1 }}-{{ data.type }}\n                        <i\n                          class=\"bi bi-check-all text-primary\"\n                          v-if=\"data.type === '複選'\"\n                        ></i\n                        ><i\n                          class=\"bi bi-ui-radios-grid\"\n                          style=\"color: #a46039\"\n                          v-else-if=\"data.type === '單選'\"\n                        ></i>\n                        <i\n                          class=\"bi bi-chat-text text-heightlight\"\n                          style=\"color: #a46039\"\n                          v-else\n                        ></i>\n                      </div>\n                      {{ data.title }}\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </div>\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <button\n      class=\"btn btn-outline-primary\"\n      @click=\"this.$refs.addTopic.showModal()\"\n    >\n      新增題庫\n    </button>\n  </div>\n  <AddTopicModal ref=\"addTopic\" />\n</template>\n\n<script>\nimport AddTopicModal from '@/components/group/AddTopicModal.vue';\nimport choseData from '@/assets/jsons/topic.json';\n\nexport default {\n  data() {\n    return {\n      sortable: '',\n      choseList: choseData,\n      newList: '',\n    };\n  },\n  components: {\n    AddTopicModal,\n  },\n};\n</script>\n","<!-- eslint-disable vuejs-accessibility/label-has-for -->\n<template>\n  <div class=\"modal\" tabindex=\"-1\" ref=\"AddTopic\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">{{ tempSelect }}</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body overflow-y-scroll\" style=\"max-height: 65vh\">\n          <template v-for=\"(item, index) in topicList\" :key=\"index\">\n            <div class=\"input-group input-group-lg mb-3\">\n              <div class=\"input-group-text\">\n                <input\n                  class=\"form-check-input mt-0\"\n                  type=\"checkbox\"\n                  :value=\"item.id\"\n                  :id=\"index\"\n                  aria-label=\"Checkbox for following text input\"\n                  v-model=\"tempSelect\"\n                />\n              </div>\n              <label class=\" form-control form-check-label\" :for=\"index\">\n                {{item.title}}\n              </label>\n            </div>\n          </template>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n          >\n            Close\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Modal } from 'bootstrap';\nimport topicData from '@/assets/jsons/chose.json';\n\nexport default {\n  data() {\n    return {\n      modal: '',\n      topicList: topicData,\n      tempData: {},\n      tempSelect: [],\n    };\n  },\n  methods: {\n    showModal() {\n      this.modal.show();\n    },\n  },\n  mounted() {\n    this.modal = new Modal(this.$refs.AddTopic);\n  },\n};\n</script>\n","import { render } from \"./AddTopicModal.vue?vue&type=template&id=57d4bd65\"\nimport script from \"./AddTopicModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddTopicModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TopicModal.vue?vue&type=template&id=3ac7a700\"\nimport script from \"./TopicModal.vue?vue&type=script&lang=js\"\nexport * from \"./TopicModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- eslint-disable max-len -->\n<template>\n  <div class=\"card-body overflow-y-scroll\" style=\"height: 65vh\">\n    <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n  </div>\n</template>\n\n<script>\nimport choseData from '@/assets/jsons/chose.json';\nimport classData from '@/assets/jsons/class.json';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Bar } from 'vue-chartjs';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n);\n\nexport default {\n  data() {\n    return {\n      route: '群組',\n      sortable: '',\n      choseList: choseData,\n      classList: classData,\n      tempData: {},\n      newList: '',\n      chartData: {\n        labels: ['January', 'February', 'March'],\n        datasets: [{ data: [40, 20, 12] }],\n      },\n      chartOptions: {\n        responsive: true,\n      },\n    };\n  },\n  components: { Bar },\n  methods: {\n    selectClass(i) {\n      this.classList.forEach((item) => {\n        if (item.className === i) {\n          this.tempData = item;\n        }\n      });\n    },\n  },\n  mounted() {\n    // eslint-disable-next-line prefer-destructuring\n    this.tempData = this.classList[0];\n  },\n};\n</script>\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./ScoreModal.vue?vue&type=template&id=005db09f\"\nimport script from \"./ScoreModal.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div\n    class=\"card-body overflow-y-scroll p-4\"\n    style=\"height: 65vh\"\n    ref=\"items\"\n    id=\"items\"\n  >\n  </div>\n  <div class=\"card-footer\">\n    <button\n      class=\"btn btn-outline-primary\"\n      @click=\"this.$refs.addTopic.showModal()\"\n    >\n      新增題庫群組\n    </button>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Sortable from 'sortablejs';\nimport choseData from '@/assets/jsons/chose.json';\n\nexport default {\n  data() {\n    return {\n      sortable: '',\n      choseList: choseData,\n      newList: '',\n    };\n  },\n  mounted() {\n    this.sortable = Sortable.create(this.$refs.items, {\n      animation: 500,\n      onStart() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.add('animate__headShake');\n        });\n      },\n      onEnd() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.remove('animate__headShake');\n        });\n        const tempList = document.getElementsByClassName('headShake');\n        this.newList = [];\n        Object.values(tempList).forEach((item) => {\n          this.newList.push(item.id);\n        });\n      },\n    });\n  },\n};\n</script>\n","import { render } from \"./DemoModal.vue?vue&type=template&id=53007476\"\nimport script from \"./DemoModal.vue?vue&type=script&lang=js\"\nexport * from \"./DemoModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GroupView.vue?vue&type=template&id=15ab0887\"\nimport script from \"./GroupView.vue?vue&type=script&lang=js\"\nexport * from \"./GroupView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function multiavatar(string,sansEnv,ver){string+=\"\";var themes={\"00\":{A:{env:[\"#ff2f2b\"],clo:[\"#fff\",\"#000\"],head:[\"#fff\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#000\",\"none\",\"#00FFFF\"],top:[\"#fff\",\"#fff\"]},B:{env:[\"#ff1ec1\"],clo:[\"#000\",\"#fff\"],head:[\"#ffc1c1\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#FF2D00\",\"#fff\",\"none\"],top:[\"#a21d00\",\"#fff\"]},C:{env:[\"#0079b1\"],clo:[\"#0e00b1\",\"#d1fffe\"],head:[\"#f5aa77\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#0c00de\",\"#fff\",\"none\"],top:[\"#acfffd\",\"#acfffd\"]}},\"01\":{A:{env:[\"#a50000\"],clo:[\"#f06\",\"#8e0039\"],head:[\"#85492C\"],mouth:[\"#000\"],eyes:[\"#000\",\"#ff9809\"],top:[\"#ff9809\",\"#ff9809\",\"none\",\"none\"]},B:{env:[\"#40E83B\"],clo:[\"#00650b\",\"#62ce5a\"],head:[\"#f7c1a6\"],mouth:[\"#6e1c1c\"],eyes:[\"#000\",\"#ff833b\"],top:[\"#67FFCC\",\"none\",\"none\",\"#ecff3b\"]},C:{env:[\"#ff2c2c\"],clo:[\"#fff\",\"#000\"],head:[\"#ffce8b\"],mouth:[\"#000\"],eyes:[\"#000\",\"#0072ff\"],top:[\"#ff9809\",\"none\",\"#ffc809\",\"none\"]}},\"02\":{A:{env:[\"#ff7520\"],clo:[\"#d12823\"],head:[\"#fee3c5\"],mouth:[\"#d12823\"],eyes:[\"#000\",\"none\"],top:[\"#000\",\"none\",\"none\",\"#FFCC00\",\"red\"]},B:{env:[\"#ff9700\"],clo:[\"#000\"],head:[\"#d2ad6d\"],mouth:[\"#000\"],eyes:[\"#000\",\"#00ffdc\"],top:[\"#fdff00\",\"#fdff00\",\"none\",\"none\",\"none\"]},C:{env:[\"#26a7ff\"],clo:[\"#d85cd7\"],head:[\"#542e02\"],mouth:[\"#f70014\"],eyes:[\"#000\",\"magenta\"],top:[\"#FFCC00\",\"#FFCC00\",\"#FFCC00\",\"#ff0000\",\"yellow\"]}},\"03\":{A:{env:[\"#6FC30E\"],clo:[\"#b4e1fa\",\"#5b5d6e\",\"#515262\",\"#a0d2f0\",\"#a0d2f0\"],head:[\"#fae3b9\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#8eff45\",\"#8eff45\",\"none\",\"none\"]},B:{env:[\"#00a58c\"],clo:[\"#000\",\"none\",\"none\",\"none\",\"none\"],head:[\"#FAD2B9\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#FFC600\",\"none\",\"#FFC600\",\"none\"]},C:{env:[\"#ff501f\"],clo:[\"#000\",\"#ff0000\",\"#ff0000\",\"#7d7d7d\",\"#7d7d7d\"],head:[\"#fff3dc\"],mouth:[\"#d2001b\",\"none\"],eyes:[\"#000\"],top:[\"#D2001B\",\"none\",\"none\",\"#D2001B\"]}},\"04\":{A:{env:[\"#fc0\"],clo:[\"#901e0e\",\"#ffbe1e\",\"#ffbe1e\",\"#c55f54\"],head:[\"#f8d9ad\"],mouth:[\"#000\",\"none\",\"#000\",\"none\"],eyes:[\"#000\"],top:[\"#583D00\",\"#AF892E\",\"#462D00\",\"#a0a0a0\"]},B:{env:[\"#386465\"],clo:[\"#fff\",\"#333\",\"#333\",\"#333\"],head:[\"#FFD79D\"],mouth:[\"#000\",\"#000\",\"#000\",\"#000\"],eyes:[\"#000\"],top:[\"#27363C\",\"#5DCAD4\",\"#314652\",\"#333\"]},C:{env:[\"#DFFF00\"],clo:[\"#304267\",\"#aab0b1\",\"#aab0b1\",\"#aab0b1\"],head:[\"#e6b876\"],mouth:[\"#50230a\",\"#50230a\",\"#50230a\",\"#50230a\"],eyes:[\"#000\"],top:[\"#333\",\"#afafaf\",\"#222\",\"#6d3a1d\"]}},\"05\":{A:{env:[\"#a09300\"],clo:[\"#c7d4e2\",\"#435363\",\"#435363\",\"#141720\",\"#141720\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#f5d4a6\"],mouth:[\"#000\",\"#cf9f76\"],eyes:[\"#000\",\"#000\",\"#000\",\"#000\",\"#000\",\"#000\",\"#fff\",\"#fff\",\"#fff\",\"#fff\",\"#000\",\"#000\"],top:[\"none\",\"#fdff00\"]},B:{env:[\"#b3003e\"],clo:[\"#000\",\"#435363\",\"#435363\",\"#000\",\"none\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#f5d4a6\"],mouth:[\"#000\",\"#af9f94\"],eyes:[\"#9ff3ff;opacity:0.96\",\"#000\",\"#9ff3ff;opacity:0.96\",\"#000\",\"#2f508a\",\"#000\",\"#000\",\"#000\",\"none\",\"none\",\"none\",\"none\"],top:[\"#ff9a00\",\"#ff9a00\"]},C:{env:[\"#884f00\"],clo:[\"#ff0000\",\"#fff\",\"#fff\",\"#141720\",\"#141720\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#c57b14\"],mouth:[\"#000\",\"#cf9f76\"],eyes:[\"none\",\"#000\",\"none\",\"#000\",\"#5a0000\",\"#000\",\"#000\",\"#000\",\"none\",\"none\",\"none\",\"none\"],top:[\"#efefef\",\"none\"]}},\"06\":{A:{env:[\"#8acf00\"],clo:[\"#ee2829\",\"#ff0\"],head:[\"#ffce73\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#000\",\"#000\",\"none\",\"#000\",\"#ff4e4e\",\"#000\"]},B:{env:[\"#00d2a3\"],clo:[\"#0D0046\",\"#ffce73\"],head:[\"#ffce73\"],mouth:[\"#000\",\"none\"],eyes:[\"#000\"],top:[\"#000\",\"#000\",\"#000\",\"none\",\"#ffb358\",\"#000\",\"none\",\"none\"]},C:{env:[\"#ff184e\"],clo:[\"#000\",\"none\"],head:[\"#ffce73\"],mouth:[\"#ff0000\",\"none\"],eyes:[\"#000\"],top:[\"none\",\"none\",\"none\",\"none\",\"none\",\"#ffc107\",\"none\",\"none\"]}},\"07\":{A:{env:[\"#00deae\"],clo:[\"#ff0000\"],head:[\"#ffce94\"],mouth:[\"#f73b6c\",\"#000\"],eyes:[\"#e91e63\",\"#000\",\"#e91e63\",\"#000\",\"#000\",\"#000\"],top:[\"#dd104f\",\"#dd104f\",\"#f73b6c\",\"#dd104f\"]},B:{env:[\"#181284\"],clo:[\"#491f49\",\"#ff9809\",\"#491f49\"],head:[\"#f6ba97\"],mouth:[\"#ff9809\",\"#000\"],eyes:[\"#c4ffe4\",\"#000\",\"#c4ffe4\",\"#000\",\"#000\",\"#000\"],top:[\"none\",\"none\",\"#d6f740\",\"#516303\"]},C:{env:[\"#bcf700\"],clo:[\"#ff14e4\",\"#000\",\"#14fffd\"],head:[\"#7b401e\"],mouth:[\"#666\",\"#000\"],eyes:[\"#00b5b4\",\"#000\",\"#00b5b4\",\"#000\",\"#000\",\"#000\"],top:[\"#14fffd\",\"#14fffd\",\"#14fffd\",\"#0d3a62\"]}},\"08\":{A:{env:[\"#0df\"],clo:[\"#571e57\",\"#ff0\"],head:[\"#f2c280\"],eyes:[\"#795548\",\"#000\"],mouth:[\"#ff0000\"],top:[\"#de3b00\",\"none\"]},B:{env:[\"#B400C2\"],clo:[\"#0D204A\",\"#00ffdf\"],head:[\"#ca8628\"],eyes:[\"#cbbdaf\",\"#000\"],mouth:[\"#1a1a1a\"],top:[\"#000\",\"#000\"]},C:{env:[\"#ffe926\"],clo:[\"#00d6af\",\"#000\"],head:[\"#8c5100\"],eyes:[\"none\",\"#000\"],mouth:[\"#7d0000\"],top:[\"#f7f7f7\",\"none\"]}},\"09\":{A:{env:[\"#4aff0c\"],clo:[\"#101010\",\"#fff\",\"#fff\"],head:[\"#dbbc7f\"],mouth:[\"#000\"],eyes:[\"#000\",\"none\",\"none\"],top:[\"#531148\",\"#531148\",\"#531148\",\"none\"]},B:{env:[\"#FFC107\"],clo:[\"#033c58\",\"#fff\",\"#fff\"],head:[\"#dbc97f\"],mouth:[\"#000\"],eyes:[\"none\",\"#fff\",\"#000\"],top:[\"#FFEB3B\",\"#FFEB3B\",\"none\",\"#FFEB3B\"]},C:{env:[\"#FF9800\"],clo:[\"#b40000\",\"#fff\",\"#fff\"],head:[\"#E2AF6B\"],mouth:[\"#000\"],eyes:[\"none\",\"#fff\",\"#000\"],top:[\"#ec0000\",\"#ec0000\",\"none\",\"none\"]}},10:{A:{env:[\"#104c8c\"],clo:[\"#354B65\",\"#3D8EBB\",\"#89D0DA\",\"#00FFFD\"],head:[\"#cc9a5c\"],mouth:[\"#222\",\"#fff\"],eyes:[\"#000\",\"#000\"],top:[\"#fff\",\"#fff\",\"none\"]},B:{env:[\"#0DC15C\"],clo:[\"#212121\",\"#fff\",\"#212121\",\"#fff\"],head:[\"#dca45f\"],mouth:[\"#111\",\"#633b1d\"],eyes:[\"#000\",\"#000\"],top:[\"none\",\"#792B74\",\"#792B74\"]},C:{env:[\"#ffe500\"],clo:[\"#1e5e80\",\"#fff\",\"#1e5e80\",\"#fff\"],head:[\"#e8bc86\"],mouth:[\"#111\",\"none\"],eyes:[\"#000\",\"#000\"],top:[\"none\",\"none\",\"#633b1d\"]}},11:{A:{env:[\"#4a3f73\"],clo:[\"#e6e9ee\",\"#f1543f\",\"#ff7058\",\"#fff\",\"#fff\"],head:[\"#b27e5b\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"#000\",\"#57FFFD\"],top:[\"#ffc\",\"#ffc\",\"#ffc\"]},B:{env:[\"#00a08d\"],clo:[\"#FFBA32\",\"#484848\",\"#4e4e4e\",\"#fff\",\"#fff\"],head:[\"#ab5f2c\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"#ff23fa;opacity:0.39\",\"#000\"],top:[\"#ff90f4\",\"#ff90f4\",\"#ff90f4\"]},C:{env:[\"#22535d\"],clo:[\"#000\",\"#ff2500\",\"#ff2500\",\"#fff\",\"#fff\"],head:[\"#a76c44\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"none\",\"#000\"],top:[\"none\",\"#00efff\",\"none\"]}},12:{A:{env:[\"#2668DC\"],clo:[\"#2385c6\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#ad8a60\"],mouth:[\"#000\",\"#4d4d4d\"],eyes:[\"#7fb5a2\",\"#d1eddf\",\"#301e19\"],top:[\"#fff510\",\"#fff510\"]},B:{env:[\"#643869\"],clo:[\"#D67D1B\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#CC985A\",\"none0000\"],mouth:[\"#000\",\"#ececec\"],eyes:[\"#1f2644\",\"#9b97ce\",\"#301e19\"],top:[\"#00eaff\",\"none\"]},C:{env:[\"#F599FF\"],clo:[\"#2823C6\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#C7873A\"],mouth:[\"#000\",\"#4d4d4d\"],eyes:[\"#581b1b\",\"#FF8B8B\",\"#000\"],top:[\"none\",\"#9c0092\"]}},13:{A:{env:[\"#d10084\"],clo:[\"#efedee\",\"#00a1e0\",\"#00a1e0\",\"#efedee\",\"#ffce1c\"],head:[\"#b35f49\"],mouth:[\"#3a484a\",\"#000\"],eyes:[\"#000\"],top:[\"#000\",\"none\",\"#000\",\"none\"]},B:{env:[\"#E6C117\"],clo:[\"#efedee\",\"#ec0033\",\"#ec0033\",\"#efedee\",\"#f2ff05\"],head:[\"#ffc016\"],mouth:[\"#4a3737\",\"#000\"],eyes:[\"#000\"],top:[\"#ffe900\",\"#ffe900\",\"none\",\"#ffe900\"]},C:{env:[\"#1d8c00\"],clo:[\"#e000cb\",\"#fff\",\"#fff\",\"#e000cb\",\"#ffce1c\"],head:[\"#b96438\"],mouth:[\"#000\",\"#000\"],eyes:[\"#000\"],top:[\"#53ffff\",\"#53ffff\",\"none\",\"none\"]}},14:{A:{env:[\"#fc0065\"],clo:[\"#708913\",\"#fdea14\",\"#708913\",\"#fdea14\",\"#708913\"],head:[\"#DEA561\"],mouth:[\"#444\",\"#000\"],eyes:[\"#000\"],top:[\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\"]},B:{env:[\"#81f72e\"],clo:[\"#ff0000\",\"#ffc107\",\"#ff0000\",\"#ffc107\",\"#ff0000\"],head:[\"#ef9831\"],mouth:[\"#6b0000\",\"#000\"],eyes:[\"#000\"],top:[\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"none\",\"none\",\"none\",\"none\"]},C:{env:[\"#00D872\"],clo:[\"#590D00\",\"#FD1336\",\"#590D00\",\"#FD1336\",\"#590D00\"],head:[\"#c36c00\"],mouth:[\"#56442b\",\"#000\"],eyes:[\"#000\"],top:[\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"]}},15:{A:{env:[\"#111\"],clo:[\"#000\",\"#00FFFF\"],head:[\"#755227\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"#008;opacity:0.67\",\"aqua\"],top:[\"#fff\",\"#fff\",\"#fff\",\"#fff\",\"#fff\"]},B:{env:[\"#00D0D4\"],clo:[\"#000\",\"#fff\"],head:[\"#755227\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"#1df7ff;opacity:0.64\",\"#fcff2c\"],top:[\"#fff539\",\"none\",\"#fff539\",\"none\",\"#fff539\"]},C:{env:[\"#DC75FF\"],clo:[\"#000\",\"#FFBDEC\"],head:[\"#997549\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"black\",\"aqua\"],top:[\"#00fffd\",\"none\",\"none\",\"none\",\"none\"]}}},sP=[],svgStart='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 231 231\">',svgEnd=\"</svg>\",env='<path d=\"M33.83,33.83a115.5,115.5,0,1,1,0,163.34,115.49,115.49,0,0,1,0-163.34Z\" style=\"fill:#01;\"/>',head='<path d=\"m115.5 51.75a63.75 63.75 0 0 0-10.5 126.63v14.09a115.5 115.5 0 0 0-53.729 19.027 115.5 115.5 0 0 0 128.46 0 115.5 115.5 0 0 0-53.729-19.029v-14.084a63.75 63.75 0 0 0 53.25-62.881 63.75 63.75 0 0 0-63.65-63.75 63.75 63.75 0 0 0-0.09961 0z\" style=\"fill:#000;\"/>',str=\"stroke-linecap:round;stroke-linejoin:round;stroke-width:\";sP[\"00\"]=[],sP[\"00\"].env=env,sP[\"00\"].clo='<path d=\"m141.74 195a114.93 114.93 0 0 1 37.912 16.45l0.07 0.05c-1.17 0.79-2.3601 1.55-3.5601 2.29a115.55 115.55 0 0 1-120.95 0.21q-2.0001-1.23-4.0002-2.54a114.79 114.79 0 0 1 38.002-16.5 116.21 116.21 0 0 1 15.791-2.49v-14.57c1.32 0.22 2.6501 0.39 4.0002 0.51 2.0001 0.19 4.0002 0.28 6.1202 0.29a64.333 64.33 0 0 0 8.8804-0.62c0.67003-0.09 1.3401-0.2 2.0001-0.31v14.69a118 118 0 0 1 15.741 2.54z\" style=\"fill:#fff;\"/><path d=\"m79.292 212a3.4601 3.46 0 0 0 3.8902 5.07 3.3801 3.38 0 0 0 2.1001-1.61 3.4701 3.47 0 0 0-1.2801-4.72 3.4201 3.42 0 0 0-2.6201-0.34 3.5101 3.51 0 0 0-2.0901 1.6zm60.122 0.46a3.4901 3.49 0 0 0 1.21 4.7h0.06a3.4601 3.46 0 0 0 4.7202-1.27l0.07-0.13a3.4601 3.46 0 0 0-1.34-4.6 3.4601 3.46 0 0 0-2.5801-0.32 3.5301 3.53 0 0 0-2.1001 1.61zm9.8004 5.7 5.8602 5.87c-1.39 0.5-2.7901 1-4.2102 1.44l-4.4802-4.47a7.5203 7.52 0 0 1-1.9401 0.81 7.8303 7.83 0 0 1-6.0002-0.79 7.8703 7.87 0 0 1-2.9201-10.69v-0.07a7.8903 7.89 0 0 1 10.77-2.88l0.12 0.07a7.8603 7.86 0 0 1 2.7901 10.62v0.07zm-37.701-2.36-9.5004 9.51v4.9c-1.35-0.16-2.6801-0.33-4.0002-0.54v-6l0.58002-0.58 10.1-10.09a7.8703 7.87 0 1 1 2.8401 2.86zm7.3203-5.91a3.4601 3.46 0 1 0-1.6101 2.1 3.3801 3.38 0 0 0 1.6101-2.1zm-29.741 7.82 3.0901 3.1 0.59002 0.59v7.36c-1.3401-0.26-2.6801-0.55-4.0002-0.87v-4.84l-2.5101-2.51a7.5203 7.52 0 0 1-1.9401 0.81 7.8803 7.88 0 1 1 1.9101-14.43 7.8703 7.87 0 0 1 2.8901 10.75z\" style=\"fill:#1a1a1a;\"/>',sP[\"00\"].head=head,sP[\"00\"].mouth='<path d=\"m94.19 136.84h42.632a3.7801 3.78 0 0 1 3.7802 3.78v3.22a15.231 15.23 0 0 1-15.211 15.16h-19.781a15.251 15.25 0 0 1-15.221-15.16v-3.22a3.8002 3.8 0 0 1 3.7802-3.78z\" style=\"fill:#fff;'+str+'3px;stroke:#1a1a1a;\"/><path d=\"m130.96 136.84v21.16m-30.911-21.16v21.16m10.34-21.16v22.16m10.31-22.2v22.2\" style=\"fill:none;'+str+'3px;stroke:#1a1a1a;\"/>',sP[\"00\"].eyes='<path d=\"m83.739 83.92h63.533a19.101 19.1 0 0 1 19.051 19 19.111 19.11 0 0 1-19.051 19h-63.533a19.091 19.09 0 0 1-19.001-19 19.091 19.09 0 0 1 19.001-19z\" style=\"fill:#1a1a1a;\"/><path d=\"m140.23 93.54a9.3804 9.38 0 1 0 9.3804 9.38 9.3804 9.38 0 0 0-9.3804-9.38zm-49.402 0a9.3804 9.38 0 1 0 9.3804 9.38 9.3904 9.39 0 0 0-9.3804-9.38z\" style=\"fill:#e6e7e8;\"/><rect x=\"79.795\" y=\"98.627\" width=\"71.471\" height=\"8.5859\" ry=\"4.2929\" style=\"fill:#b3b3b3;\"/>',sP[\"00\"].top='<path d=\"m32.902 67.662c-0.36295 1.7227-6.2342 30.695 5.6133 52.596 4.5843 8.4743 9.0081 13.239 12.75 15.893a67.7 67.7 0 0 1-3.4688-21.35 67.7 67.7 0 0 1 2.332-17.658c-4.4914-2.4646-10.868-6.9012-13.834-13.52-4.1626-9.285-3.6155-14.673-3.3926-15.961zm165.19 0c0.22292 1.2882 0.77005 6.6759-3.3926 15.961-2.9664 6.6183-9.3426 11.055-13.834 13.52a67.7 67.7 0 0 1 2.332 17.658 67.7 67.7 0 0 1-3.4688 21.35c3.7419-2.6532 8.1657-7.4183 12.75-15.893 11.847-21.9 5.9762-50.873 5.6133-52.596z\" style=\"fill:#fff;\"/><path d=\"m115.73 13.191c-7.3787-0.13351-13.509 5.7888-13.631 13.168-0.10128 5.8827 3.4508 10.518 8.0566 12.52 1.061 0.46115 2.1869 0.78009 3.3418 0.95703v8.4291c0.66778-0.02035 1.3358-0.03077 2.0039-0.03125 0.66547-9e-5 1.3309 0.0097 1.9961 0.0293v-8.4115c2.6002-0.38406 5.1586-1.5484 7.3086-3.625 4.2322-4.0878 4.9991-9.8755 3.1582-14.549-1.8407-4.6726-6.3502-8.3834-12.232-8.4863z\" style=\"fill:#fff;\"/>',sP[\"01\"]=[],sP[\"01\"].env=env,sP[\"01\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0 10.76 11.75 19.48 26.25 19.48s26.25-8.72 26.25-19.48z\" style=\"fill:#1a1a1a;\"/><path d=\"m92.502 194.27v0.70391c0 4.3033 2.4373 8.2583 6.3807 11.183 4.2199 3.1204 10.106 5.0508 16.661 5.0508 6.548 0 12.434-1.9303 16.654-5.0508 3.9434-2.9245 6.388-6.8795 6.388-11.183v-0.67489c1.0768 0.21771 2.1463 0.44994 3.2158 0.69666h-7e-3c1.0695 0.24672 2.1318 0.50798 3.1867 0.791-0.27648 6.103-3.6524 11.553-8.9708 15.493-5.2821 3.9114-12.521 6.328-20.466 6.328-7.9449 0-15.184-2.4165-20.474-6.328-5.333-3.9477-8.7089-9.4194-8.9708-15.544 1.055-0.27577 2.1099-0.53702 3.1722-0.78376 1.0695-0.23947 2.1463-0.46443 3.2304-0.68213z\" style=\"fill:#b3b3b3;\"/>',sP[\"01\"].head=head,sP[\"01\"].mouth='<path d=\"m100.35 143.85a7.67 7.67 0 0 0 7.58 7.7v0a7.66 7.66 0 0 0 7.57-7.7 7.66 7.66 0 0 0 7.57 7.7v0a7.67 7.67 0 0 0 7.58-7.7\" style=\"fill:none;'+str+'6.3998px;stroke:#333;\"/>',sP[\"01\"].eyes='<path d=\"m78.73 111a10.9 10.9 0 0 1 15.19 0m43.16 0a10.9 10.9 0 0 1 15.19 0\" style=\"fill:none;'+str+'6.1999px;stroke:#333;\"/><path d=\"m79.804 123.74h7.07m57.273 0h7.05\" style=\"fill:none;'+str+'5.9998px;stroke:#b8b8b8;\"/>',sP[\"01\"].top='<path d=\"m57.534 142.03c-6.9383-31.75-0.57294-52.577 14.174-62.344 22.562-12.283 62.082-12.222 83.484-1.8846 21.348 11.177 22.124 37.396 18.498 63.733 8.1279-14.155 13.164-31.598 14.085-48.902 1.0828-11.795-1.1756-18.866-7.4833-27.972-26.465-37.685-103.45-31.56-129.66-2.8372-7.8504 9.4615-9.6006 17.478-9.275 26.667 1.0024 18.667 6.9688 38.508 16.18 53.54z\" style=\"fill:#b3b3b3;\"/><path d=\"m111.26 3.0423c-6.013 0.1128-12.629 2.6924-15.291 7.9082-1.1676 3.2383-1.6758 6.2069-1.6758 8.8926 0.89228-0.2661 1.8005-0.5164 2.7266-0.7441 3.7502-1.0672 7.4851-1.7135 11.129-1.9981 1.1007-0.086 2.1953-0.1391 3.2773-0.1601h2e-3c5.6969-0.1133 11.09 0.6603 15.904 2.0527 0.0552-3.042-0.70696-5.9824-2.1738-8.5-1.8411-3.1599-4.7033-5.5568-8.4297-6.8262-1.6883-0.4952-3.5163-0.662-5.4688-0.625zm3.0664 17.449c-0.69317-0.01-1.3919-0.01-2.0938 0h-2e-3c-1.1591 0.019-2.3326 0.064-3.5117 0.1386-3.9035 0.246-7.9025 0.8061-11.92 1.7285-15.159 3.0075-26.469 9.9279-22.068 19.682 22.891-8.7773 52.315-10.403 76.023-2.2129 2.1414-9.5529-14.939-19.081-36.428-19.34z\" style=\"fill:#b3b3b3;\"/><path d=\"m165.62 16.981c-0.8575 0-1.9406 0.54389-3.3476 1.3574-7.3382 4.7652-13.452 10.867-19.516 18.363 9.2734 2.1825 17.903 5.6706 25.213 10.604 1.1512-9.1263 1.9137-18.503 0.055-26.996-0.57-2.4184-1.3017-3.3267-2.4043-3.3281zm-104.09 1.6934c-1.1026 0-1.8342 0.91165-2.4043 3.3301-1.8794 8.5869-1.0806 18.078 0.092 27.299 7.0559-4.6638 15.687-8.3667 25.111-10.984-6.043-7.4601-12.139-13.537-19.451-18.285-1.407-0.81353-2.4901-1.3605-3.3477-1.3594z\" style=\"fill:#b3b3b3;\"/><path d=\"m162.45 16.686c-2.3175 2e-3 -4.6276 0.57608-6.8926 1.668-8.4768 6.0155-11.113 13.349-10.133 19.787 10.323 2.7077 19.762 7.0658 27.346 13.279 9.848-4.9363 11.32-17.137 4.6152-25.852-4.7104-6.1222-9.8371-8.8878-14.936-8.8828zm-97.318 4.1387c-2.4569 0.0556-5.1642 0.54474-8.1172 1.5176-13.487 4.4433-19.06 21.215-3.6484 31.84 7.2476-6.0694 16.961-10.896 27.892-14.229 0.2193-3.3241-0.3201-7.0817-1.8691-11.236-2.8049-4.8445-7.2233-7.721-13.221-7.8906-0.3408-0.01-0.6861-0.01-1.0371-2e-3z\" style=\"fill:#b3b3b3;\"/>',sP[\"02\"]=[],sP[\"02\"].env=env,sP[\"02\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0 10.76 11.75 19.48 26.25 19.48s26.25-8.72 26.25-19.48z\" style=\"fill:#5a5a5a;\"/>',sP[\"02\"].head=head,sP[\"02\"].mouth='<path d=\"m115.5 161.71c-8.24 0-14.46-4.15-19.19-11.25 3.37-2.44 6.51-4.57 10-6.79a5.25 5.25 0 0 1 5.48-0.17 28.19 28.19 0 0 1 3.68 2.75 28.19 28.19 0 0 1 3.68-2.75 5.25 5.25 0 0 1 5.48 0.17c3.52 2.22 6.66 4.35 10 6.79-4.74 7.1-11 11.25-19.19 11.25z\" style=\"fill:#5a5a5a;\"/>',sP[\"02\"].eyes='<path d=\"m172.7 90.75h-6.54c-0.14-0.1-0.26-0.22-0.4-0.3-4.48-2.76-22.75-2.11-33.71 1.2-1 0.3-1.91 0.61-2.75 0.94-1.8937 0.79244-3.8739 1.3597-5.9 1.69-5.5051 0.79002-10.403 0.79002-15.908 0-2.0261-0.33034-4.0063-0.89756-5.9-1.69-0.84-0.33-1.76-0.64-2.75-0.94-11-3.31-29.23-4-33.71-1.2-0.13832 0.08869-0.2688 0.18906-0.39 0.3h-6.55c-1.1046 0-2 0.89543-2 2v4.66c-0.0013 0.98185 0.49088 1.8986 1.31 2.44l1.9 1.27c0.59238 0.38889 0.93475 1.0622 0.9 1.77-0.14175 5.4854 0.88072 10.939 3 16 3.58 8.38 16 10.9 24.93 10.9 2.6976 0.0771 5.3921-0.2361 8-0.93 4.35-1.43 8.24-7.36 10.45-12.42 1.7607-3.8506 2.7493-8.009 2.91-12.24 7.3e-4 -0.7138 0.38183-1.3731 1-1.73 3.2281-1.951 6.5798-1.951 9.8079 0 0.61817 0.3569 0.99927 1.0162 1 1.73 0.16067 4.231 1.1493 8.3894 2.91 12.24 2.21 5.06 6.1 11 10.45 12.42 2.6079 0.6939 5.3024 1.0071 8 0.93 8.92 0 21.35-2.52 24.93-10.9 2.1193-5.0614 3.1418-10.515 3-16-0.0348-0.70778 0.30762-1.3811 0.9-1.77l1.9-1.27c0.81913-0.54136 1.3113-1.4582 1.31-2.44v-4.6c0.0336-1.1048-0.83521-2.0274-1.94-2.06z\" style=\"fill:#1a1a1a;'+str+'2.5;stroke:#b3b3b3;\"/>',sP[\"02\"].top='<path d=\"m124.22 13.61c-19.783 0-36.945 8.0887-39.695 24.106-15.332 0.23539-31.831 2.7712-41.663 15.782-6.0238 7.9604-7.0402 19.901-6.8476 31.724 0.46007 28.503 10.742 64.228-4.3012 89.714 16.584 5.7777 43.086 10.742 73.59 11.662v-8.6558c-1.851-0.35308-3.6592-0.78105-5.4353-1.2732-30.953-8.4632-50.672-36.635-47.259-68.669 1.5514-10.603 4.6221-19.665 10.025-27.69 5.3818-7.9925 13.267-15.717 23.892-21.41 0.40658 0.72757 1.9901 3.5843 2.4074 4.3012 7.5003 12.775 17.986 23.849 33.157 26.866 12.433 2.4609 23.849 3.4666 36.346 1.1555 4.2584-0.78106 10.667-2.3967 14.851-2.4181 14.861 33.404-1.0806 75.035-40.668 87.457-2.2255 0.70616-4.5258 1.316-6.8904 1.8189 0 2.707-0.0428 5.6493-0.0642 8.5274 23.603-0.72757 48.682-4.0444 72.874-11.234-18.521-32.152 0.81315-89.083-10.036-121.46-9.0731-26.973-38.85-40.315-64.282-40.305z\" style=\"fill:#c5c5c5;\"/><path d=\"m33.147 172.32c-2.6535 5.1143-6.088 9.9504-10.1 12.411 7.8427 10.453 17.387 19.516 28.257 26.781 16.038-10.731 35.629-17.055 54-18.606v-9.0089c-30.065-0.94155-56.108-5.8847-72.157-11.577zm164.06 0.55637c-23.731 7.0723-48.361 10.325-71.525 11.042-0.0321 3.1242-0.0535 6.2377-0.0107 9.0517 19.227 1.7226 37.908 7.8534 53.989 18.542 0.0107 0 0.0107 0 0.0214 0.0107 10.731-7.1686 20.179-16.081 27.958-26.374-4.2798-2.3967-7.832-6.9653-10.432-12.272z\" style=\"fill:#c5c5c5;\"/><path d=\"m50.02 46.5c-2.9297 1.9143-6.1313 3.8826-10.154 7.9805-14.091 14.359-16.145 27.701-6.1406 44.018 4.2049 6.8583 6.1414 13.706-0.24609 20.5-7.7143 8.1957-21.559 4.2912-21.537 16.061 0.0214 8.613 15.063 7.9178 22.531 13.984 3.7662 3.0707 5.0836 8.3992 2.0664 12.508-4.2156 5.7456-16.006 7.3715-22.629 8.9336 5.8811 10.843 13.45 20.638 22.355 29.033l0.0039 0.0234 0.0059-0.0137c2e-3 2e-3 0.0038 4e-3 0.0059 6e-3 0.0034-0.0112 0.0063-0.0219 0.0098-0.0332 14.775-12.218 20.268-20.965 49.461-28.434-17.404-10.258-30.68-27.122-24.143-35.34 4.4123-5.5444 5.6612-7.8633 6.4062-12.078 2.3582-13.339-10.208-22.335-9.2363-32.715 1.9432-8.2346 11.379-11.173 16.947-15.115 5.4577-3.9082 9.8014-8.7695 10.799-16.918-13.558-4.8896-17.609-5.8617-36.506-12.4zm140.87 19.357c-3.4404-0.91243-23.311 122.43 4.4121 133.14 8.9661-8.5809 16.552-18.584 22.404-29.658 0-0.31029-25.133-3.9922-25.979-14.018-0.10699-1.1769 0.11822-1.4855 0.86718-2.502 6.6764-9.2122 30.716-11.416 29.646-23.496-0.27818-3.1563-4.1617-5.2334-6.7402-6.4531-12.155-5.767-32.942-9.6494-15.031-24.543 9.2122-7.3505 10.43-8.4323 0.59766-14.691-9.4583-6.0238-9.394-11.993-9.7578-16.326-0.0767-0.93035-0.22089-1.4003-0.41992-1.4531z\" style=\"fill:#c5c5c5;\"/><path d=\"m133.83 39.909c-11.33 1.393-9.5492 16.204-2e-3 16.643-4.5102 10.717 9.0165 16.181 14.441 8.3125 6.562 8.6765 18.596 0.94751 14.457-8.3125 11.718-1.5381 9.2769-16.099 0-16.643 4.503-10.867-9.4883-16.101-14.457-8.3301-6.8832-9.0411-18.509-0.47321-14.439 8.3301z\" style=\"fill:#333;\"/><path d=\"m153.86 48.222c0-3.0528-2.5184-5.5648-5.5791-5.5648-3.0783 0-5.5793 2.512-5.5793 5.5648 0 3.0703 2.501 5.5648 5.5793 5.5648 3.0606 0 5.5791-2.4946 5.5791-5.5648z\" style=\"fill:#f9f9f9;\"/>',sP[\"03\"]=[],sP[\"03\"].env=env,sP[\"03\"].clo='<path d=\"m141.75 195c13.563 3.1499 26.439 8.7409 38 16.5-38.873 26.001-89.587 26.001-128.46 0 11.561-7.7591 24.437-13.35 38-16.5 8.4869 8.8011 26.21 25.619 26.21 25.619s17.603-16.972 26.25-25.619z\" style=\"fill:#d6d6d6;\"/><path d=\"m109 230.81 1.6836-14.33h9.6328l1.6836 14.33c-2.16 0.12-4.33 0.19-6.51 0.19s-4.35-0.07-6.51-0.19z\" style=\"fill:#5e5e5e;\"/><path d=\"m124.17 210.6h-17.349v5.53a3.8828 3.29 0 0 0 3.8828 3.29h9.583a3.8828 3.29 0 0 0 3.8828-3.29z\" style=\"fill:#535353;\"/><path d=\"m140.57 190.36-25.066 20.245c5.9686 3.2455 11.597 7.0814 16.8 11.45 1.5989 1.3338 3.9762 1.1189 5.31-0.48 0.21005-0.25749 0.38802-0.53956 0.52999-0.84l10.826-23.805-4-6c-0.90256-1.351-2.7298-1.7137-4.08-0.81-0.11612 0.0786-0.22641 0.16549-0.33 0.26z\" style=\"fill:#c6c6c6;\"/><path d=\"m90.434 190.36 25.066 20.245c-5.9686 3.2455-11.597 7.0814-16.8 11.45-1.5989 1.3338-3.9762 1.1189-5.31-0.48-0.21005-0.25749-0.38802-0.53956-0.52999-0.84l-10.826-23.805 4-6c0.90256-1.351 2.7298-1.7137 4.08-0.81 0.11612 0.0786 0.22641 0.16549 0.33 0.26z\" style=\"fill:#c6c6c6;\"/>',sP[\"03\"].head=head,sP[\"03\"].mouth='<path d=\"m136.21 147.09a21.77 21.77 0 0 1-40.13 0z\" style=\"fill:#fff;'+str+'3.4999px;stroke:#000;\"/>',sP[\"03\"].eyes='<path d=\"m145.39 104.7-11.52 11.2h17.26m-65.52-11.2 11.52 11.2h-17.26\" style=\"fill:none;'+str+'5.4998px;stroke:#000;\"/>',sP[\"03\"].top='<path d=\"m43.891 77.836c-5.1124 28.237 2.1347 61.004 24.792 81.332-6.2362-12.503-9.5362-33.948-9.4887-45.458-0.50203-37.473 41.439-46.335 56.149-17.614 18.8-31.2 52.825-16.872 54.062 13.714 0.56018 13.844-0.43568 25.598-7.0962 48.966 18.372-12.47 28.012-53.959 23.545-80.941-47.486-2.2552-94.831-2.5724-141.96 0z\" style=\"fill:#1a1a1a;\"/><path d=\"m111.26 12.782c-18.508 0.0791-32.594 3.6163-32.594 3.6163 24.513 5.6002 32.807 10.504 31.743 19.835-0.87227 9.702-11.092 10.875-20.811 11.554-5.2548 0.36414-10.949 0.71523-16.391 1.7525-11.862 2.2818-19.946 4.3736-24.447 11.956-1.7012 2.8662-3.7945 10.428-4.8689 16.34h141.96c-5.7242-38.563-32.557-65.073-74.595-65.054z\" style=\"fill:#1a1a1a;\"/><path d=\"m73.292 44.77c-11.788 2.2816-18.923 5.5444-23.394 13.126-2.8484 6.7586-4.8454 13.238-6.0072 19.939h141.96c-1.9772-14.576-6.8677-28.248-19.277-32.098-28.834-6.3308-63.774-6.3553-93.285-0.96761z\" style=\"fill:#1a1a1a;\"/><path d=\"m165.95 35.642c-11.178 21.829-91.89 19.36-103.98 2.3011-9.703 12.267-15.605 25.883-18.079 39.892h141.96c-3.0096-17.158-9.7424-32.688-19.902-42.193z\" style=\"fill:#1a1a1a;\"/>',sP[\"04\"]=[],sP[\"04\"].env=env,sP[\"04\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l15.71 15.75h21z\" style=\"fill:#949494;\"/><path d=\"m115.45 211.34-10.55 10.54a2.51 2.51 0 0 1-3.5599 0 2 2 0 0 1-0.26999-0.30994l-18.48-25.4 5.8901-5.8899a2.52 2.52 0 0 1 3.5199-0.0791l23.49 21.14z\" style=\"fill:#c0c0c0;\"/><path d=\"m115.45 211.34 10.55 10.54a2.51 2.51 0 0 0 3.5599 0 2 2 0 0 0 0.26999-0.30994l18.48-25.4-5.8901-5.8899a2.52 2.52 0 0 0-3.4699-0.089l-23.49 21.14z\" style=\"fill:#c0c0c0;\"/><path d=\"m158.41 199.58-10.11-3.2401v29.93q5.1601-1.5299 10.11-3.51zm-75.82 26.66v-29.9l-10.1 3.2401v23.14c3.2901 1.3199 6.67 2.4999 10.1 3.5199z\" style=\"fill:#7c7c7c;\"/>',sP[\"04\"].head=head,sP[\"04\"].mouth='<path d=\"m118.05 148.38c-1.5064 0.59192-2.595 2.0264-2.6191 3.9863-0.0574 1.3977 0.53421 3.5611 3.6758 5.7949 8.0544 4.9446 21.507 3.6862 21.255-7.1658-4.664 4.8219-10.021 5.6377-14.773 0.73907-1.2328-1.1599-2.3694-2.4032-3.9294-3.1408-1.0946-0.50424-2.2257-0.61071-3.6096-0.21337z\" style=\"fill:#333;\"/><path d=\"m133.61 154.93c3.0731-0.48816 5.5702-2.8457 5.4438-4.5059-0.47801-4.8311-5.7317-3.0917-4.3369-0.31405-2.8103-1.4445-1.8343-3.8862 0.50427-4.7324 2.0509-0.79942 5.0937 0.34314 6.2002 2.6376 2.2229 7.3422-3.4376 11.68-10.384 12.561z\" style=\"fill:#333;\"/><path d=\"m112.81 148.38c1.5064 0.59192 2.595 2.0264 2.6191 3.9863 0.0574 1.3977-0.53421 3.5611-3.6758 5.7949-8.0544 4.9446-21.507 3.6862-21.255-7.1658 4.664 4.8219 10.021 5.6377 14.773 0.73907 1.2328-1.1599 2.3694-2.4032 3.9294-3.1408 1.0946-0.50424 2.2257-0.61071 3.6096-0.21337z\" style=\"fill:#333;\"/><path d=\"m97.252 154.93c-3.0731-0.48816-5.5702-2.8457-5.4438-4.5059 0.47801-4.8311 5.7317-3.0917 4.3369-0.31405 2.8103-1.4445 1.8343-3.8862-0.50427-4.7324-2.0509-0.79942-5.0937 0.34314-6.2002 2.6376-2.2229 7.3422 3.4376 11.68 10.384 12.561z\" style=\"fill:#333;\"/>',sP[\"04\"].eyes='<path d=\"m131.64 114.09 7.5801-7.5801 7.5801 7.5801m-62.6 0 7.5801-7.5801 7.5799 7.5801\" style=\"fill:none;'+str+'6.4998px;stroke:#000;\"/>',sP[\"04\"].top='<path d=\"m137.38 11.148c-12.23 1.9593-18.511 14.606-43.436 9.4915-11.285-3.2054-16.406-3.573-20.389 0.58594-4.1548 4.3384-7.033 12.435-9.8184 21.706-2.1354 7.4136-3.7187 14.381-4.7461 21.646h112.7c-3.4878-24.293-10.822-43.281-25.182-51.061-3.5314-1.623-6.5274-2.2959-9.1289-2.3613z\" style=\"fill:#b3b3b3;\"/><path d=\"m114.37 43.383c-19.445 0.088-38.524 2.0724-52.379 5.6992-1.2766 4.5795-2.4317 10.169-3.2285 16.807h113.11c-0.83731-6.0107-1.9164-11.674-3.3184-16.924-15.229-3.8842-34.873-5.6693-54.18-5.582z\" style=\"fill:#e6e6e6;\"/><path d=\"m115.5 55.773c-58.39 0-105.73 15.476-105.73 34.57h0.0312c0 11.295 16.496 21.319 42.126 27.627-0.10331-7.7704 2.788-21.904 5.2734-31.031 6.0935-1.7168 6.9294-1.8971 13.167-2.9919 14.874-2.8256 29.99-4.2037 45.133-4.1153 15.143-0.0884 30.259 1.2897 45.133 4.1153 6.2372 1.0947 7.2065 1.2751 13.3 2.9919 2.4854 9.1267 5.3768 23.26 5.2734 31.031 25.63-6.3082 41.993-16.332 41.993-27.627h0.0312c0-19.093-47.34-34.57-105.73-34.57z\" style=\"fill:#818181;\"/><path d=\"m72.088 83.533c-6.9765 1.1147-13.357 2.856-18.439 4.3477-1.1861 7.415-2.0038 18.858-1.8926 26.293 4.3278-0.62795 10.155-1.3644 13.295-1.6465-0.40554 0.30198 2.7344-17.827 7.0371-28.994zm86.824 0c4.3028 11.167 7.4426 29.296 7.0371 28.994 3.1396 0.28213 8.9671 1.0185 13.295 1.6465 0.11119-7.4351-0.70652-18.878-1.8926-26.293-5.0822-1.4916-11.463-3.2329-18.439-4.3477z\" style=\"fill:#434343;\"/>',sP[\"05\"]=[],sP[\"05\"].env=env,sP[\"05\"].clo='<path d=\"m141.75 194.98a114.79 114.78 0 0 1 38 16.498 115.53 115.52 0 0 1-128.46 0 114.79 114.78 0 0 1 38-16.498l15.71 15.748h21z\" style=\"fill:#d2d2d2;\"/><path d=\"m70 200.88v20.77c-2.22-0.95325-4.3999-1.9698-6.5399-3.0496h-0.10088v-14.621c2.17-1.1 4.39-2.1399 6.64-3.0996z\" style=\"fill:#505050;\"/><path d=\"m161 200.88v20.77c1.9-0.80986 3.7702-1.6798 5.6201-2.5898l0.0989-0.0494 0.82005-0.40997h0.10088v-14.621c-2.17-1.1-4.39-2.1399-6.6402-3.0996z\" style=\"fill:#505050;\"/><polygon transform=\"matrix(1 0 0 .99987 4e-5 -3e-5)\" points=\"97.32 201.93 115.5 223.72 133.68 201.93\" style=\"fill:#171717;\"/><path d=\"m111.2 230.88 1.31-16.908c0.32992 1.2798 5.6399 1.2798 5.9999 0l1.3201 16.938c-1.4301 0.0494-2.8601 0.089-4.3 0.089s-2.87 0-4.3-0.089z\" style=\"fill:#171717;\"/><path d=\"m115.49 201.79v0.0692l-7.55 12.678-7.0001 11.809-19.19-26.487c0.60999-0.42995 1.22-0.89985 1.8001-1.3899a52 51.993 0 0 0 10.07-10.619l21.79 13.878z\" style=\"fill:#ebebeb;\"/><path d=\"m149.24 199.86-19.08 26.517-7.0001-11.809-7.57-12.678-0.0593-0.10086 21.94-13.998a52.21 52.203 0 0 0 10.08 10.699c0.58013 0.47009 1.1502 0.92002 1.7301 1.3399z\" style=\"fill:#ebebeb;\"/>',sP[\"05\"].head=head,sP[\"05\"].mouth='<path d=\"m122.83 151.88a10.49 10.489 0 0 1-14.66 0\" style=\"fill:none;'+str+'6.1996px;stroke:#333;\"/>',sP[\"05\"].eyes='<path d=\"m70.959 94.985h35.031c2.4086 1e-5 4.3612 1.9523 4.3612 4.3606l-2.5864 17.511c-0.3515 2.3799-1.7218 4.3606-3.8457 4.3606h-30.9c-2.1239-1e-5 -3.8457-1.9523-3.8457-4.3606l-2.5864-17.511c1e-5 -2.4082 1.9526-4.3606 4.3612-4.3606z\" style=\"fill:#1a1a1a;'+str+'3.0045px;stroke:#333;\"/><path d=\"m160.05 94.985h-35.031c-2.4086 1e-5 -4.3612 1.9523-4.3612 4.3606l2.5864 17.511c0.35149 2.3799 1.7218 4.3606 3.8457 4.3606h30.9c2.1239-1e-5 3.8457-1.9523 3.8457-4.3606l2.5864-17.511c-1e-5 -2.4082-1.9526-4.3606-4.3612-4.3606z\" style=\"fill:#1a1a1a;'+str+'3.0045px;stroke:#333;\"/><path d=\"m90.607 102.35a4.6337 4.6332 0 1 0 4.6892 4.6337 4.6337 4.6332 0 0 0-4.6892-4.6337zm49.72 0a4.6337 4.6332 0 1 0 4.6444 4.6337 4.6337 4.6332 0 0 0-4.6444-4.6337z\" style=\"fill:#1a1a1a;\"/><path d=\"m70.66 94.985h-11.775\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m172.13 94.985h-19.484\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m109.32 106.2c4.2045-2.427 9.3036-1.913 12.353-0.0258\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m148.33 109.79-5.7626-8.2324\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m156.27 105-2.403-3.4328\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m82.748 114.34-8.9489-12.784\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m91.408 109.79-5.7626-8.2324\" style=\"fill:none;'+str+'4;stroke:#fff;\"/>',sP[\"05\"].top='<path d=\"m41.835 75.131c-2.8674 12.582 1.2304 27.241 6.0238 39.031 0.25861 0.63658 0.51208 1.3075 0.79989 1.9683 0.71726 1.658 2.1184 3.9751 3.0038 3.9266 0.56895-0.0312 0.71637-1.5512 1.0228-3.1562 2.1988-19.097 8.8981-27.915 15.636-38.107 2.8783-4.0645 3.8616-7.2293 1.0644-9.9325-6.3236-3.5596-14.924-2.8574-21.367-0.67406-3.2312 1.4765-5.2427 3.4773-6.1842 6.9439zm125.65-8.5679c7.65-0.70616 19.714-0.1307 21.694 8.5679 1.455 6.4083 0.26915 17.747-1.0542 24.579-1.1961 5.3203-3.8066 14.231-7.8782 19.75-0.5565 0.44544-0.96888 0.13656-1.4159-1.1606-0.90692-3.0353-1.4298-7.8372-2.2556-10.727-3.4822-12.79-8.2195-21.875-14.429-29.94-5.5782-6.8415-4.2152-9.7207 5.3393-11.069z\" style=\"fill:#4d4d4d;\"/><path d=\"m112.27 73.826c-18.585-7.5217-34.987-14.797-48.939 5.018-4.9752 7.083-3.7876 8.8056-4.9217 0.0749-1.637-12.476-4.7505-34.174 1.9259-45.194 7.6822-12.7 19.323-13.128 31.039-5.3818 10.796 7.7784 24.277 14.647 38.015 12.219 12.732-2.2576 15.835-7.7464 15.707-19.912-0.0215-2.6-0.0963-5.2106-0.2033-7.7999 13.631 3.9267 24.609 14.776 26.513 29.049 0.88804 6.6336 0.26749 12.722-1.9259 19.013-5.9702 17.108-30.119 20.896-45.74 16.841-3.9588-1.0378-7.6822-2.4181-11.47-3.9267z\" style=\"fill:#4d4d4d;\"/>',sP[\"06\"]=[],sP[\"06\"].env=env,sP[\"06\"].clo='<path d=\"m115.5 231a115 115 0 0 0 64.23-19.5 114.79 114.79 0 0 0-38-16.5l-2.41-9a125.19 125.19 0 0 0-13.32-2.28v8.75q3.52 0.32 7 0.84l-17.5 17.48-17.5-17.48q3.45-0.52 7-0.84v-8.75a125.55 125.55 0 0 0-13.34 2.28l-2.41 9a114.79 114.79 0 0 0-38 16.5 114.94 114.94 0 0 0 64.25 19.5z\" style=\"fill:#646464;\"/><path d=\"m132.98 193.33-36.185 36.155-2.4-0.42 36.108-36.081z\" style=\"fill:#e3e3e3;\"/>',sP[\"06\"].head=head,sP[\"06\"].mouth='<path d=\"m127.84 146.73c-2.24 8.93-6.92 15.08-12.34 15.08s-10.1-6.15-12.34-15.08z\" style=\"fill:#fff;'+str+'2.9999px;stroke:#1a1a1a;\"/>',sP[\"06\"].eyes='<path d=\"m129.31 114.14 20-5.37m-47.66 5.37-20-5.37\" style=\"fill:none;'+str+'4.9998px;stroke:#1a1a1a;\"/>',sP[\"06\"].top='<path d=\"m169.65 90.998c3.137 11.94 4.9371 36.484-3.4118 58.213l5.129 3.1164c10.044-15.199 14.959-39.163 13.943-61.33z\" style=\"fill:#1a1a1a;\"/><path d=\"m45.081 90.989c-0.88085 4.9304-0.87534 14.953-0.15027 21.75 2.1318 19.98 16.671 42.505 16.671 42.505l5.7352-4.4331s-13.244-31.348-6.0571-52.751c0.52108-1.5517 0.95592-2.916 1.3462-4.1835z\" style=\"fill:#1a1a1a;\"/><path d=\"m117 3.4883c-8.2136-0.19887-19.13 7.933-18.494 9.3516 1.6214 3.6186 11.176 22.55 11.889 23.963h10.148c2.6022-6.3102 11.32-26.531 11.32-26.531s-4.1382-4.138-12.416-6.4375c-0.77605-0.21556-1.5976-0.32513-2.4473-0.3457z\" style=\"fill:#1a1a1a;\"/><path d=\"m115.95 4.5428c-3.1563 0-6.3123 0.57462-9.2165 1.715-5.8084 2.2817-10.532 6.808-12.779 12.245v-5e-3c-1.8166 4.397-2.0233 9.3441-0.58058 13.857 0.69352 2.1687 1.7693 4.2296 3.1533 6.0968h38.893c0.71032-0.95769 1.3441-1.9641 1.8787-3.0144 2.6811-5.2673 2.9296-11.542 0.67253-16.975-2.257-5.4337-6.9893-9.9522-12.802-12.224-2.9064-1.1335-6.0633-1.6987-9.2196-1.6956z\" style=\"fill:#1a1a1a;\"/><path d=\"m92.512 28.125c0.13387 1.4318 0.41877 2.8511 0.85962 4.2306 1.4429 4.5127 4.5278 8.5654 8.6411 11.353 4.1135 2.7873 9.2311 4.2913 14.336 4.2165 5.1052-0.0764 10.168-1.7333 14.181-4.6419 2.8754-2.0834 5.2132-4.7932 6.7665-7.8447 1.2005-2.3586 1.9085-4.9188 2.127-7.5156-15.037-2.6407-31.421-3.4671-46.912 0.20253z\" style=\"fill:#b3b3b3;\"/><path d=\"m34.426 90.63c14.714 4.0779 22.683 6.4085 45.254 7.4257 2.5318-18.185 4.6689-28.672 10.023-38.352 3.2025 13.403 3.8346 25.22 2.9106 42.253l11.172-0.23161c1.4706-11.886 3.8989-29.213 2.1636-42.021 10.416 12.631 11.373 23.624 13.077 39.726 30.174-0.76004 59.808-4.5121 77.845-10.128-10.76-38.608-41.475-55.66-80.38-56.104-38.182-0.45134-74.543 22.405-82.065 57.432z\" style=\"fill:#1a1a1a;\"/>',sP[\"07\"]=[],sP[\"07\"].env=env,sP[\"07\"].clo='<path d=\"m88.18 194.11c-4.2079 1.021-8.3545 2.2792-12.42 3.7695v26.072a115.5 115.5 0 0 0 79.48 0v-26.072c-4.0858-1.4904-8.2529-2.7486-12.48-3.7695v8.7051c0 9.3888-7.6112 17-17 17h-20.58c-9.3888 0-17-7.6112-17-17v-8.7051z\" style=\"fill:#efefef;\"/>',sP[\"07\"].head=head,sP[\"07\"].mouth='<polygon points=\"121.61 160.74 109.39 160.74 115.5 171.31\" style=\"fill:#797979;\"/><path d=\"m132.64 144.06a34.42 34.42 0 0 1-34.24 0\" style=\"fill:none;'+str+'5.9998px;stroke:#000;\"/>',sP[\"07\"].eyes='<path d=\"m170.25 100c1.69 9.62-4.79 29.23-22.4 29.23-6.81 0-15-3.66-20.23-10-4.34-5.33-7.56-12.87-6.2-19.45 1.63-7.89 7.07-11.45 14.67-12.92a68.16 68.16 0 0 1 12.52-1c10.77 0 19.78 3.61 21.64 14.22z\" style=\"fill:#565656;stroke-width:3.99px;stroke:#000;\"/><path d=\"m60.75 100c-1.69 9.62 4.79 29.23 22.4 29.23 6.81 0 15-3.66 20.23-10 4.34-5.33 7.56-12.87 6.2-19.45-1.63-7.89-7.07-11.45-14.67-12.92a68.16 68.16 0 0 0-12.52-1c-10.77 0-19.78 3.61-21.64 14.22z\" style=\"fill:#565656;stroke-width:3.99px;stroke:#000;\"/><line x1=\"100.2\" x2=\"130.8\" y1=\"87.92\" y2=\"87.92\" style=\"fill:none;'+str+'3.99px;stroke:#000;\"/><path d=\"m109.87 101.73c0-2.59 2.52-4.69 5.63-4.69s5.63 2.1 5.63 4.69\" style=\"fill:none;stroke-width:3.99px;stroke:#000;\"/>',sP[\"07\"].top='<path d=\"m30.622 70.381c2.0971-3.9374 4.6649-7.9604 7.6822-12.037 3.0172-4.0765 6.0987-7.6929 9.2229-10.817l22.897 22.897c-4.4402 4.4403-8.2278 9.5439-11.213 15.14z\" style=\"fill:#999;\"/><path d=\"m160.58 70.423 22.907-22.897c3.1242 3.1242 6.2056 6.7406 9.2229 10.817 3.0065 4.0765 5.5744 8.0994 7.6715 12.037l-28.578 15.182c-2.9851-5.5958-6.7727-10.689-11.224-15.14z\" style=\"fill:#999;\"/><path d=\"m92.411 15.247c3.8197-0.87736 7.6715-1.5407 11.534-1.9794 4.0765-0.46007 7.9282-0.69546 11.555-0.69546 1.53 0 3.1563 0.0428 4.8682 0.1391l1.851 22.255 5.767-21.57c3.1028 0.37449 6.0666 0.86666 8.8912 1.4658l-10.55 49.763c-1.9259-0.41729-3.702-0.70617-5.3176-0.87736-1.423-0.14979-3.2633-0.22468-5.5102-0.22468-2.2362 0-4.237 0.10699-5.981 0.29958-1.9473 0.22469-3.8732 0.55636-5.767 0.99504z\" style=\"fill:#999;\"/><path d=\"m92.411 15.247c1.9152-0.43869 4.023-0.84526 6.3233-1.2304 2.065-0.34238 4.1514-0.62057 6.2698-0.84525l5.1785 50.565c-1.0913 0.10699-2.1827 0.25679-3.2954 0.43868-0.86665 0.14979-1.9152 0.36378-3.1349 0.64196z\" style=\"fill:#4d4d4d;\"/>',sP[\"08\"]=[],sP[\"08\"].env=env,sP[\"08\"].clo='<path d=\"m141.89 195a114.79 114.79 0 0 1 38 16.5 115.55 115.55 0 0 1-128.47 0 114.79 114.79 0 0 1 38-16.5l15.75 15.75h21z\" style=\"fill:#353535;\"/><path d=\"m146.4 196.14-17.4 17.44-1.17 1.17h-24.34l-1.18-1.17-17.43-17.44c1.49-0.41 3-0.79 4.51-1.14l4.67-1 12.74 12.74h17.69l12.73-12.74 4.67 1c1.52 0.35 3 0.73 4.51 1.14z\" style=\"fill:#919191;\"/>',sP[\"08\"].head=head,sP[\"08\"].mouth='<path d=\"m115.68 160.64c7.08 0 13.11-4.93 15.46-11.84a2.14 2.14 0 0 0-1.51-2.6101 2.3 2.3 0 0 0-0.73995-0.0593h-26.42a2.12 2.12 0 0 0-2.31 1.9099 1.85 1.85 0 0 0 0.0593 0.73995c2.3401 6.9301 8.3802 11.86 15.46 11.86z\" style=\"fill:#2f2f2f;\"/>',sP[\"08\"].eyes='<path d=\"m145.38 95.628c-5.1601 2.2597-11.03 2.2597-16.19 0m-47.29 1.75c5.1755-2.2694 11.065-2.2694 16.24 0\" style=\"fill:none;'+str+'5.9998px;stroke:#5e5e5e;\"/><path d=\"m90.016 106.28c-4.4506-0.0105-6.6902 5.3657-3.5508 8.5195 3.1394 3.1539 8.5252 0.93887 8.5352-3.5117 0.0063-2.7522-2.2204-4.9898-4.9727-4.9961l-0.011719-0.01172zm47.281 0c-4.4506-0.0105-6.6902 5.3657-3.5508 8.5195 3.1394 3.1539 8.5252 0.93887 8.5352-3.5117 6e-3 -2.7522-2.2204-4.9898-4.9727-4.9961l-0.01171-0.01172z\" style=\"fill:#1a1a1a;\"/>',sP[\"08\"].top='<path d=\"m108.37 22.019c-6.2698-12.829-17.151-13.396-18.949 1.1769-11.448-9.4583-26.021-4.483-20.361 12.422-12.251-7.9282-24.919 1.7761-17.076 20.853-27.08 2.3646-22.715 24.726-10.111 31.435-9.9002 3.3566-10.701 9.4006-8.464 14.497 2.6574 4.7842 9.0126 6.4737 11.545 9.6519-6.624 0.59419-8.4112 5.6011-5.7404 9.5192 1.6896 2.4787 5.2756 4.2218 8.5971 5.5455 1.0485 0.40658 3.702 1.2732 3.9053 2.4181 0.18744 1.2156-6.7884 3.0055-5.7281 5.2612 0.60648 1.4227 1.7764 2.7151 2.6466 3.7156 1.2807 1.6595 10.755 8.0351 9.4583 4.2049-1.0271-3.7234-2.2148-7.4682-3.1456-11.192-1.1662-5.3069-1.7868-10.721-1.102-16.156 1.4223-5.455 5.069-4.4265 7.7837-8.3588 3.5264-5.7505 2.0296-11.614 2.124-13.575 0.107-1.7868 1.5407-1.1876 3.1884-1.4337 4.3868-0.64196 7.0081-2.1185 8.8377-6.2698 0.77035-1.9259 0.62057-9.7578 0.52426-11.78 0.36378-4.6328 4.1835 0 6.548 0.64196 3.2633 0.88805 6.8797 0.21399 9.0731-2.5037 1.7547-2.3753 2.0864-2.8888 4.6114-0.80245 2.6856 2.2148 4.0979 3.1349 7.6929 3.274 5.5637 0.20329 8.7735-6.2698 11.32-5.6386 3.5201 0.87735 3.6057 5.4567 10.261 4.8682 2.386-0.20329 3.8304-0.86665 5.4032-2.6428 0.88805-0.99505 1.958-2.5037 3.4345-2.6214 1.4658-0.1177 2.3218 2.3646 3.0065 3.4452 1.1926 2.6755 4.0295 3.6513 6.2377 3.3168 1.958-0.17119 3.854-1.4115 5.4268-2.4707 0.99679-0.66102 1.8284-0.81128 1.9256 0.2071 0.29592 2.2271 0.0862 7.7025 0.1596 8.4821 0.10556 8.4609 5.37 10.569 13.223 10.333-0.31871 3.7464 0.0583 11.28 5.4353 14.562 3.9481 2.7604 6.6657 1.2732 6.7299 7.8534 7e-3 6.1914-0.43693 13.061-1.2946 18.189-0.69547 4.0444-1.2412 6.4838-2.5251 10.378-0.64196 1.9152-0.81315 1.9687 1.4123 1.0699 7.1472-3.1456 10.539-11.48 8.3562-18.842-0.43869-2.0436 0.84525-1.7226 2.8781-2.6106 9.5248-4.2363 8.1264-11.335-0.75967-14.273 11.988-3.0926 13.886-8.9002 6.6871-15.375 7.3077-5.9168 3.6378-16.177-2.8032-16.991 12.422-7.0937 5.7349-22.062-5.1036-18.499 4.1728-12.037-5.5637-26.203-21.121-16.894 6.9653-11.373 2.065-22.661-12.101-10.785-3.4559-18.382-15.14-16.584-23.902-5.018 0.09435-20.075-16.001-17.42-18.146-2.5892z\" style=\"fill:#1a1a1a;\"/><path d=\"m5.4353 80.502c7.4468 9.1373 15.632 8.8912 15.632 8.8912s-6.0772 3.7983-6.8369 9.8755c-0.75966 6.088 4.5579 9.6295 8.0994 10.646 3.5522 1.0058 7.0937-2.7925 7.0937-2.7925s-5.8312 10.646-1.5193 15.964c4.3012 5.3176 11.908 3.0386 11.908 3.0386s-5.3283 10.132 1.0057 14.187c5.8312 3.7234 18.542 7.6715 20.511 8.2706-6.0666-9.7472-9.576-21.249-9.576-33.575v-0.0428c0-35.201 28.546-63.747 63.747-63.747 35.212 0 63.758 28.546 63.758 63.747 0 12.476-3.5843 24.116-9.7899 33.949h0.53496s13.931-1.0057 16.21-9.3727c2.279-8.3562 0.75967-9.8756 0.75967-9.8756s10.635 2.0329 13.417-7.5966l2.7926-9.6295s10.132 0 10.892-7.083c0.75963-7.0937-7.0295-12.411-7.0295-12.411s11.459 0.82385 14.498-10.453c1.0164-3.7555 0.83456-8.2171 0.1391-12.497-17.665-41.161-58.569-69.995-106.18-69.995-30.632 0-60.034 12.187-81.679 33.831v0.0107c-13.171 13.171-22.833 29.22-28.386 46.66z\" style=\"fill:#1a1a1a;\"/>',sP[\"09\"]=[],sP[\"09\"].env=env,sP[\"09\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l13.85 13.85v-1.2h17.86v3.1h5z\" style=\"fill:#333;\"/><polygon points=\"115.36 207.65 123.37 224.2 148.3 196.86 143.08 189.95\" style=\"fill:#fff;\"/><polygon points=\"115.36 207.65 107.35 224.2 82.42 196.86 87.63 189.95\" style=\"fill:#fff;\"/>',sP[\"09\"].head=head,sP[\"09\"].mouth='<path d=\"m126.28 149.82c-6.16 2.43-15.52 2.42-21.56 0\" style=\"fill:none;'+str+'5.9998px;stroke:#1c1c1c;\"/>',sP[\"09\"].eyes='<path d=\"m83.527 103.98v10h10v-10h-10zm53.945 0v10h10v-10h-10z\" style=\"fill:#1a1a1a;\"/><path d=\"m56.621 94.906v11.688h5.3418v6.4922h5.3418v6.1055h5.3223v6.2324h26.846v-6.2324h5.3047v-6.1055h5.1445v-6.0039h11.154v6.0039h5.1446v6.1055h5.3066v6.2324h26.846v-6.2324h5.3203v-6.1055h5.3438v-6.4922h5.3418v-11.688z\" style=\"fill:#1a1a1a;\"/><path d=\"m67.387 100.65v5.9394h5.1992v-5.9394zm5.1992 5.9394v6.4922h5.4238v-6.4922zm5.4238 0h5.1992v-5.9394h-5.1992zm5.1992 0v6.4922h5.4258v-6.4922zm5.4258 6.4922v6.1055h5.1426v-6.1055zm-10.625 0v6.1055h5.1445v-6.1055zm48.281-12.432v5.9394h5.1992v-5.9394zm5.1992 5.9394v6.4922h5.4238v-6.4922zm5.4238 0h5.1992v-5.9394h-5.1992zm5.1992 0v6.4922h5.4258v-6.4922zm5.4258 6.4922v6.1055h5.1426v-6.1055zm-10.625 0v6.1055h5.1445v-6.1055z\" style=\"fill:#fff;\"/>',sP[\"09\"].top='<path d=\"m157.79 67.5a61.31 61.31 0 0 1-42.79 17.43h-55.7c18.16-37.74 68.27-46.85 98.49-17.43z\" style=\"fill:#4d4d4d;\"/><path d=\"m122.93 7.0078c-10.503-0.15729-21.09 1.6448-29.545 5.4316-17.141 7.8999-32.169 23.297-43.973 38.779-5.1703 6.8631-8.7779 13.46-8.1855 18.395 0.93114 12.312 10.372 26.483 11.068 36.9 15.663-72.081 105.99-70.452 124.91-7.0525l4e-3 0.0156c5.616-10.926 8.0682-20.188 8.352-27.653 0.43654-15.607-7.8088-21.149-21.735-28.249 1.7934-3.7704 1.7273-7.5023 2.0625-10.154-0.79964-7.8568-3.6796-13.51-10.43-17.758-5.9434-3.7404-13.06-6.0867-18.463-7.2266-4.5319-0.87895-9.2901-1.3562-14.064-1.4277z\" style=\"fill:#4d4d4d;\"/><path d=\"m42.426 75.338c0.52158 18.689 10.557 74.338-18.115 101.25 12.38 10.603 28.352 19.061 46.025 24.594 11.032-4.6874 22.88-7.4147 34.817-8.5046l0.0633-14.477c-22.49-4.3813-40.766-18.898-48.862-39.967-8.096-21.07-4.7931-44.72 9.2478-62.393zm124.67 2.7207c7.8997 10.886 11.743 24.64 11.787 37.441-0.36632 30.178-22.389 57.576-53.12 62.708l0.0238 14.471c12.282 1.1216 24.518 3.9888 35.825 8.9128 15.488-5.1448 30.007-13.325 42.396-25.043-13.136-22.051-23.282-63.045-18.694-101.55z\" style=\"fill:#4d4d4d;\"/><path d=\"m143.61 46.383c-11.639 0.12482-20.998 1.8906-20.998 1.8906l-9 3.5059c0.63003-0.0191 1.2603-0.0289 1.8906-0.0293h0.0996c35.169 0.055 60.959 27.235 63.283 63.383 7.4e-4 31.157-22.742 57.213-53.106 63.079l-0.0216 14.498c11.567 1.0563 23.154 3.6067 33.887 8.0463 35.952-15.315 55.082-52.303 36.709-68.279-5.018-7.9035-10.44-15.409-9.5544-23.03 5.0545-50.452 0.39626-63.561-43.189-63.064zm-69.966 21.09c-15.286 3.244-17.096 3.73-31.734 6.6953 3.0304 13.081 3.0583 22.274 1.2085 30.012-3.8004 11.361-8.9712 19.787-12.286 28.764-6.8823 22.459-2.9157 31.982 12.093 46.165 8.6595 8.0693 19.861 16.209 30.939 20.647 2.669-1.0316 5.3729-1.9628 8.106-2.792 7.4979-2.275 15.388-3.6535 23.206-4.3673l0.0433-14.393c-23.933-4.5937-44.283-21.98-50.77-45.817-6.3319-23.265 0.51104-48.752 19.195-64.914z\" style=\"fill:#4d4d4d;\"/>',sP[10]=[],sP[10].env=env,sP[10].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l15.71 15.75h21z\" style=\"fill:#666;\"/><path d=\"m89.291 195a114.79 114.79 0 0 0-38.002 16.5 115.53 115.53 0 0 0 38.002 16.482zm52.434 0v32.982a115.53 115.53 0 0 0 38-16.482 114.79 114.79 0 0 0-38-16.5z\" style=\"fill:#999;\"/><path d=\"m157.15 199.75c0.2548 7.4501 1.54 14.855 4.9512 21.432a115.53 115.53 0 0 0 17.619-9.6797 114.79 114.79 0 0 0-22.57-11.752zm-83.295 2e-3a114.79 114.79 0 0 0-22.57 11.75 115.53 115.53 0 0 0 17.621 9.6797c3.411-6.5765 4.6944-13.98 4.9492-21.43z\" style=\"fill:#ccc;\"/><path d=\"m99.197 204.97v2e-3l16.302 16.301 16.301-16.301v-2e-3z\" style=\"fill:#fff;\"/>',sP[10].head=head,sP[10].mouth='<path d=\"m100.19 152.09c2.8726 4.0616 9.8095 4.7232 15.119-0.45432 5.0656 4.5134 11.167 5.6898 15.495 0.31458\" style=\"fill:none;'+str+'5.8949;stroke:#333;\"/><path d=\"m109.67 135.53c-0.9758 0.0743-2.05 0.45327-3.1485 0.99414-4.3235 2.1399-7.3862 4.2557-10.639 7.1406-0.6251 0.5715 0.1168 0.77785 1.4238 0.87304 5.6967 0.0536 14.384 0.41404 15.098-0.875 1.9251-2.0788 1.7969-5.3303-0.1816-7.3008-0.701-0.67533-1.5769-0.90632-2.5527-0.83203zm11.656 0c-0.9758-0.0743-1.8517 0.1567-2.5527 0.83203-1.9785 1.9705-2.1067 5.222-0.1817 7.3008 0.7142 1.289 9.401 0.9286 15.098 0.875 1.307-0.0952 2.0489-0.30154 1.4238-0.87304-3.2524-2.8849-6.3151-5.0007-10.639-7.1406-1.0985-0.54087-2.1727-0.91985-3.1485-0.99414z\" style=\"fill:#333;\"/>',sP[10].eyes='<path d=\"m97.56 107.84a10.63 10.63 0 0 1-15 0.13l-0.13-0.13\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/><path d=\"m148.59 107.84a10.63 10.63 0 0 1-15 0.13l-0.13-0.13\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/>',sP[10].top='<path d=\"m41.668 87.073c-9.2319-0.0231-11.63 6.5104 2.2676 17.66-14.015 1.1231-4.3662 16.457 4.875 24.66 4.0686 3.0199 6.4647 5.4657 5.5078 1.1348-1.2079-4.9178-1.8184-9.9634-1.8184-15.027 3.26e-4 -7.5692 1.2547-15.016 3.7883-22.183 0.57048-1.7876 1.0689-2.0306-0.37721-2.6839-5.5405-2.4478-10.375-3.5511-14.243-3.5608z\" style=\"fill:#ccc;\"/><path d=\"m185.48 89.513c-2.4418-0.11189-5.4618 0.81187-9.5148 3.2121-1.314 0.81729-0.70075 1.995-0.32301 3.2653 3.194 10.982 3.8215 22.462 1.2538 33.628-0.31613 1.688-0.47649 3.569 2.6953 1.3516 7.7016-5.371 19.17-18.734 16.918-26.105-1.4251-3.9177-11.4-0.35546-11.4-0.35546s4.987-4.2755 5.3437-9.6191c0.20048-3.0057-1.5237-5.2189-4.9726-5.377z\" style=\"fill:#ccc;\"/><path d=\"m91.689 36.108c-3.7298-7.3864-9.5859-10.504-17.578-6.7891-9.5194 4.5907-15.629 18.444-13.416 29.232 0 0-8.5511-4.9878-18.17-3.5625-19.623 8.094-1.4102 29.869 10.817 37.342 2.075 1.297 2.5792 1.7432 3.4291-0.37685 2.6746-6.5374 6.1886-12.722 11.297-17.709 4.1039 8.7427 14.629 4.1809 20.006-0.14062 4.4873 9.6838 10.377 6.3535 15.377 3.4785 4.0764 7.8829 10.756 7.25 17.631 0.0625 4.875 4.5625 14.713 4.1867 15.555-3.426 8.4753 2.6244 14.012 10.437 22.962-1.4764 8.8552 6.8221 14.407 16.853 17.122 27.51 0.34 1.554 1.175 0.85565 2.2212 0.44315 10.255-4.286 22.842-15.749 15.705-23.975-3.5623-3.5623-13.539-2.1387-13.539-2.1387s6.77-7.1233 9.2637-18.168c2.4936-11.043-23.514-4.9883-23.514-4.9883s7.4818-5.6993 12.113-13.537c4.6314-7.8378-2.4943-11.756-11.045-11.043-8.5496 0.71204-17.1 7.4805-17.1 7.4805s3.3946-7.8055-3.5625-12.826c-9.5935-6.9234-23.869 6.4121-23.869 6.4121-4.2562-26.835-24.872-6.386-31.707 8.1953z\" style=\"fill:#ccc;\"/>',sP[11]=[],sP[11].env=env,sP[11].clo='<path d=\"m116 203.13c-0.12 0-0.25 0.12-0.49 0.12s-0.25-0.12-0.49-0.12zm-27.29-8c0.87-0.25 1.72-0.47 2.56-0.69a32.37 32.37 0 0 0 0.3 8.57 21.5 21.5 0 0 0 7 6.88c6.41-6 16.8-6.64 16.8-6.64s10.5 0.58 17 6.69a21.61 21.61 0 0 0 6.93-6.66 32.34 32.34 0 0 0 0.35-8.84l2.13 0.56a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.64 114.64 0 0 1 37.38-16.37z\" style=\"fill:#e9e9e9;\"/><path d=\"m126.15 206-3.92 7.83h-13.46l-3.92-7.83a36.59 36.59 0 0 1 10.65-2.7 35.66 35.66 0 0 1 10.65 2.7z\" style=\"fill:#818181;\"/><path d=\"m124.54 230.65-2.18-16.74h-13.47l-2.19 16.76c2.9 0.22 5.84 0.33 8.8 0.33s6.06-0.12 9-0.35z\" style=\"fill:#989898;\"/><path d=\"m134.84 186s0.86 9.8-19.34 17.26c0 0 15.79 0.86 20.57 11.76 0.12 0.49 9.3-23.26-1.23-29z\" style=\"fill:#fff;\"/><path d=\"m96.16 186c-10.41 5.76-1.35 29.39-1.1 29 4.65-10.78 20.56-11.76 20.56-11.76-20.32-7.45-19.46-17.24-19.46-17.24z\" style=\"fill:#fff;\"/>',sP[11].head=head,sP[11].mouth='<path d=\"m118.57 165.14a8.66 8.66 0 0 0-2.76-4.23h-0.62a8 8 0 0 0-2.76 4.22c-0.52 1.89 2.07 10.61 2.76 12.53h0.62c0.64-1.76 3.19-10.82 2.76-12.52z\" style=\"fill:#333;\"/><path d=\"m102.81 152.24a2.4921 2.4921 0 1 1 1.19-4.84l0.21 0.06a37.1 37.1 0 0 0 5.43 1.12 44.52 44.52 0 0 0 11.76 0 37.1 37.1 0 0 0 5.43-1.12 2.4903 2.4903 0 0 1 1.59 4.72l-0.21 0.06a43.08 43.08 0 0 1-6.15 1.29 48.55 48.55 0 0 1-13.08 0 42.79 42.79 0 0 1-6.17-1.29z\" style=\"fill:#333;\"/>',sP[11].eyes='<path d=\"m86.851 100.39a4.94 4.94 0 1 0 4.9297 5 5 5 0 0 0-4.9297-5zm57.221 0a4.94 4.94 0 1 0 4.9394 4.9394 4.94 4.94 0 0 0-4.9394-4.9394z\" style=\"fill:#333;\"/><path d=\"m86.207 89.365c-25.504 0-21.503 6.8561-21.035 19.596 0.80177 18.121 17.763 16.514 21.201 16.639 14.758-0.041 20.518-8.227 22.951-22.932 1.8166-10.731-9.251-13.174-23.117-13.303zm58.598 0c-13.866 0.1284-24.936 2.5717-23.119 13.303 2.4332 14.705 8.1936 22.891 22.951 22.932 3.4383-0.125 20.399 1.4828 21.201-16.639 0-18.965-0.47958-19.596-21.033-19.596z\" style=\"fill:#4d4d4d;\"/><path d=\"m169.87 90.255a0.51 0.51 0 0 0-0.43991-0.52 167.64 167.64 0 0 0-22.6-1.6801c-12 0-27.47 3.7601-30.17 3.7601h-2.4c-1.2499 0-5.29-0.80996-10.45-1.6801a124.35 124.35 0 0 0-19.72-2.08 166.18 166.18 0 0 0-19.31 1.24c-1.56 0.17999-2.69 0.35009-3.2899 0.44009a0.51 0.51 0 0 0-0.44007 0.52l-0.091 6.4501a0.57 0.57 0 0 0 0.33012 0.52l0.73994 0.23992c1.08 0.41992 1.0001 19.85 6.78 24.71 3.4401 2.8599 6.51 4.4899 19.42 4.4899 7.4699 0 12.17-1.9999 16.63-8 3.21-4.32 6.0999-14.55 6.0999-14.55 0.82006-4.07 3.7702-4.52 4.43-4.5801h0.12068c0.11078 0 3.66 0.0593 4.57 4.5801 0 0 2.8599 10.22 6.0699 14.54 4.4601 5.9999 9.1601 8 16.63 8 12.91 0 16-1.63 19.42-4.4901 5.7898-4.86 5.6998-24.29 6.78-24.71l0.73994-0.23993a0.57 0.57 0 0 0 0.32996-0.52l-0.12068-6.4501zm-65 23c-1.9101 4.5-6.8 10.29-13.7 10.64-20.7 0.99985-21.65-4.7401-23-9.3201a31.45 31.45 0 0 1-1.2099-13.18c0.53997-4.5799 1.7-7.2699 3.7801-8.6201a9.3 9.3 0 0 1 4.3499-1.51 85.07 85.07 0 0 1 11.4-0.52 59.23 59.23 0 0 1 9.2099 0.69999c7.37 1.2 12.35 3.7001 12.35 6.1601a46.12 46.12 0 0 1-3.23 15.64zm58 1.3201c-1.34 4.5799-2.29 10.36-23 9.3201-6.91-0.3501-11.81-6.1401-13.71-10.64a46.35 46.35 0 0 1-3.22-15.64c0-3.39 9.43-6.8599 21.56-6.8599 12.13 0 14 0.89996 15.75 1.9999 2.08 1.3502 3.2398 4 3.77 8.6201a31.23 31.23 0 0 1-1.1601 13.17z\" style=\"fill:#333;\"/>',sP[11].top='<path d=\"m156.1 15.879c-0.38556 5.3015-1.7049 9.4762-3.6602 12.76-0.41226 23.773-9.2343 35.229-15.154 42.797l15.062-4.6641c-0.66253 2.8135-2.4628 7.156-0.34766 12.137 1.6334-2.3144 7.9395-5.807 13-3.3477-0.43442 3.5532-0.95271 7.094-1.4512 10.639l8.9648 0.85937c0.83453 3.8792 0.51719 9.3449-0.59961 11.736l5.5508 2.0098c0.20764 2.7646 0.10001 5.4906-0.74609 8.875 8.4545-1.7225 14.213-4.3896 19.641-13.188 2.8639-4.7524 4.9018-10.483 4.7305-17.242-4.1612 4.916-9.6484 7.2485-15.26 10.109 6.507-11.065 8.8648-22.768 8.1367-30.58-7.3456 10.251-11.649 13.06-19.918 16.9 1.2386-11.4 5.5249-18.582 12.461-27.27-11.392-1.3025-16.301 1.4749-24.891 6.4395 4.5466-14.036 2.2208-26.679-5.5195-38.971zm-117.76 28.682c9.3378 3.6366 19.581 9.0234 21.129 18.549-7.6182 0.0414-14.897-3.5072-20.242-7.1894-0.15967 8.2309 2.8451 12.252 6.7734 19.08-7.2127 1.6129-12.084 4.8315-17.471 9.4805 7.2948-0.15715 12.299-1.0502 16.891 4.2793-6.0512 5.0164-11.99 10.79-11.99 19.24 9.257-6.1688 12.495-5.9486 21.137-2.2012 1.2906-8.0996 2.3978-14.872 2.7869-16.435 2.4719-0.73247 3.5247-0.94807 5.9221-1.2938-2.1556-7.4281 1.0996-9.5176 2.4141-11.6l7.543 1.5059c-3.9093-6.1699 2.6565-12.483 7.1445-15.51-4.4474-7.2082-5.6649-11.558-7.377-16.797-11.198-8.2947-23.895-6.2742-34.66-1.1094z\" style=\"fill:#f9f9f9;\"/><path d=\"m101.9 7.6408c-10.047 6.2416-12.441 28.646-12.131 33.289-6.9249-5.8258-7.8992-13.75-7.7695-19.203-9.6235 6.0158-10.666 14.421-9 23.943 1.1061 5.1411 2.3972 10.461 7.377 16.797 2e-3 -1e-3 4e-3 -3e-3 6e-3 -4e-3 2.7742 2.8742 5.4644 5.5941 8.3477 8.3574 0.41187-6.971 0.45449-13.622 7.1856-15.824 3.9532 2.8169 7.4123 5.9388 11.084 9.1035l10.559-10.25c5.6447 3.961 5.4531 6.5652 6.5215 14.104 2.153-1.7546 8.719-9.0037 15.844-10.139 0.98706 4.1261-0.99388 10.308-2.6387 13.621 0 0 14.32-11.846 15.195-27.971 0.33968-6.2599 0.2237-11.146-0.041-14.826-3.2125 5.5652-8.7118 8.7799-13.789 10.15-4.2715-9.2486-2.4785-21.435-0.48047-29.309-12.21 3.0195-20.932 18.337-22.172 25.07-9.2678-7.397-13.605-16.146-14.098-26.91z\" style=\"fill:#f9f9f9;\"/>',sP[12]=[],sP[12].env=env,sP[12].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l26.23 13 26.27-13z\" style=\"fill:#131111;\"/><polygon points=\"115.5 208.03 115.5 207.74 82.72 188.91 80.45 198.86 101.46 222.72\" style=\"fill:#cbcbcb;\"/><polygon points=\"115.5 208.03 115.5 207.74 148.28 188.91 150.55 198.86 129.54 222.72\" style=\"fill:#cbcbcb;\"/>',sP[12].head=head,sP[12].mouth='<path d=\"m123.07 154.05a10.61 10.61 0 0 1-15 0.14l-0.14-0.14\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/><path d=\"m120.1 142.22 0.19-0.11c3-1.87 5.45-2.4 7.3-1.46 2.15 1.1 3.12 3.84 4.84 5.5a5.18 5.18 0 0 0 6.68 0.73m-28.21-4.66-0.19-0.11c-3-1.87-5.45-2.4-7.3-1.46-2.15 1.1-3.12 3.84-4.84 5.5a5.18 5.18 0 0 1-6.68 0.73\" style=\"fill:none;'+str+'5.9998px;stroke:#4d4d4d;\"/>',sP[12].eyes='<path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45c0 3.0002 2.74 5.3001 6.0001 5.3001h32.36c7.0901 0 7.44-19.43 13.82-19.43s6.8801 19.44 13.83 19.44h32.36c3.37 0 5.9999-2.4 5.9999-5.3001v-28.46c0.14043-2.9001-2.6-5.2999-5.9-5.2999z\" style=\"fill:#8f8f8f;\"/><path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45l104.55-28.45c0-2.9001-2.74-5.2999-5.9999-5.2999z\" style=\"fill:#e3e3e3;\"/><path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45c0 3.0002 2.74 5.3001 6.0001 5.3001h32.36c7.0901 0 7.44-19.43 13.82-19.43s6.8801 19.44 13.83 19.44h32.36c3.37 0 5.9999-2.4 5.9999-5.3001v-28.46c0.14043-2.9001-2.6-5.2999-5.9-5.2999z\" style=\"fill:none;'+str+'4.0026px;stroke:#232323;\"/>',sP[12].top='<path d=\"m69.834 33.826c-8.2001-0.0626-16.444 2.6753-23.152 7.7038-8.5298 6.9899-12.159 19.61-12.329 32.68-0.2041 15.476 1.6092 34.752 1.7464 51.915 0.10414 13.047 0.53485 25.984-2.9197 33.995-2.4994 5.81-9.0955 9.6006-16.196 12.311 7.9599 2.8301 25.009 2.8094 33.58 1.5393 10.8-1.59 17.238-6.5294 17.159-22.699-0.0911-15.93-1.3894-29.23-1.559-45.83-0.3208-11.983-1.569-24.291 4.9774-33.987 4.2139-6.1265 10.452-10.521 17.116-13.588 3.9292-1.8575 8.0384-3.3083 12.263-4.3297-6.8718-13.574-18.732-19.618-30.687-19.709z\" style=\"fill:#b3b3b3;\"/><path d=\"m90.8 76.246c11.918-17.125 31.996-23.218 49.743-17.488 11.81 3.9496 20.692 13.389 22.313 28.237 0.51051 6.2098 0.63413 12.445 0.37007 18.67-0.23973 11.2-0.72946 23.82-1.0995 34.08-0.82005 22.43 0.0593 35.1 24.589 36.3 8.5635 0.32122 17.137-0.22845 25.59-1.6405h-0.0198c-10.74-3.3799-17.98-15.609-19.3-26.289-1.29-10.41-0.6098-23.43-0.7898-38.091-0.1701-14.96 1.0398-29.819 0.28008-42.089-1.414-22.777-14.947-38.505-34.126-45.152-27.813-7.35-51.083 0.091-61.672 17.343-5.4698 8.9112-7.7413 20.07-5.8788 36.121z\" style=\"fill:#b3b3b3;\"/>',sP[13]=[],sP[13].env=env,sP[13].clo='<path d=\"M61.11,205.59l3.49,3.69-6.26,6.6A115.45,115.45,0,0,0,72,222.51v-22a115.19,115.19,0,0,0-10.85,5.1Z\" style=\"fill:#eee;\"/><path d=\"M93.24,228.85V199l-4-4A114.43,114.43,0,0,0,72,200.49v22a114.43,114.43,0,0,0,21.28,6.34Z\" style=\"fill:#787878;\"/><path d=\"m159 222.51v-22a114.63 114.63 0 0 0-17.25-5.51l-4 4v29.86a114.16 114.16 0 0 0 21.25-6.35z\" style=\"fill:#787878;\"/><path d=\"m169.89 205.59-3.49 3.69 6.26 6.6a115.45 115.45 0 0 1-13.66 6.63v-22a115.19 115.19 0 0 1 10.85 5.1z\" style=\"fill:#eee;\"/><path d=\"M115.5,219.62A28.5,28.5,0,0,1,87.25,195c2.93-.74,5.92-1.36,8.94-1.87a19.41,19.41,0,0,0,38.62,0c3,.51,6,1.13,8.94,1.87a28.49,28.49,0,0,1-28.25,24.63Z\" style=\"fill:#c9c9c9;\"/>',sP[13].head=head,sP[13].mouth='<path d=\"m115.5 153.93a14 14 0 0 1-10.5-4.69 3.4209 3.4209 0 0 1 5-4.67l0.08 0.08 0.08 0.09a7.35 7.35 0 0 0 10.39 0.37l0.37-0.37a3.4206 3.4206 0 1 1 5.23 4.41l-0.08 0.09a14 14 0 0 1-10.53 4.69z\" /><path d=\"m115.27 127.32c-7.6627-0.03-15.251 1.4419-20.646 5.1465-7.62 5.33-9.9053 11.512-14.127 18.109-3.4379 5.2447-9.326 10.024-13.467 6.334 25.425 29.755 71.409 29.786 96.875 0.0664-6.8104 3.9305-11.545-2.47-13.508-6.4004-10.697-17.605-14.115-22.656-35.127-23.256zm-0.26758 8.3984c7.457 0.0802 14.986 1.2966 17.146 5.9522 2.5765 11.319-7.5878 17.454-16.681 17.515-6.09-0.05-12.2-2.3802-15.26-7.7402-6.36-11.16 3.6349-15.607 14.795-15.727z\" style=\"fill:#404040;\"/>',sP[13].eyes='<path d=\"m91.72 97.36v11.4m47.56-11.4v11.4\" style=\"fill:none;'+str+'7.9999px;stroke:#333;\"/>',sP[13].top='<path d=\"m52.107 57.293c-1.3411 14.839-3.8707 52.771 1.3145 72.715-0.67572-43.829 12.389-70.177 62.078-70.187 49.689 0.010061 62.754 26.359 62.078 70.187 5.1852-19.944 2.6556-57.876 1.3145-72.715h-63.393-63.393z\" style=\"fill:#4d4d4d;\"/><path d=\"m52.339 30.629c-1.3825 24.448-2.1216 45.905-1.4497 66.517 9.4643-48.304 112.77-54.916 129.22 0 0.67191-20.612-0.3798-47.256-1.4928-66.517-32.241 14.296-91.346 18.861-126.28 0z\" style=\"fill:#4d4d4d;\"/><path d=\"m115.5 24.92c-22.25 0-44.5 4.2296-56.72 12.69-3.32 2.3-5.0602 6.4392-5.5903 10.269-0.45275 3.23-0.84043 6.7561-1.1785 10.461h126.98c-0.33704-3.7047-0.72492-7.2306-1.1775-10.461-0.53009-3.8301-2.2697-7.9992-5.5897-10.269-12.22-8.4601-34.47-12.69-56.72-12.69z\" style=\"fill:#4d4d4d;\"/><path d=\"m76.521 39.139c21.233 3.3965 33.116-13.392 37.59-31.72 4.3614 17.158 14.175 34.968 36.577 31.584-33.921 20.594-57.646 11.594-74.167 0.1345z\" style=\"fill:#4d4d4d;\"/>',sP[14]=[],sP[14].env=env,sP[14].clo='<path d=\"m91.92 194.41a101.47 101.47 0 0 1 23.58 17.09 101.47 101.47 0 0 1 23.58-17.09c0.89 0.19 1.78 0.38 2.67 0.59a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0.88-0.21 1.78-0.4 2.67-0.59z\" style=\"fill:#757575;\"/><path d=\"m73.65 199.82c16.59 8.23 28.72 18.91 34.27 30.93a114.86 114.86 0 0 1-56.65-19.25 115.06 115.06 0 0 1 22.38-11.68z\" style=\"fill:#d8d8d8;\"/><path d=\"m60.63 205.85c12.35 5.94 21.93 13.44 27.59 21.91a114.7 114.7 0 0 1-36.95-16.26q4.53-3 9.36-5.65z\" style=\"fill:#757575;\"/><path d=\"m157.35 199.82c-16.6 8.23-28.72 18.91-34.27 30.93a114.86 114.86 0 0 0 56.65-19.25 115.06 115.06 0 0 0-22.38-11.68z\" style=\"fill:#d8d8d8;\"/><path d=\"m170.37 205.85c-12.35 5.94-21.93 13.44-27.59 21.91a114.7 114.7 0 0 0 36.95-16.26q-4.53-3-9.36-5.65z\" style=\"fill:#757575;\"/>',sP[14].head=head,sP[14].mouth='<path d=\"m115.5 131c-17.71 0.65-27 9.41-29.61 23.69-1 5.62-0.43 7.06 2.76 7.17 22.76 0.76 22.23 18.21 26.85 18.89 4.62-0.68 4.09-18.13 26.85-18.89 3.19-0.11 3.79-1.55 2.76-7.17-2.62-14.28-11.9-23-29.61-23.69zm0 29.31c-10 0-18-5-18-11.17s8.08-11.17 18-11.17 18 5 18 11.17-8.08 11.17-18 11.17z\" style=\"fill:#333;\"/><path d=\"m123.54 148.46a11.53 11.53 0 0 1-16.09 0\" style=\"fill:none;'+str+'6.7998px;stroke:#000;\"/>',sP[14].eyes='<path d=\"m133 108.17h14.17m-63.26 0h14.09m-20.69-8.93a21.31 21.31 0 0 1 27.29 0m21.8 0a21.31 21.31 0 0 1 27.29 0\" style=\"fill:none;'+str+'4.8243px;stroke:#000;\"/>',sP[14].top='<path d=\"m115.5 51.75c-38.702 5.3101-54.215 18.038-59.863 35.101\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m115.5 51.75c-7.8393 3.6337-5.5974 16.583-14.341 23.452\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m111.35 48.614c-22.634-6.9181-42.457-3.1988-55.733 2.5105\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m115.47 54.008c0.1965-6.7774-0.1436-26.309 0.05-38.184\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m68.874 28.177c34.115-3.382 41.987 13.321 45.17 19.602\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m116.49 48.69c2.8876-6.3019 10.358-21.518 43.469-22.326\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m116.92 51.766c1.5094 6.3991 3.4988 15.595 10.088 23.058\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m113.81 51.532c22.03-7.8674 46.709-7.3614 59.444-2.0465\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m114.53 52.278c36.226 4.8583 52.414 17.092 59.373 33.347\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m55.637 86.851c-4.1213 12.452-2.9877 27.213-1.777 43.084\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m55.614 51.124c-13.422 5.5019-21.908 16.409-24.712 28.774-1.8322 8.4632-1.9809 18.156-1.6096 28.486\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m173.26 49.486c24.917 10.399 26.707 36.537 27.209 59.62\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m173.9 85.625c5.4042 12.625 5.2413 27.675 4.5745 43.58\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m53.86 129.93c1.293 16.951 2.6738 35.169-2.1664 53.193\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m29.292 108.38c0.6173 17.177 2.6722 36.119 0.8158 54.108\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m200.47 109.11c0.3586 18.529-1.2751 36.94 1.9231 48.985\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m178.48 129.2c-0.7279 17.362-2.0563 35.743 2.6011 53.099\" style=\"fill:none;'+str+'12;stroke:#333;\"/>',sP[15]=[],sP[15].env=env,sP[15].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5 115.77 115.77 0 0 1 15.71-2.53v-14.09a63.8 63.8 0 0 0 21 0v14.09a116.6 116.6 0 0 1 15.75 2.53z\" style=\"fill:#1a1a1a;\"/><path d=\"m60.984 205.66 6.2675 2.2051 3.4074-6.819 2.8018-1.1353-3.9911 7.9907 27.222-3.0857 3.2541-11.739 2.1451-0.2692-3.2833 11.819 20.393-1.6011-14.191-15.945v-2.4379l17.606-5.7274 3.3855-0.473v1.47l-19.167 6.2295 14.731 16.542 19.839-7.7432 3.3636 0.8223-21.371 8.34 20.532 13.842 2.6777-21.687 1.9481 0.5604-2.7726 22.378 0.0584 0.0364 8.5075 4.9923-2.4807 0.85145-6.4718-3.7916-1.2987 6.0622-2.1524 0.53125 1.3425-6.2804-17.037 8.8348-5.0271 0.35661 21.59-11.193-20.962-14.133-7.5006 25.457-2.0721-0.0364 7.6392-25.915-21.05 1.652 9.0109 24.052-1.4155-0.0946-0.49615-0.0437-0.073-7e-3 -0.2043-0.0145-8.3688-22.342-10.127 19.242-1.9846-0.52399 10.514-19.962-26.04 2.9547 13.425 16.418-3.4438-1.0625-12.083-14.781-8.1645 5.9675-1.9043-1.077 8.128-5.9385-6.9898-2.4598 2.3348-1.2881zm92.509-7.2556 14.228 20.093-1.8095 0.89514-15.614-22.043z\" style=\"fill:#b2b2b2;\"/>',sP[15].head=head,sP[15].mouth='<path d=\"m97.06 144.59a20.15 20.15 0 0 0 36.88 4.53z\" style=\"fill:#fff;'+str+'2.9999px;stroke:#000;\"/>',sP[15].eyes='<line x1=\"85.29\" x2=\"85.29\" y1=\"98.73\" y2=\"109.79\" style=\"fill:none;'+str+'8.7999px;stroke:#000;\"/><path d=\"m108.28 72.16h62.18c9.19 0 13.32 1.21 14.71 8.52 3.61 18.95 2.2 33.49-0.44 43.75a65.07 65.07 0 0 1-5.89 14.78 73.52 73.52 0 0 1-7.06 10.26c-1.8 2.27-5.17 1.21-4.19-1.09 0.14-0.47 0.27-1 0.4-1.48a14.29 14.29 0 0 0 0.52-6.62 12.52 12.52 0 0 0-3.88-6.3c-4.17-3.9-12.81-8.71-32.53-13.66-6.4-1.6-10.69-2.24-11.76-2.79a7.08 7.08 0 0 1-3.85-6.31v-9c0-2.39 0.18-4.55-1.56-6.57s-4.16-2.13-6.65-2.14a6 6 0 0 1-6-6v-9.35a6 6 0 0 1 6-6z\" style=\"fill:#1a1a1a;\"/><path d=\"m135.9 98.73v9.27m15.22-9.29v9.29\" style=\"fill:none;'+str+'7.7998px;stroke:#b2b2b2;\"/>',sP[15].top='<path d=\"m109.99 15.57c-13.46 3.6301-19.789 11.95-24.069 24.08-6.9996-7-8.7307-10.82-7.5606-21.43a41 41 0 0 0-9.2698 24.988c0.0366 7.6776 5.6462 13.939 12.697 15.297-13.315 5.8106-15.258 22.033-14.045 33.524 5.7687-11.861 14.254-20.981 27.258-22.951-0.43017 6.6-2.5099 10.22-7.29 17.66 18.29-2.8601 25.119-7.8199 37.15-18.24 0.46001 0 1.0001 0.089 1.4606 0.12058-0.33023 3.5601-1.0906 6.5598-5.0004 12.46 9.5298-1.32 14.721-5.8006 17.539-11.671 8.8862 0.95314 15.836 6.785 21.26 14.818 1.928-15.211-4.4766-26.6-19.807-34.036 1.4167-2.6974 8.0143-11.925 17.661-15.721-1.424-0.28569-2.8883-0.49486-4.4033-0.61125-5.71-0.41992-13.62-0.99982-24.89 4.1703 2.8501-8.5101 10.21-11 18.05-13.12-15.131-1.2501-28.61-2.5898-40.53 8.1801-1.8997-6.21-0.18055-12.54 3.7889-17.52z\" style=\"fill:#fff;\"/><path d=\"m172.63 69.954c1.2292 14.064 0.93841 29.96 0.34635 45.169 1.7887 6.796 3.0379 13.235 3.8842 18.388l0.13973-0.011c1.0001 6.56 2.3597 13.18 3.2698 19.73 2.0002-6.5699 2.5303-18.25 3.2405-25.43 1.2597-13 1.8296-29.311-0.43017-41.931-0.85041-4.72-2.0007-7.6896-2.0007-8.4796 4.6205 3.5601 8.6606 9.2204 13.001 14.15-0.6751-3.4318-1.347-6.6004-2.0567-9.5273-4.047-5.7183-13.726-12.154-19.393-12.06z\" style=\"fill:#fff;\"/><path d=\"m157.97 34.471c-10.339 2.7579-17.715 13.543-19.132 16.24 15.33 7.4361 20.783 17.96 21.278 33.517 5.9534 8.8179 10.066 20.289 12.857 30.895 0.87636-13.178 1.8186-27.726 0.26566-44.28 2.5698 0.44857 9.1372 1.3934 18.781 11.17-2.1158-8.7321-4.5671-15.31-8.4539-20.283-4.5598-5.8401-10.999-10.431-23.809-13 9.6502-3.34 16.27-0.76993 25.5 2.1301-8.1388-7.4315-16.474-14.219-27.287-16.389z\" style=\"fill:#fff;\"/><path d=\"m61.473 73.354c-7.256-0.77501-13.024 2.3746-16.262 5.3879 0.73789-0.45409 1.3868-0.74208 1.8489-0.74208 0 0-1.5198 10.359-1.6197 11.519-1.56 19.73 0.99957 43.401 6.37 62.471 1.3099 4.6899 1.1895 3.0893 1.8898-0.9107 1.7526-10.061 3.3891-24.703 6.9739-38.864-5.068-17.627-4.2508-32.403 0.79937-38.861z\" style=\"fill:#fff;\"/><path d=\"m69.09 43.21c-0.0253 1.0803-8e-3 2.1612 0.0523 3.2402-3.8402 0-12.46 0.71984-16 2.1598-4.4504 1.8001-8.48 5.4801-11.67 11.83 7.2999-3.94 11.899-3.8502 16.66-1.8102-10.39 3.45-19.52 11.37-20.32 26.9 1.1456-1.5053 4.6079-4.9789 7.1393-6.6285 0.09-0.0587 0.17427-0.10556 0.26167-0.15946 3.7141-2.3211 9.0494-5.1247 15.181-4.9553-5.0501 6.4577-6.6824 20.434 0.28207 38.428 1.7866-7.0567 4.0574-13.994 7.0681-20.184-1e-3 -11.664 2.0764-27.774 15.391-33.585-7.0508-2.1538-12.709-7.991-14.043-15.236z\" style=\"fill:#fff;\"/>';var CryptoJS=CryptoJS||function(h,s){var f={},t=f.lib={},g=function(){},j=t.Base={extend:function(a){g.prototype=this;var c=new g;return a&&c.mixIn(a),c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)}),c.init.prototype=c,c.$super=this,c},create:function(){var a=this.extend();return a.init.apply(a,arguments),a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},q=t.WordArray=j.extend({init:function(a,c){a=this.words=a||[],this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||u).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;if(a=a.sigBytes,this.clamp(),b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-e%4*8&255)<<24-(b+e)%4*8;else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);return this.sigBytes+=a,this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<32-c%4*8,a.length=h.ceil(c/4)},clone:function(){var a=j.clone.call(this);return a.words=this.words.slice(0),a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new q.init(c,a)}}),v=f.enc={},u=v.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-b%4*8&255;d.push((e>>>4).toString(16)),d.push((15&e).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,2),16)<<24-b%8*4;return new q.init(d,c/2)}},k=v.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-b%4*8&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(255&a.charCodeAt(b))<<24-b%4*8;return new q.init(d,c)}},l=v.Utf8={stringify:function(a){try{return decodeURIComponent(escape(k.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\")}},parse:function(a){return k.parse(unescape(encodeURIComponent(a)))}},x=t.BufferedBlockAlgorithm=j.extend({reset:function(){this._data=new q.init,this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=l.parse(a)),this._data.concat(a),this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f;if(a=(f=a?h.ceil(f):h.max((0|f)-this._minBufferSize,0))*e,b=h.min(4*a,b),a){for(var m=0;m<a;m+=e)this._doProcessBlock(d,m);m=d.splice(0,a),c.sigBytes-=b}return new q.init(m,b)},clone:function(){var a=j.clone.call(this);return a._data=this._data.clone(),a},_minBufferSize:0});t.Hasher=x.extend({cfg:j.extend(),init:function(a){this.cfg=this.cfg.extend(a),this.reset()},reset:function(){x.reset.call(this),this._doReset()},update:function(a){return this._append(a),this._process(),this},finalize:function(a){return a&&this._append(a),this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return new a.init(d).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return new w.HMAC.init(a,d).finalize(c)}}});var w=f.algo={};return f}(Math);!function(h){for(var s=CryptoJS,f,t=(f=s.lib).WordArray,g=f.Hasher,f=s.algo,j=[],q=[],v=function(a){return 4294967296*(a-(0|a))|0},u=2,k=0;64>k;){var l;a:{l=u;for(var x=h.sqrt(l),w=2;w<=x;w++)if(!(l%w)){l=!1;break a}l=!0}l&&(8>k&&(j[k]=v(h.pow(u,.5))),q[k]=v(h.pow(u,1/3)),k++),u++}var a=[],f=f.SHA256=g.extend({_doReset:function(){this._hash=new t.init(j.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],m=b[2],h=b[3],p=b[4],j=b[5],k=b[6],l=b[7],n=0;64>n;n++){if(16>n)a[n]=0|c[d+n];else{var r=a[n-15],g=a[n-2];a[n]=((r<<25|r>>>7)^(r<<14|r>>>18)^r>>>3)+a[n-7]+((g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10)+a[n-16]}r=l+((p<<26|p>>>6)^(p<<21|p>>>11)^(p<<7|p>>>25))+(p&j^~p&k)+q[n]+a[n],g=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&m^f&m),l=k,k=j,j=p,p=h+r|0,h=m,m=f,f=e,e=r+g|0}b[0]=b[0]+e|0,b[1]=b[1]+f|0,b[2]=b[2]+m|0,b[3]=b[3]+h|0,b[4]=b[4]+p|0,b[5]=b[5]+j|0,b[6]=b[6]+k|0,b[7]=b[7]+l|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;return d[e>>>5]|=128<<24-e%32,d[14+(e+64>>>9<<4)]=h.floor(b/4294967296),d[15+(e+64>>>9<<4)]=b,a.sigBytes=4*d.length,this._process(),this._hash},clone:function(){var a=g.clone.call(this);return a._hash=this._hash.clone(),a}});s.SHA256=g._createHelper(f),s.HmacSHA256=g._createHmacHelper(f)}(Math);var hash=\"\",sha256Hash,sha256Numbers;if(0==string.length)return hash;hash=CryptoJS.SHA256(string).toString().replace(/\\D/g,\"\").substring(0,12);var p=[];for(var part in p.env=hash[0]+\"\"+hash[1],p.env=Math.round(.47*p.env)+\"\",p.clo=hash[2]+\"\"+hash[3],p.clo=Math.round(.47*p.clo)+\"\",p.head=hash[4]+\"\"+hash[5],p.head=Math.round(.47*p.head)+\"\",p.mouth=hash[6]+\"\"+hash[7],p.mouth=Math.round(.47*p.mouth)+\"\",p.eyes=hash[8]+\"\"+hash[9],p.eyes=Math.round(.47*p.eyes)+\"\",p.top=hash[10]+\"\"+hash[11],p.top=Math.round(.47*p.top)+\"\",p){var nr=p[part];nr>31?(1==(nr=nr-32+\"\").length&&(nr=\"0\"+nr),p[part]=nr+\"C\"):nr>15?(1==(nr=nr-16+\"\").length&&(nr=\"0\"+nr),p[part]=nr+\"B\"):p[part]=1==(nr+\"\").length?\"0\"+nr+\"A\":nr+\"A\"}var final=[];for(var part in p){var partV=p[part].substring(0,2),theme=p[part].substring(2,3);void 0!==ver&&(partV=ver.part,theme=ver.theme),final[part]=getFinal(part,partV,theme)}function getFinal(part,partV,theme){var colors=themes[partV][theme][part],svgString=sP[partV][part],regex=/#(.*?);/g,result=svgString.match(regex),resultFinal=svgString;if(null!=result)for(var i=0;i<result.length;i++)resultFinal=resultFinal.replace(result[i],colors[i]+\";\");return resultFinal}return sansEnv&&(final.env=\"\"),svgStart+final.env+final.head+final.clo+final.top+final.eyes+final.mouth+svgEnd} module.exports = multiavatar;"],"names":["class","_createElementVNode","_hoisted_6","_hoisted_7","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","$data","classList","item","index","key","href","_normalizeClass","active","tempData","className","onClick","_withModifiers","$event","$options","selectClass","_hoisted_5","_cache","$refs","addClass","showModal","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","route","_hoisted_14","_createTextVNode","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_createVNode","_component_Group","classData","_component_TopicModal","_component_ScoreModal","_component_Demo","_component_AddClassModal","ref","style","group","innerHTML","avatar","_toDisplayString","id","args","addGroup","data","props","watch","this","JSON","parse","stringify","createMultiavatar","methods","forEach","multiavatar","newAvatar","push","__exports__","choseList","collapsed","type","folderName","topicList","length","show","title","addTopic","_component_AddTopicModal","tabindex","tempSelect","value","for","modal","topicData","mounted","Modal","AddTopic","sortable","choseData","newList","components","AddTopicModal","_component_Bar","options","chartOptions","chartData","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","animation","resize","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineJoin","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","borderCapStyle","borderJoinStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","role","createTypedChart","registerables","reforwardRef","Bar","ChartJS","Sortable","onStart","headShakeList","getElementsByClassName","onEnd","tempList","AddClassModal","TopicModal","ScoreModal","Group","Demo","sansEnv","ver","themes","env","clo","mouth","eyes","sP","svgStart","svgEnd","CryptoJS","lib","Base","extend","mixIn","$super","q","WordArray","words","sigBytes","u","clamp","random","enc","Hex","substr","Latin1","fromCharCode","charCodeAt","Utf8","decodeURIComponent","escape","unescape","encodeURIComponent","BufferedBlockAlgorithm","_nDataBytes","_append","_process","blockSize","_minBufferSize","_doProcessBlock","Hasher","_doReset","finalize","_doFinalize","_createHelper","_createHmacHelper","HMAC","algo","SHA256","_hash","HmacSHA256","hash","substring","nr","partV","theme","getFinal","svgString","regex","resultFinal","module","exports"],"sourceRoot":""}
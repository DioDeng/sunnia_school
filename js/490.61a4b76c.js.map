{"version":3,"file":"js/490.61a4b76c.js","mappings":"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","sources":["webpack://web/./src/views/teacher/GroupView.vue","webpack://web/./src/components/group/GroupModal.vue","webpack://web/./src/components/group/GroupModal.vue?58bd","webpack://web/./src/components/group/TopicModal.vue","webpack://web/./src/components/group/AddTopicModal.vue","webpack://web/./src/components/group/AddTopicModal.vue?9b0e","webpack://web/./src/components/group/TopicModal.vue?2df3","webpack://web/./src/components/group/ScoreModal.vue","webpack://web/./node_modules/@kurkle/color/dist/color.esm.js","webpack://web/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://web/./node_modules/chart.js/dist/chart.js","webpack://web/./node_modules/vue-chartjs/dist/index.js","webpack://web/./src/components/group/ScoreModal.vue?26b1","webpack://web/./src/components/group/DemoModal.vue","webpack://web/./src/components/group/DemoModal.vue?3316","webpack://web/./src/views/teacher/GroupView.vue?8248","webpack://web/./node_modules/@multiavatar/multiavatar/dist/commonjs/index.js"],"sourcesContent":["<!-- eslint-disable max-len -->\n<template>\n  <section class=\"px-3\">\n    <div class=\"row g-4\">\n      <div class=\"col-3\">\n        <div class=\"list-group\">\n          <template v-for=\"(item, index) in classList\" :key=\"index\">\n            <a\n              href=\"#\"\n              class=\"list-group-item list-group-item-action\"\n              :class=\"{ active: tempData.className === item.className }\"\n              aria-current=\"true\"\n              @click.prevent=\"selectClass(item.className)\"\n            >\n              {{ item.className }}\n            </a>\n          </template>\n          <button\n            class=\"btn btn-heightlight w-100 d-flex justify-content-between text-light\"\n            @click=\"this.$refs.addClass.showModal()\"\n          >\n            <span>建立班級</span><i class=\"bi bi-plus-lg\"></i>\n          </button>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <div class=\"card text-center\">\n          <div class=\"card-header bg-primary\">\n            <ul class=\"nav nav-tabs card-header-tabs\">\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '群組' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '群組'\"\n                >\n                  <i class=\"bi bi-people-fill\"></i>\n                  群組\n                </button>\n              </li>\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '題庫' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '題庫'\"\n                >\n                  <i class=\"bi bi-book\"></i>\n                  題庫\n                </button>\n              </li>\n              <li class=\"nav-item\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '成績' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '成績'\"\n                >\n                  <i class=\"bi bi-trophy\"></i>\n                  成績\n                </button>\n              </li>\n              <li class=\"nav-item ms-auto\">\n                <button\n                  class=\"nav-link\"\n                  :class=\"[this.route === '設定' ? 'active' : 'text-light']\"\n                  @click=\"this.route = '設定'\"\n                >\n                  <i class=\"bi bi-gear-fill\"></i>\n                  設定\n                </button>\n              </li>\n            </ul>\n          </div>\n          <!-- group -->\n          <section :class=\"{ 'd-none': route !== '群組' }\">\n            <Group :classData=\"tempData\" />\n          </section>\n          <!-- topic -->\n          <section :class=\"{ 'd-none': route !== '題庫' }\">\n            <TopicModal />\n          </section>\n          <!-- 成績 -->\n          <section :class=\"{ 'd-none': route !== '成績' }\">\n            <ScoreModal />\n          </section>\n          <!-- setting -->\n          <section :class=\"{ 'd-none': route !== '設定' }\">\n            <Demo />\n          </section>\n        </div>\n      </div>\n    </div>\n  </section>\n  <AddClassModal ref=\"addClass\" />\n</template>\n\n<script>\nimport Group from '@/components/group/GroupModal.vue';\nimport TopicModal from '@/components/group/TopicModal.vue';\nimport ScoreModal from '@/components/group/ScoreModal.vue';\nimport AddClassModal from '@/components/group/AddClassModal.vue';\nimport Demo from '@/components/group/DemoModal.vue';\nimport choseData from '@/assets/jsons/chose.json';\nimport classData from '@/assets/jsons/class.json';\n\nexport default {\n  data() {\n    return {\n      route: '群組',\n      sortable: '',\n      choseList: choseData,\n      classList: classData,\n      tempData: {},\n      newList: '',\n    };\n  },\n  components: {\n    AddClassModal,\n    TopicModal,\n    ScoreModal,\n    Group,\n    Demo,\n  },\n  methods: {\n    selectClass(i) {\n      this.classList.forEach((item) => {\n        if (item.className === i) {\n          this.tempData = item;\n        }\n      });\n    },\n  },\n  mounted() {\n    // eslint-disable-next-line prefer-destructuring\n    this.tempData = this.classList[0];\n  },\n};\n</script>\n","<template>\n  <div class=\"card-body overflow-y-scroll\" style=\"height: 65vh\">\n    <div class=\"avtart\">\n      <template v-for=\"(item, key) in tempData.group\" :key=\"key\">\n        <div class=\"card mb-3\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-4\">\n              <div\n                class=\"d-flex justify-content-center align-items-center h-100\"\n              >\n                <div v-html=\"item.avatar\" class=\"avtart-block\"></div>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">小組名稱{{ item.id }}</h5>\n                <p class=\"card-text\">\n                  This is a wider card with supporting text below as a natural\n                  lead-in to additional content. This content is a little bit\n                  longer.\n                </p>\n                <p class=\"card-text\">\n                  <small class=\"text-body-secondary\"\n                    ><button class=\"btn btn-primary\">查看詳細</button></small\n                  >\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <button class=\"btn btn-outline-primary\" @click=\"addGroup\">新增群組</button>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.avtart-block {\n  height: 75px;\n  width: 75px;\n  border-radius: 50%;\n}\n.avtart {\n  width: 100%;\n  text-align: center;\n}\n</style>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport multiavatar from '@multiavatar/multiavatar';\n\nexport default {\n  data() {\n    return {\n      tempData: {},\n    };\n  },\n  props: ['classData'],\n  watch: {\n    classData() {\n      this.tempData = JSON.parse(JSON.stringify(this.classData));\n      this.createMultiavatar();\n    },\n  },\n  methods: {\n    createMultiavatar() {\n      this.tempData.group.forEach((item) => {\n        // eslint-disable-next-line no-param-reassign\n        item.avatar = multiavatar(item.id);\n      });\n    },\n    addGroup() {\n      const newAvatar = multiavatar('jkdshiwqegf');\n      this.tempData.group.push({ avatar: newAvatar });\n    },\n  },\n};\n</script>\n","import { render } from \"./GroupModal.vue?vue&type=template&id=2a414ca8&scoped=true\"\nimport script from \"./GroupModal.vue?vue&type=script&lang=js\"\nexport * from \"./GroupModal.vue?vue&type=script&lang=js\"\n\nimport \"./GroupModal.vue?vue&type=style&index=0&id=2a414ca8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a414ca8\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"card-body overflow-y-scroll p-4\"\n    style=\"height: 65vh\"\n    ref=\"items\"\n    id=\"items\"\n  >\n    <template v-for=\"(item, index) in choseList\" :key=\"index\">\n      <div\n        class=\"card mb-4 shadow btn animate__animated animate__infinite headShake\"\n        :id=\"item.id\"\n      >\n        <div class=\"row g-0\">\n          <div class=\"col-md-4\">{{ index + 1 }}</div>\n          <div class=\"col-md-8\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Card title</h5>\n              <div class=\"card-text\">\n                {{ item.title }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n  <div class=\"card-footer\">\n    <button\n      class=\"btn btn-outline-primary\"\n      @click=\"this.$refs.addTopic.showModal()\"\n    >\n      新增題庫\n    </button>\n  </div>\n  <AddTopicModal ref=\"addTopic\" />\n</template>\n\n<style lang=\"scss\">\n.animate__animated.animate__headShake {\n  --animate-duration: 1.5s;\n  --animate-delay: 0s;\n}\n</style>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Sortable from 'sortablejs';\nimport AddTopicModal from '@/components/group/AddTopicModal.vue';\nimport choseData from '@/assets/jsons/chose.json';\n\nexport default {\n  data() {\n    return {\n      sortable: '',\n      choseList: choseData,\n      newList: '',\n    };\n  },\n  components: {\n    AddTopicModal,\n  },\n  mounted() {\n    this.sortable = Sortable.create(this.$refs.items, {\n      animation: 500,\n      onStart() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.add('animate__headShake');\n        });\n      },\n      onEnd() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.remove('animate__headShake');\n        });\n        const tempList = document.getElementsByClassName('headShake');\n        this.newList = [];\n        Object.values(tempList).forEach((item) => {\n          this.newList.push(item.id);\n        });\n      },\n    });\n  },\n};\n</script>\n","<!-- eslint-disable vuejs-accessibility/label-has-for -->\n<template>\n  <div class=\"modal\" tabindex=\"-1\" ref=\"AddTopic\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">{{ tempSelect }}</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body overflow-y-scroll\" style=\"max-height: 65vh\">\n          <template v-for=\"(item, index) in topicList\" :key=\"index\">\n            <div class=\"input-group input-group-lg mb-3\">\n              <div class=\"input-group-text\">\n                <input\n                  class=\"form-check-input mt-0\"\n                  type=\"checkbox\"\n                  :value=\"item.id\"\n                  :id=\"index\"\n                  aria-label=\"Checkbox for following text input\"\n                  v-model=\"tempSelect\"\n                />\n              </div>\n              <label class=\" form-control form-check-label\" :for=\"index\">\n                {{item.title}}\n              </label>\n            </div>\n          </template>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n          >\n            Close\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Modal } from 'bootstrap';\nimport topicData from '@/assets/jsons/chose.json';\n\nexport default {\n  data() {\n    return {\n      modal: '',\n      topicList: topicData,\n      tempData: {},\n      tempSelect: [],\n    };\n  },\n  methods: {\n    showModal() {\n      this.modal.show();\n    },\n  },\n  mounted() {\n    this.modal = new Modal(this.$refs.AddTopic);\n  },\n};\n</script>\n","import { render } from \"./AddTopicModal.vue?vue&type=template&id=57d4bd65\"\nimport script from \"./AddTopicModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddTopicModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TopicModal.vue?vue&type=template&id=8d452b78\"\nimport script from \"./TopicModal.vue?vue&type=script&lang=js\"\nexport * from \"./TopicModal.vue?vue&type=script&lang=js\"\n\nimport \"./TopicModal.vue?vue&type=style&index=0&id=8d452b78&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- eslint-disable max-len -->\n<template>\n  <div class=\"card-body overflow-y-scroll\" style=\"height: 65vh\">\n    <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n  </div>\n</template>\n\n<script>\nimport choseData from '@/assets/jsons/chose.json';\nimport classData from '@/assets/jsons/class.json';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Bar } from 'vue-chartjs';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n);\n\nexport default {\n  data() {\n    return {\n      route: '群組',\n      sortable: '',\n      choseList: choseData,\n      classList: classData,\n      tempData: {},\n      newList: '',\n      chartData: {\n        labels: ['January', 'February', 'March'],\n        datasets: [{ data: [40, 20, 12] }],\n      },\n      chartOptions: {\n        responsive: true,\n      },\n    };\n  },\n  components: { Bar },\n  methods: {\n    selectClass(i) {\n      this.classList.forEach((item) => {\n        if (item.className === i) {\n          this.tempData = item;\n        }\n      });\n    },\n  },\n  mounted() {\n    // eslint-disable-next-line prefer-destructuring\n    this.tempData = this.classList[0];\n  },\n};\n</script>\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./ScoreModal.vue?vue&type=template&id=005db09f\"\nimport script from \"./ScoreModal.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div\n    class=\"card-body overflow-y-scroll p-4\"\n    style=\"height: 65vh\"\n    ref=\"items\"\n    id=\"items\"\n  >\n  </div>\n  <div class=\"card-footer\">\n    <button\n      class=\"btn btn-outline-primary\"\n      @click=\"this.$refs.addTopic.showModal()\"\n    >\n      新增題庫群組\n    </button>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Sortable from 'sortablejs';\nimport choseData from '@/assets/jsons/chose.json';\n\nexport default {\n  data() {\n    return {\n      sortable: '',\n      choseList: choseData,\n      newList: '',\n    };\n  },\n  mounted() {\n    this.sortable = Sortable.create(this.$refs.items, {\n      animation: 500,\n      onStart() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.add('animate__headShake');\n        });\n      },\n      onEnd() {\n        const headShakeList = Object.values(\n          // eslint-disable-next-line comma-dangle\n          document.getElementsByClassName('headShake')\n        );\n        headShakeList.forEach((item) => {\n          item.classList.remove('animate__headShake');\n        });\n        const tempList = document.getElementsByClassName('headShake');\n        this.newList = [];\n        Object.values(tempList).forEach((item) => {\n          this.newList.push(item.id);\n        });\n      },\n    });\n  },\n};\n</script>\n","import { render } from \"./DemoModal.vue?vue&type=template&id=53007476\"\nimport script from \"./DemoModal.vue?vue&type=script&lang=js\"\nexport * from \"./DemoModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GroupView.vue?vue&type=template&id=15ab0887\"\nimport script from \"./GroupView.vue?vue&type=script&lang=js\"\nexport * from \"./GroupView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function multiavatar(string,sansEnv,ver){string+=\"\";var themes={\"00\":{A:{env:[\"#ff2f2b\"],clo:[\"#fff\",\"#000\"],head:[\"#fff\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#000\",\"none\",\"#00FFFF\"],top:[\"#fff\",\"#fff\"]},B:{env:[\"#ff1ec1\"],clo:[\"#000\",\"#fff\"],head:[\"#ffc1c1\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#FF2D00\",\"#fff\",\"none\"],top:[\"#a21d00\",\"#fff\"]},C:{env:[\"#0079b1\"],clo:[\"#0e00b1\",\"#d1fffe\"],head:[\"#f5aa77\"],mouth:[\"#fff\",\"#000\",\"#000\"],eyes:[\"#0c00de\",\"#fff\",\"none\"],top:[\"#acfffd\",\"#acfffd\"]}},\"01\":{A:{env:[\"#a50000\"],clo:[\"#f06\",\"#8e0039\"],head:[\"#85492C\"],mouth:[\"#000\"],eyes:[\"#000\",\"#ff9809\"],top:[\"#ff9809\",\"#ff9809\",\"none\",\"none\"]},B:{env:[\"#40E83B\"],clo:[\"#00650b\",\"#62ce5a\"],head:[\"#f7c1a6\"],mouth:[\"#6e1c1c\"],eyes:[\"#000\",\"#ff833b\"],top:[\"#67FFCC\",\"none\",\"none\",\"#ecff3b\"]},C:{env:[\"#ff2c2c\"],clo:[\"#fff\",\"#000\"],head:[\"#ffce8b\"],mouth:[\"#000\"],eyes:[\"#000\",\"#0072ff\"],top:[\"#ff9809\",\"none\",\"#ffc809\",\"none\"]}},\"02\":{A:{env:[\"#ff7520\"],clo:[\"#d12823\"],head:[\"#fee3c5\"],mouth:[\"#d12823\"],eyes:[\"#000\",\"none\"],top:[\"#000\",\"none\",\"none\",\"#FFCC00\",\"red\"]},B:{env:[\"#ff9700\"],clo:[\"#000\"],head:[\"#d2ad6d\"],mouth:[\"#000\"],eyes:[\"#000\",\"#00ffdc\"],top:[\"#fdff00\",\"#fdff00\",\"none\",\"none\",\"none\"]},C:{env:[\"#26a7ff\"],clo:[\"#d85cd7\"],head:[\"#542e02\"],mouth:[\"#f70014\"],eyes:[\"#000\",\"magenta\"],top:[\"#FFCC00\",\"#FFCC00\",\"#FFCC00\",\"#ff0000\",\"yellow\"]}},\"03\":{A:{env:[\"#6FC30E\"],clo:[\"#b4e1fa\",\"#5b5d6e\",\"#515262\",\"#a0d2f0\",\"#a0d2f0\"],head:[\"#fae3b9\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#8eff45\",\"#8eff45\",\"none\",\"none\"]},B:{env:[\"#00a58c\"],clo:[\"#000\",\"none\",\"none\",\"none\",\"none\"],head:[\"#FAD2B9\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#FFC600\",\"none\",\"#FFC600\",\"none\"]},C:{env:[\"#ff501f\"],clo:[\"#000\",\"#ff0000\",\"#ff0000\",\"#7d7d7d\",\"#7d7d7d\"],head:[\"#fff3dc\"],mouth:[\"#d2001b\",\"none\"],eyes:[\"#000\"],top:[\"#D2001B\",\"none\",\"none\",\"#D2001B\"]}},\"04\":{A:{env:[\"#fc0\"],clo:[\"#901e0e\",\"#ffbe1e\",\"#ffbe1e\",\"#c55f54\"],head:[\"#f8d9ad\"],mouth:[\"#000\",\"none\",\"#000\",\"none\"],eyes:[\"#000\"],top:[\"#583D00\",\"#AF892E\",\"#462D00\",\"#a0a0a0\"]},B:{env:[\"#386465\"],clo:[\"#fff\",\"#333\",\"#333\",\"#333\"],head:[\"#FFD79D\"],mouth:[\"#000\",\"#000\",\"#000\",\"#000\"],eyes:[\"#000\"],top:[\"#27363C\",\"#5DCAD4\",\"#314652\",\"#333\"]},C:{env:[\"#DFFF00\"],clo:[\"#304267\",\"#aab0b1\",\"#aab0b1\",\"#aab0b1\"],head:[\"#e6b876\"],mouth:[\"#50230a\",\"#50230a\",\"#50230a\",\"#50230a\"],eyes:[\"#000\"],top:[\"#333\",\"#afafaf\",\"#222\",\"#6d3a1d\"]}},\"05\":{A:{env:[\"#a09300\"],clo:[\"#c7d4e2\",\"#435363\",\"#435363\",\"#141720\",\"#141720\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#f5d4a6\"],mouth:[\"#000\",\"#cf9f76\"],eyes:[\"#000\",\"#000\",\"#000\",\"#000\",\"#000\",\"#000\",\"#fff\",\"#fff\",\"#fff\",\"#fff\",\"#000\",\"#000\"],top:[\"none\",\"#fdff00\"]},B:{env:[\"#b3003e\"],clo:[\"#000\",\"#435363\",\"#435363\",\"#000\",\"none\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#f5d4a6\"],mouth:[\"#000\",\"#af9f94\"],eyes:[\"#9ff3ff;opacity:0.96\",\"#000\",\"#9ff3ff;opacity:0.96\",\"#000\",\"#2f508a\",\"#000\",\"#000\",\"#000\",\"none\",\"none\",\"none\",\"none\"],top:[\"#ff9a00\",\"#ff9a00\"]},C:{env:[\"#884f00\"],clo:[\"#ff0000\",\"#fff\",\"#fff\",\"#141720\",\"#141720\",\"#e7ecf2\",\"#e7ecf2\"],head:[\"#c57b14\"],mouth:[\"#000\",\"#cf9f76\"],eyes:[\"none\",\"#000\",\"none\",\"#000\",\"#5a0000\",\"#000\",\"#000\",\"#000\",\"none\",\"none\",\"none\",\"none\"],top:[\"#efefef\",\"none\"]}},\"06\":{A:{env:[\"#8acf00\"],clo:[\"#ee2829\",\"#ff0\"],head:[\"#ffce73\"],mouth:[\"#fff\",\"#000\"],eyes:[\"#000\"],top:[\"#000\",\"#000\",\"none\",\"#000\",\"#ff4e4e\",\"#000\"]},B:{env:[\"#00d2a3\"],clo:[\"#0D0046\",\"#ffce73\"],head:[\"#ffce73\"],mouth:[\"#000\",\"none\"],eyes:[\"#000\"],top:[\"#000\",\"#000\",\"#000\",\"none\",\"#ffb358\",\"#000\",\"none\",\"none\"]},C:{env:[\"#ff184e\"],clo:[\"#000\",\"none\"],head:[\"#ffce73\"],mouth:[\"#ff0000\",\"none\"],eyes:[\"#000\"],top:[\"none\",\"none\",\"none\",\"none\",\"none\",\"#ffc107\",\"none\",\"none\"]}},\"07\":{A:{env:[\"#00deae\"],clo:[\"#ff0000\"],head:[\"#ffce94\"],mouth:[\"#f73b6c\",\"#000\"],eyes:[\"#e91e63\",\"#000\",\"#e91e63\",\"#000\",\"#000\",\"#000\"],top:[\"#dd104f\",\"#dd104f\",\"#f73b6c\",\"#dd104f\"]},B:{env:[\"#181284\"],clo:[\"#491f49\",\"#ff9809\",\"#491f49\"],head:[\"#f6ba97\"],mouth:[\"#ff9809\",\"#000\"],eyes:[\"#c4ffe4\",\"#000\",\"#c4ffe4\",\"#000\",\"#000\",\"#000\"],top:[\"none\",\"none\",\"#d6f740\",\"#516303\"]},C:{env:[\"#bcf700\"],clo:[\"#ff14e4\",\"#000\",\"#14fffd\"],head:[\"#7b401e\"],mouth:[\"#666\",\"#000\"],eyes:[\"#00b5b4\",\"#000\",\"#00b5b4\",\"#000\",\"#000\",\"#000\"],top:[\"#14fffd\",\"#14fffd\",\"#14fffd\",\"#0d3a62\"]}},\"08\":{A:{env:[\"#0df\"],clo:[\"#571e57\",\"#ff0\"],head:[\"#f2c280\"],eyes:[\"#795548\",\"#000\"],mouth:[\"#ff0000\"],top:[\"#de3b00\",\"none\"]},B:{env:[\"#B400C2\"],clo:[\"#0D204A\",\"#00ffdf\"],head:[\"#ca8628\"],eyes:[\"#cbbdaf\",\"#000\"],mouth:[\"#1a1a1a\"],top:[\"#000\",\"#000\"]},C:{env:[\"#ffe926\"],clo:[\"#00d6af\",\"#000\"],head:[\"#8c5100\"],eyes:[\"none\",\"#000\"],mouth:[\"#7d0000\"],top:[\"#f7f7f7\",\"none\"]}},\"09\":{A:{env:[\"#4aff0c\"],clo:[\"#101010\",\"#fff\",\"#fff\"],head:[\"#dbbc7f\"],mouth:[\"#000\"],eyes:[\"#000\",\"none\",\"none\"],top:[\"#531148\",\"#531148\",\"#531148\",\"none\"]},B:{env:[\"#FFC107\"],clo:[\"#033c58\",\"#fff\",\"#fff\"],head:[\"#dbc97f\"],mouth:[\"#000\"],eyes:[\"none\",\"#fff\",\"#000\"],top:[\"#FFEB3B\",\"#FFEB3B\",\"none\",\"#FFEB3B\"]},C:{env:[\"#FF9800\"],clo:[\"#b40000\",\"#fff\",\"#fff\"],head:[\"#E2AF6B\"],mouth:[\"#000\"],eyes:[\"none\",\"#fff\",\"#000\"],top:[\"#ec0000\",\"#ec0000\",\"none\",\"none\"]}},10:{A:{env:[\"#104c8c\"],clo:[\"#354B65\",\"#3D8EBB\",\"#89D0DA\",\"#00FFFD\"],head:[\"#cc9a5c\"],mouth:[\"#222\",\"#fff\"],eyes:[\"#000\",\"#000\"],top:[\"#fff\",\"#fff\",\"none\"]},B:{env:[\"#0DC15C\"],clo:[\"#212121\",\"#fff\",\"#212121\",\"#fff\"],head:[\"#dca45f\"],mouth:[\"#111\",\"#633b1d\"],eyes:[\"#000\",\"#000\"],top:[\"none\",\"#792B74\",\"#792B74\"]},C:{env:[\"#ffe500\"],clo:[\"#1e5e80\",\"#fff\",\"#1e5e80\",\"#fff\"],head:[\"#e8bc86\"],mouth:[\"#111\",\"none\"],eyes:[\"#000\",\"#000\"],top:[\"none\",\"none\",\"#633b1d\"]}},11:{A:{env:[\"#4a3f73\"],clo:[\"#e6e9ee\",\"#f1543f\",\"#ff7058\",\"#fff\",\"#fff\"],head:[\"#b27e5b\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"#000\",\"#57FFFD\"],top:[\"#ffc\",\"#ffc\",\"#ffc\"]},B:{env:[\"#00a08d\"],clo:[\"#FFBA32\",\"#484848\",\"#4e4e4e\",\"#fff\",\"#fff\"],head:[\"#ab5f2c\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"#ff23fa;opacity:0.39\",\"#000\"],top:[\"#ff90f4\",\"#ff90f4\",\"#ff90f4\"]},C:{env:[\"#22535d\"],clo:[\"#000\",\"#ff2500\",\"#ff2500\",\"#fff\",\"#fff\"],head:[\"#a76c44\"],mouth:[\"#191919\",\"#191919\"],eyes:[\"#000\",\"none\",\"#000\"],top:[\"none\",\"#00efff\",\"none\"]}},12:{A:{env:[\"#2668DC\"],clo:[\"#2385c6\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#ad8a60\"],mouth:[\"#000\",\"#4d4d4d\"],eyes:[\"#7fb5a2\",\"#d1eddf\",\"#301e19\"],top:[\"#fff510\",\"#fff510\"]},B:{env:[\"#643869\"],clo:[\"#D67D1B\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#CC985A\",\"none0000\"],mouth:[\"#000\",\"#ececec\"],eyes:[\"#1f2644\",\"#9b97ce\",\"#301e19\"],top:[\"#00eaff\",\"none\"]},C:{env:[\"#F599FF\"],clo:[\"#2823C6\",\"#b8d0e0\",\"#b8d0e0\"],head:[\"#C7873A\"],mouth:[\"#000\",\"#4d4d4d\"],eyes:[\"#581b1b\",\"#FF8B8B\",\"#000\"],top:[\"none\",\"#9c0092\"]}},13:{A:{env:[\"#d10084\"],clo:[\"#efedee\",\"#00a1e0\",\"#00a1e0\",\"#efedee\",\"#ffce1c\"],head:[\"#b35f49\"],mouth:[\"#3a484a\",\"#000\"],eyes:[\"#000\"],top:[\"#000\",\"none\",\"#000\",\"none\"]},B:{env:[\"#E6C117\"],clo:[\"#efedee\",\"#ec0033\",\"#ec0033\",\"#efedee\",\"#f2ff05\"],head:[\"#ffc016\"],mouth:[\"#4a3737\",\"#000\"],eyes:[\"#000\"],top:[\"#ffe900\",\"#ffe900\",\"none\",\"#ffe900\"]},C:{env:[\"#1d8c00\"],clo:[\"#e000cb\",\"#fff\",\"#fff\",\"#e000cb\",\"#ffce1c\"],head:[\"#b96438\"],mouth:[\"#000\",\"#000\"],eyes:[\"#000\"],top:[\"#53ffff\",\"#53ffff\",\"none\",\"none\"]}},14:{A:{env:[\"#fc0065\"],clo:[\"#708913\",\"#fdea14\",\"#708913\",\"#fdea14\",\"#708913\"],head:[\"#DEA561\"],mouth:[\"#444\",\"#000\"],eyes:[\"#000\"],top:[\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\",\"#32393f\"]},B:{env:[\"#81f72e\"],clo:[\"#ff0000\",\"#ffc107\",\"#ff0000\",\"#ffc107\",\"#ff0000\"],head:[\"#ef9831\"],mouth:[\"#6b0000\",\"#000\"],eyes:[\"#000\"],top:[\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"#FFFAAD\",\"none\",\"none\",\"none\",\"none\"]},C:{env:[\"#00D872\"],clo:[\"#590D00\",\"#FD1336\",\"#590D00\",\"#FD1336\",\"#590D00\"],head:[\"#c36c00\"],mouth:[\"#56442b\",\"#000\"],eyes:[\"#000\"],top:[\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"#004E4C\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"]}},15:{A:{env:[\"#111\"],clo:[\"#000\",\"#00FFFF\"],head:[\"#755227\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"#008;opacity:0.67\",\"aqua\"],top:[\"#fff\",\"#fff\",\"#fff\",\"#fff\",\"#fff\"]},B:{env:[\"#00D0D4\"],clo:[\"#000\",\"#fff\"],head:[\"#755227\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"#1df7ff;opacity:0.64\",\"#fcff2c\"],top:[\"#fff539\",\"none\",\"#fff539\",\"none\",\"#fff539\"]},C:{env:[\"#DC75FF\"],clo:[\"#000\",\"#FFBDEC\"],head:[\"#997549\"],mouth:[\"#fff\",\"#000\"],eyes:[\"black\",\"black\",\"aqua\"],top:[\"#00fffd\",\"none\",\"none\",\"none\",\"none\"]}}},sP=[],svgStart='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 231 231\">',svgEnd=\"</svg>\",env='<path d=\"M33.83,33.83a115.5,115.5,0,1,1,0,163.34,115.49,115.49,0,0,1,0-163.34Z\" style=\"fill:#01;\"/>',head='<path d=\"m115.5 51.75a63.75 63.75 0 0 0-10.5 126.63v14.09a115.5 115.5 0 0 0-53.729 19.027 115.5 115.5 0 0 0 128.46 0 115.5 115.5 0 0 0-53.729-19.029v-14.084a63.75 63.75 0 0 0 53.25-62.881 63.75 63.75 0 0 0-63.65-63.75 63.75 63.75 0 0 0-0.09961 0z\" style=\"fill:#000;\"/>',str=\"stroke-linecap:round;stroke-linejoin:round;stroke-width:\";sP[\"00\"]=[],sP[\"00\"].env=env,sP[\"00\"].clo='<path d=\"m141.74 195a114.93 114.93 0 0 1 37.912 16.45l0.07 0.05c-1.17 0.79-2.3601 1.55-3.5601 2.29a115.55 115.55 0 0 1-120.95 0.21q-2.0001-1.23-4.0002-2.54a114.79 114.79 0 0 1 38.002-16.5 116.21 116.21 0 0 1 15.791-2.49v-14.57c1.32 0.22 2.6501 0.39 4.0002 0.51 2.0001 0.19 4.0002 0.28 6.1202 0.29a64.333 64.33 0 0 0 8.8804-0.62c0.67003-0.09 1.3401-0.2 2.0001-0.31v14.69a118 118 0 0 1 15.741 2.54z\" style=\"fill:#fff;\"/><path d=\"m79.292 212a3.4601 3.46 0 0 0 3.8902 5.07 3.3801 3.38 0 0 0 2.1001-1.61 3.4701 3.47 0 0 0-1.2801-4.72 3.4201 3.42 0 0 0-2.6201-0.34 3.5101 3.51 0 0 0-2.0901 1.6zm60.122 0.46a3.4901 3.49 0 0 0 1.21 4.7h0.06a3.4601 3.46 0 0 0 4.7202-1.27l0.07-0.13a3.4601 3.46 0 0 0-1.34-4.6 3.4601 3.46 0 0 0-2.5801-0.32 3.5301 3.53 0 0 0-2.1001 1.61zm9.8004 5.7 5.8602 5.87c-1.39 0.5-2.7901 1-4.2102 1.44l-4.4802-4.47a7.5203 7.52 0 0 1-1.9401 0.81 7.8303 7.83 0 0 1-6.0002-0.79 7.8703 7.87 0 0 1-2.9201-10.69v-0.07a7.8903 7.89 0 0 1 10.77-2.88l0.12 0.07a7.8603 7.86 0 0 1 2.7901 10.62v0.07zm-37.701-2.36-9.5004 9.51v4.9c-1.35-0.16-2.6801-0.33-4.0002-0.54v-6l0.58002-0.58 10.1-10.09a7.8703 7.87 0 1 1 2.8401 2.86zm7.3203-5.91a3.4601 3.46 0 1 0-1.6101 2.1 3.3801 3.38 0 0 0 1.6101-2.1zm-29.741 7.82 3.0901 3.1 0.59002 0.59v7.36c-1.3401-0.26-2.6801-0.55-4.0002-0.87v-4.84l-2.5101-2.51a7.5203 7.52 0 0 1-1.9401 0.81 7.8803 7.88 0 1 1 1.9101-14.43 7.8703 7.87 0 0 1 2.8901 10.75z\" style=\"fill:#1a1a1a;\"/>',sP[\"00\"].head=head,sP[\"00\"].mouth='<path d=\"m94.19 136.84h42.632a3.7801 3.78 0 0 1 3.7802 3.78v3.22a15.231 15.23 0 0 1-15.211 15.16h-19.781a15.251 15.25 0 0 1-15.221-15.16v-3.22a3.8002 3.8 0 0 1 3.7802-3.78z\" style=\"fill:#fff;'+str+'3px;stroke:#1a1a1a;\"/><path d=\"m130.96 136.84v21.16m-30.911-21.16v21.16m10.34-21.16v22.16m10.31-22.2v22.2\" style=\"fill:none;'+str+'3px;stroke:#1a1a1a;\"/>',sP[\"00\"].eyes='<path d=\"m83.739 83.92h63.533a19.101 19.1 0 0 1 19.051 19 19.111 19.11 0 0 1-19.051 19h-63.533a19.091 19.09 0 0 1-19.001-19 19.091 19.09 0 0 1 19.001-19z\" style=\"fill:#1a1a1a;\"/><path d=\"m140.23 93.54a9.3804 9.38 0 1 0 9.3804 9.38 9.3804 9.38 0 0 0-9.3804-9.38zm-49.402 0a9.3804 9.38 0 1 0 9.3804 9.38 9.3904 9.39 0 0 0-9.3804-9.38z\" style=\"fill:#e6e7e8;\"/><rect x=\"79.795\" y=\"98.627\" width=\"71.471\" height=\"8.5859\" ry=\"4.2929\" style=\"fill:#b3b3b3;\"/>',sP[\"00\"].top='<path d=\"m32.902 67.662c-0.36295 1.7227-6.2342 30.695 5.6133 52.596 4.5843 8.4743 9.0081 13.239 12.75 15.893a67.7 67.7 0 0 1-3.4688-21.35 67.7 67.7 0 0 1 2.332-17.658c-4.4914-2.4646-10.868-6.9012-13.834-13.52-4.1626-9.285-3.6155-14.673-3.3926-15.961zm165.19 0c0.22292 1.2882 0.77005 6.6759-3.3926 15.961-2.9664 6.6183-9.3426 11.055-13.834 13.52a67.7 67.7 0 0 1 2.332 17.658 67.7 67.7 0 0 1-3.4688 21.35c3.7419-2.6532 8.1657-7.4183 12.75-15.893 11.847-21.9 5.9762-50.873 5.6133-52.596z\" style=\"fill:#fff;\"/><path d=\"m115.73 13.191c-7.3787-0.13351-13.509 5.7888-13.631 13.168-0.10128 5.8827 3.4508 10.518 8.0566 12.52 1.061 0.46115 2.1869 0.78009 3.3418 0.95703v8.4291c0.66778-0.02035 1.3358-0.03077 2.0039-0.03125 0.66547-9e-5 1.3309 0.0097 1.9961 0.0293v-8.4115c2.6002-0.38406 5.1586-1.5484 7.3086-3.625 4.2322-4.0878 4.9991-9.8755 3.1582-14.549-1.8407-4.6726-6.3502-8.3834-12.232-8.4863z\" style=\"fill:#fff;\"/>',sP[\"01\"]=[],sP[\"01\"].env=env,sP[\"01\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0 10.76 11.75 19.48 26.25 19.48s26.25-8.72 26.25-19.48z\" style=\"fill:#1a1a1a;\"/><path d=\"m92.502 194.27v0.70391c0 4.3033 2.4373 8.2583 6.3807 11.183 4.2199 3.1204 10.106 5.0508 16.661 5.0508 6.548 0 12.434-1.9303 16.654-5.0508 3.9434-2.9245 6.388-6.8795 6.388-11.183v-0.67489c1.0768 0.21771 2.1463 0.44994 3.2158 0.69666h-7e-3c1.0695 0.24672 2.1318 0.50798 3.1867 0.791-0.27648 6.103-3.6524 11.553-8.9708 15.493-5.2821 3.9114-12.521 6.328-20.466 6.328-7.9449 0-15.184-2.4165-20.474-6.328-5.333-3.9477-8.7089-9.4194-8.9708-15.544 1.055-0.27577 2.1099-0.53702 3.1722-0.78376 1.0695-0.23947 2.1463-0.46443 3.2304-0.68213z\" style=\"fill:#b3b3b3;\"/>',sP[\"01\"].head=head,sP[\"01\"].mouth='<path d=\"m100.35 143.85a7.67 7.67 0 0 0 7.58 7.7v0a7.66 7.66 0 0 0 7.57-7.7 7.66 7.66 0 0 0 7.57 7.7v0a7.67 7.67 0 0 0 7.58-7.7\" style=\"fill:none;'+str+'6.3998px;stroke:#333;\"/>',sP[\"01\"].eyes='<path d=\"m78.73 111a10.9 10.9 0 0 1 15.19 0m43.16 0a10.9 10.9 0 0 1 15.19 0\" style=\"fill:none;'+str+'6.1999px;stroke:#333;\"/><path d=\"m79.804 123.74h7.07m57.273 0h7.05\" style=\"fill:none;'+str+'5.9998px;stroke:#b8b8b8;\"/>',sP[\"01\"].top='<path d=\"m57.534 142.03c-6.9383-31.75-0.57294-52.577 14.174-62.344 22.562-12.283 62.082-12.222 83.484-1.8846 21.348 11.177 22.124 37.396 18.498 63.733 8.1279-14.155 13.164-31.598 14.085-48.902 1.0828-11.795-1.1756-18.866-7.4833-27.972-26.465-37.685-103.45-31.56-129.66-2.8372-7.8504 9.4615-9.6006 17.478-9.275 26.667 1.0024 18.667 6.9688 38.508 16.18 53.54z\" style=\"fill:#b3b3b3;\"/><path d=\"m111.26 3.0423c-6.013 0.1128-12.629 2.6924-15.291 7.9082-1.1676 3.2383-1.6758 6.2069-1.6758 8.8926 0.89228-0.2661 1.8005-0.5164 2.7266-0.7441 3.7502-1.0672 7.4851-1.7135 11.129-1.9981 1.1007-0.086 2.1953-0.1391 3.2773-0.1601h2e-3c5.6969-0.1133 11.09 0.6603 15.904 2.0527 0.0552-3.042-0.70696-5.9824-2.1738-8.5-1.8411-3.1599-4.7033-5.5568-8.4297-6.8262-1.6883-0.4952-3.5163-0.662-5.4688-0.625zm3.0664 17.449c-0.69317-0.01-1.3919-0.01-2.0938 0h-2e-3c-1.1591 0.019-2.3326 0.064-3.5117 0.1386-3.9035 0.246-7.9025 0.8061-11.92 1.7285-15.159 3.0075-26.469 9.9279-22.068 19.682 22.891-8.7773 52.315-10.403 76.023-2.2129 2.1414-9.5529-14.939-19.081-36.428-19.34z\" style=\"fill:#b3b3b3;\"/><path d=\"m165.62 16.981c-0.8575 0-1.9406 0.54389-3.3476 1.3574-7.3382 4.7652-13.452 10.867-19.516 18.363 9.2734 2.1825 17.903 5.6706 25.213 10.604 1.1512-9.1263 1.9137-18.503 0.055-26.996-0.57-2.4184-1.3017-3.3267-2.4043-3.3281zm-104.09 1.6934c-1.1026 0-1.8342 0.91165-2.4043 3.3301-1.8794 8.5869-1.0806 18.078 0.092 27.299 7.0559-4.6638 15.687-8.3667 25.111-10.984-6.043-7.4601-12.139-13.537-19.451-18.285-1.407-0.81353-2.4901-1.3605-3.3477-1.3594z\" style=\"fill:#b3b3b3;\"/><path d=\"m162.45 16.686c-2.3175 2e-3 -4.6276 0.57608-6.8926 1.668-8.4768 6.0155-11.113 13.349-10.133 19.787 10.323 2.7077 19.762 7.0658 27.346 13.279 9.848-4.9363 11.32-17.137 4.6152-25.852-4.7104-6.1222-9.8371-8.8878-14.936-8.8828zm-97.318 4.1387c-2.4569 0.0556-5.1642 0.54474-8.1172 1.5176-13.487 4.4433-19.06 21.215-3.6484 31.84 7.2476-6.0694 16.961-10.896 27.892-14.229 0.2193-3.3241-0.3201-7.0817-1.8691-11.236-2.8049-4.8445-7.2233-7.721-13.221-7.8906-0.3408-0.01-0.6861-0.01-1.0371-2e-3z\" style=\"fill:#b3b3b3;\"/>',sP[\"02\"]=[],sP[\"02\"].env=env,sP[\"02\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0 10.76 11.75 19.48 26.25 19.48s26.25-8.72 26.25-19.48z\" style=\"fill:#5a5a5a;\"/>',sP[\"02\"].head=head,sP[\"02\"].mouth='<path d=\"m115.5 161.71c-8.24 0-14.46-4.15-19.19-11.25 3.37-2.44 6.51-4.57 10-6.79a5.25 5.25 0 0 1 5.48-0.17 28.19 28.19 0 0 1 3.68 2.75 28.19 28.19 0 0 1 3.68-2.75 5.25 5.25 0 0 1 5.48 0.17c3.52 2.22 6.66 4.35 10 6.79-4.74 7.1-11 11.25-19.19 11.25z\" style=\"fill:#5a5a5a;\"/>',sP[\"02\"].eyes='<path d=\"m172.7 90.75h-6.54c-0.14-0.1-0.26-0.22-0.4-0.3-4.48-2.76-22.75-2.11-33.71 1.2-1 0.3-1.91 0.61-2.75 0.94-1.8937 0.79244-3.8739 1.3597-5.9 1.69-5.5051 0.79002-10.403 0.79002-15.908 0-2.0261-0.33034-4.0063-0.89756-5.9-1.69-0.84-0.33-1.76-0.64-2.75-0.94-11-3.31-29.23-4-33.71-1.2-0.13832 0.08869-0.2688 0.18906-0.39 0.3h-6.55c-1.1046 0-2 0.89543-2 2v4.66c-0.0013 0.98185 0.49088 1.8986 1.31 2.44l1.9 1.27c0.59238 0.38889 0.93475 1.0622 0.9 1.77-0.14175 5.4854 0.88072 10.939 3 16 3.58 8.38 16 10.9 24.93 10.9 2.6976 0.0771 5.3921-0.2361 8-0.93 4.35-1.43 8.24-7.36 10.45-12.42 1.7607-3.8506 2.7493-8.009 2.91-12.24 7.3e-4 -0.7138 0.38183-1.3731 1-1.73 3.2281-1.951 6.5798-1.951 9.8079 0 0.61817 0.3569 0.99927 1.0162 1 1.73 0.16067 4.231 1.1493 8.3894 2.91 12.24 2.21 5.06 6.1 11 10.45 12.42 2.6079 0.6939 5.3024 1.0071 8 0.93 8.92 0 21.35-2.52 24.93-10.9 2.1193-5.0614 3.1418-10.515 3-16-0.0348-0.70778 0.30762-1.3811 0.9-1.77l1.9-1.27c0.81913-0.54136 1.3113-1.4582 1.31-2.44v-4.6c0.0336-1.1048-0.83521-2.0274-1.94-2.06z\" style=\"fill:#1a1a1a;'+str+'2.5;stroke:#b3b3b3;\"/>',sP[\"02\"].top='<path d=\"m124.22 13.61c-19.783 0-36.945 8.0887-39.695 24.106-15.332 0.23539-31.831 2.7712-41.663 15.782-6.0238 7.9604-7.0402 19.901-6.8476 31.724 0.46007 28.503 10.742 64.228-4.3012 89.714 16.584 5.7777 43.086 10.742 73.59 11.662v-8.6558c-1.851-0.35308-3.6592-0.78105-5.4353-1.2732-30.953-8.4632-50.672-36.635-47.259-68.669 1.5514-10.603 4.6221-19.665 10.025-27.69 5.3818-7.9925 13.267-15.717 23.892-21.41 0.40658 0.72757 1.9901 3.5843 2.4074 4.3012 7.5003 12.775 17.986 23.849 33.157 26.866 12.433 2.4609 23.849 3.4666 36.346 1.1555 4.2584-0.78106 10.667-2.3967 14.851-2.4181 14.861 33.404-1.0806 75.035-40.668 87.457-2.2255 0.70616-4.5258 1.316-6.8904 1.8189 0 2.707-0.0428 5.6493-0.0642 8.5274 23.603-0.72757 48.682-4.0444 72.874-11.234-18.521-32.152 0.81315-89.083-10.036-121.46-9.0731-26.973-38.85-40.315-64.282-40.305z\" style=\"fill:#c5c5c5;\"/><path d=\"m33.147 172.32c-2.6535 5.1143-6.088 9.9504-10.1 12.411 7.8427 10.453 17.387 19.516 28.257 26.781 16.038-10.731 35.629-17.055 54-18.606v-9.0089c-30.065-0.94155-56.108-5.8847-72.157-11.577zm164.06 0.55637c-23.731 7.0723-48.361 10.325-71.525 11.042-0.0321 3.1242-0.0535 6.2377-0.0107 9.0517 19.227 1.7226 37.908 7.8534 53.989 18.542 0.0107 0 0.0107 0 0.0214 0.0107 10.731-7.1686 20.179-16.081 27.958-26.374-4.2798-2.3967-7.832-6.9653-10.432-12.272z\" style=\"fill:#c5c5c5;\"/><path d=\"m50.02 46.5c-2.9297 1.9143-6.1313 3.8826-10.154 7.9805-14.091 14.359-16.145 27.701-6.1406 44.018 4.2049 6.8583 6.1414 13.706-0.24609 20.5-7.7143 8.1957-21.559 4.2912-21.537 16.061 0.0214 8.613 15.063 7.9178 22.531 13.984 3.7662 3.0707 5.0836 8.3992 2.0664 12.508-4.2156 5.7456-16.006 7.3715-22.629 8.9336 5.8811 10.843 13.45 20.638 22.355 29.033l0.0039 0.0234 0.0059-0.0137c2e-3 2e-3 0.0038 4e-3 0.0059 6e-3 0.0034-0.0112 0.0063-0.0219 0.0098-0.0332 14.775-12.218 20.268-20.965 49.461-28.434-17.404-10.258-30.68-27.122-24.143-35.34 4.4123-5.5444 5.6612-7.8633 6.4062-12.078 2.3582-13.339-10.208-22.335-9.2363-32.715 1.9432-8.2346 11.379-11.173 16.947-15.115 5.4577-3.9082 9.8014-8.7695 10.799-16.918-13.558-4.8896-17.609-5.8617-36.506-12.4zm140.87 19.357c-3.4404-0.91243-23.311 122.43 4.4121 133.14 8.9661-8.5809 16.552-18.584 22.404-29.658 0-0.31029-25.133-3.9922-25.979-14.018-0.10699-1.1769 0.11822-1.4855 0.86718-2.502 6.6764-9.2122 30.716-11.416 29.646-23.496-0.27818-3.1563-4.1617-5.2334-6.7402-6.4531-12.155-5.767-32.942-9.6494-15.031-24.543 9.2122-7.3505 10.43-8.4323 0.59766-14.691-9.4583-6.0238-9.394-11.993-9.7578-16.326-0.0767-0.93035-0.22089-1.4003-0.41992-1.4531z\" style=\"fill:#c5c5c5;\"/><path d=\"m133.83 39.909c-11.33 1.393-9.5492 16.204-2e-3 16.643-4.5102 10.717 9.0165 16.181 14.441 8.3125 6.562 8.6765 18.596 0.94751 14.457-8.3125 11.718-1.5381 9.2769-16.099 0-16.643 4.503-10.867-9.4883-16.101-14.457-8.3301-6.8832-9.0411-18.509-0.47321-14.439 8.3301z\" style=\"fill:#333;\"/><path d=\"m153.86 48.222c0-3.0528-2.5184-5.5648-5.5791-5.5648-3.0783 0-5.5793 2.512-5.5793 5.5648 0 3.0703 2.501 5.5648 5.5793 5.5648 3.0606 0 5.5791-2.4946 5.5791-5.5648z\" style=\"fill:#f9f9f9;\"/>',sP[\"03\"]=[],sP[\"03\"].env=env,sP[\"03\"].clo='<path d=\"m141.75 195c13.563 3.1499 26.439 8.7409 38 16.5-38.873 26.001-89.587 26.001-128.46 0 11.561-7.7591 24.437-13.35 38-16.5 8.4869 8.8011 26.21 25.619 26.21 25.619s17.603-16.972 26.25-25.619z\" style=\"fill:#d6d6d6;\"/><path d=\"m109 230.81 1.6836-14.33h9.6328l1.6836 14.33c-2.16 0.12-4.33 0.19-6.51 0.19s-4.35-0.07-6.51-0.19z\" style=\"fill:#5e5e5e;\"/><path d=\"m124.17 210.6h-17.349v5.53a3.8828 3.29 0 0 0 3.8828 3.29h9.583a3.8828 3.29 0 0 0 3.8828-3.29z\" style=\"fill:#535353;\"/><path d=\"m140.57 190.36-25.066 20.245c5.9686 3.2455 11.597 7.0814 16.8 11.45 1.5989 1.3338 3.9762 1.1189 5.31-0.48 0.21005-0.25749 0.38802-0.53956 0.52999-0.84l10.826-23.805-4-6c-0.90256-1.351-2.7298-1.7137-4.08-0.81-0.11612 0.0786-0.22641 0.16549-0.33 0.26z\" style=\"fill:#c6c6c6;\"/><path d=\"m90.434 190.36 25.066 20.245c-5.9686 3.2455-11.597 7.0814-16.8 11.45-1.5989 1.3338-3.9762 1.1189-5.31-0.48-0.21005-0.25749-0.38802-0.53956-0.52999-0.84l-10.826-23.805 4-6c0.90256-1.351 2.7298-1.7137 4.08-0.81 0.11612 0.0786 0.22641 0.16549 0.33 0.26z\" style=\"fill:#c6c6c6;\"/>',sP[\"03\"].head=head,sP[\"03\"].mouth='<path d=\"m136.21 147.09a21.77 21.77 0 0 1-40.13 0z\" style=\"fill:#fff;'+str+'3.4999px;stroke:#000;\"/>',sP[\"03\"].eyes='<path d=\"m145.39 104.7-11.52 11.2h17.26m-65.52-11.2 11.52 11.2h-17.26\" style=\"fill:none;'+str+'5.4998px;stroke:#000;\"/>',sP[\"03\"].top='<path d=\"m43.891 77.836c-5.1124 28.237 2.1347 61.004 24.792 81.332-6.2362-12.503-9.5362-33.948-9.4887-45.458-0.50203-37.473 41.439-46.335 56.149-17.614 18.8-31.2 52.825-16.872 54.062 13.714 0.56018 13.844-0.43568 25.598-7.0962 48.966 18.372-12.47 28.012-53.959 23.545-80.941-47.486-2.2552-94.831-2.5724-141.96 0z\" style=\"fill:#1a1a1a;\"/><path d=\"m111.26 12.782c-18.508 0.0791-32.594 3.6163-32.594 3.6163 24.513 5.6002 32.807 10.504 31.743 19.835-0.87227 9.702-11.092 10.875-20.811 11.554-5.2548 0.36414-10.949 0.71523-16.391 1.7525-11.862 2.2818-19.946 4.3736-24.447 11.956-1.7012 2.8662-3.7945 10.428-4.8689 16.34h141.96c-5.7242-38.563-32.557-65.073-74.595-65.054z\" style=\"fill:#1a1a1a;\"/><path d=\"m73.292 44.77c-11.788 2.2816-18.923 5.5444-23.394 13.126-2.8484 6.7586-4.8454 13.238-6.0072 19.939h141.96c-1.9772-14.576-6.8677-28.248-19.277-32.098-28.834-6.3308-63.774-6.3553-93.285-0.96761z\" style=\"fill:#1a1a1a;\"/><path d=\"m165.95 35.642c-11.178 21.829-91.89 19.36-103.98 2.3011-9.703 12.267-15.605 25.883-18.079 39.892h141.96c-3.0096-17.158-9.7424-32.688-19.902-42.193z\" style=\"fill:#1a1a1a;\"/>',sP[\"04\"]=[],sP[\"04\"].env=env,sP[\"04\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l15.71 15.75h21z\" style=\"fill:#949494;\"/><path d=\"m115.45 211.34-10.55 10.54a2.51 2.51 0 0 1-3.5599 0 2 2 0 0 1-0.26999-0.30994l-18.48-25.4 5.8901-5.8899a2.52 2.52 0 0 1 3.5199-0.0791l23.49 21.14z\" style=\"fill:#c0c0c0;\"/><path d=\"m115.45 211.34 10.55 10.54a2.51 2.51 0 0 0 3.5599 0 2 2 0 0 0 0.26999-0.30994l18.48-25.4-5.8901-5.8899a2.52 2.52 0 0 0-3.4699-0.089l-23.49 21.14z\" style=\"fill:#c0c0c0;\"/><path d=\"m158.41 199.58-10.11-3.2401v29.93q5.1601-1.5299 10.11-3.51zm-75.82 26.66v-29.9l-10.1 3.2401v23.14c3.2901 1.3199 6.67 2.4999 10.1 3.5199z\" style=\"fill:#7c7c7c;\"/>',sP[\"04\"].head=head,sP[\"04\"].mouth='<path d=\"m118.05 148.38c-1.5064 0.59192-2.595 2.0264-2.6191 3.9863-0.0574 1.3977 0.53421 3.5611 3.6758 5.7949 8.0544 4.9446 21.507 3.6862 21.255-7.1658-4.664 4.8219-10.021 5.6377-14.773 0.73907-1.2328-1.1599-2.3694-2.4032-3.9294-3.1408-1.0946-0.50424-2.2257-0.61071-3.6096-0.21337z\" style=\"fill:#333;\"/><path d=\"m133.61 154.93c3.0731-0.48816 5.5702-2.8457 5.4438-4.5059-0.47801-4.8311-5.7317-3.0917-4.3369-0.31405-2.8103-1.4445-1.8343-3.8862 0.50427-4.7324 2.0509-0.79942 5.0937 0.34314 6.2002 2.6376 2.2229 7.3422-3.4376 11.68-10.384 12.561z\" style=\"fill:#333;\"/><path d=\"m112.81 148.38c1.5064 0.59192 2.595 2.0264 2.6191 3.9863 0.0574 1.3977-0.53421 3.5611-3.6758 5.7949-8.0544 4.9446-21.507 3.6862-21.255-7.1658 4.664 4.8219 10.021 5.6377 14.773 0.73907 1.2328-1.1599 2.3694-2.4032 3.9294-3.1408 1.0946-0.50424 2.2257-0.61071 3.6096-0.21337z\" style=\"fill:#333;\"/><path d=\"m97.252 154.93c-3.0731-0.48816-5.5702-2.8457-5.4438-4.5059 0.47801-4.8311 5.7317-3.0917 4.3369-0.31405 2.8103-1.4445 1.8343-3.8862-0.50427-4.7324-2.0509-0.79942-5.0937 0.34314-6.2002 2.6376-2.2229 7.3422 3.4376 11.68 10.384 12.561z\" style=\"fill:#333;\"/>',sP[\"04\"].eyes='<path d=\"m131.64 114.09 7.5801-7.5801 7.5801 7.5801m-62.6 0 7.5801-7.5801 7.5799 7.5801\" style=\"fill:none;'+str+'6.4998px;stroke:#000;\"/>',sP[\"04\"].top='<path d=\"m137.38 11.148c-12.23 1.9593-18.511 14.606-43.436 9.4915-11.285-3.2054-16.406-3.573-20.389 0.58594-4.1548 4.3384-7.033 12.435-9.8184 21.706-2.1354 7.4136-3.7187 14.381-4.7461 21.646h112.7c-3.4878-24.293-10.822-43.281-25.182-51.061-3.5314-1.623-6.5274-2.2959-9.1289-2.3613z\" style=\"fill:#b3b3b3;\"/><path d=\"m114.37 43.383c-19.445 0.088-38.524 2.0724-52.379 5.6992-1.2766 4.5795-2.4317 10.169-3.2285 16.807h113.11c-0.83731-6.0107-1.9164-11.674-3.3184-16.924-15.229-3.8842-34.873-5.6693-54.18-5.582z\" style=\"fill:#e6e6e6;\"/><path d=\"m115.5 55.773c-58.39 0-105.73 15.476-105.73 34.57h0.0312c0 11.295 16.496 21.319 42.126 27.627-0.10331-7.7704 2.788-21.904 5.2734-31.031 6.0935-1.7168 6.9294-1.8971 13.167-2.9919 14.874-2.8256 29.99-4.2037 45.133-4.1153 15.143-0.0884 30.259 1.2897 45.133 4.1153 6.2372 1.0947 7.2065 1.2751 13.3 2.9919 2.4854 9.1267 5.3768 23.26 5.2734 31.031 25.63-6.3082 41.993-16.332 41.993-27.627h0.0312c0-19.093-47.34-34.57-105.73-34.57z\" style=\"fill:#818181;\"/><path d=\"m72.088 83.533c-6.9765 1.1147-13.357 2.856-18.439 4.3477-1.1861 7.415-2.0038 18.858-1.8926 26.293 4.3278-0.62795 10.155-1.3644 13.295-1.6465-0.40554 0.30198 2.7344-17.827 7.0371-28.994zm86.824 0c4.3028 11.167 7.4426 29.296 7.0371 28.994 3.1396 0.28213 8.9671 1.0185 13.295 1.6465 0.11119-7.4351-0.70652-18.878-1.8926-26.293-5.0822-1.4916-11.463-3.2329-18.439-4.3477z\" style=\"fill:#434343;\"/>',sP[\"05\"]=[],sP[\"05\"].env=env,sP[\"05\"].clo='<path d=\"m141.75 194.98a114.79 114.78 0 0 1 38 16.498 115.53 115.52 0 0 1-128.46 0 114.79 114.78 0 0 1 38-16.498l15.71 15.748h21z\" style=\"fill:#d2d2d2;\"/><path d=\"m70 200.88v20.77c-2.22-0.95325-4.3999-1.9698-6.5399-3.0496h-0.10088v-14.621c2.17-1.1 4.39-2.1399 6.64-3.0996z\" style=\"fill:#505050;\"/><path d=\"m161 200.88v20.77c1.9-0.80986 3.7702-1.6798 5.6201-2.5898l0.0989-0.0494 0.82005-0.40997h0.10088v-14.621c-2.17-1.1-4.39-2.1399-6.6402-3.0996z\" style=\"fill:#505050;\"/><polygon transform=\"matrix(1 0 0 .99987 4e-5 -3e-5)\" points=\"97.32 201.93 115.5 223.72 133.68 201.93\" style=\"fill:#171717;\"/><path d=\"m111.2 230.88 1.31-16.908c0.32992 1.2798 5.6399 1.2798 5.9999 0l1.3201 16.938c-1.4301 0.0494-2.8601 0.089-4.3 0.089s-2.87 0-4.3-0.089z\" style=\"fill:#171717;\"/><path d=\"m115.49 201.79v0.0692l-7.55 12.678-7.0001 11.809-19.19-26.487c0.60999-0.42995 1.22-0.89985 1.8001-1.3899a52 51.993 0 0 0 10.07-10.619l21.79 13.878z\" style=\"fill:#ebebeb;\"/><path d=\"m149.24 199.86-19.08 26.517-7.0001-11.809-7.57-12.678-0.0593-0.10086 21.94-13.998a52.21 52.203 0 0 0 10.08 10.699c0.58013 0.47009 1.1502 0.92002 1.7301 1.3399z\" style=\"fill:#ebebeb;\"/>',sP[\"05\"].head=head,sP[\"05\"].mouth='<path d=\"m122.83 151.88a10.49 10.489 0 0 1-14.66 0\" style=\"fill:none;'+str+'6.1996px;stroke:#333;\"/>',sP[\"05\"].eyes='<path d=\"m70.959 94.985h35.031c2.4086 1e-5 4.3612 1.9523 4.3612 4.3606l-2.5864 17.511c-0.3515 2.3799-1.7218 4.3606-3.8457 4.3606h-30.9c-2.1239-1e-5 -3.8457-1.9523-3.8457-4.3606l-2.5864-17.511c1e-5 -2.4082 1.9526-4.3606 4.3612-4.3606z\" style=\"fill:#1a1a1a;'+str+'3.0045px;stroke:#333;\"/><path d=\"m160.05 94.985h-35.031c-2.4086 1e-5 -4.3612 1.9523-4.3612 4.3606l2.5864 17.511c0.35149 2.3799 1.7218 4.3606 3.8457 4.3606h30.9c2.1239-1e-5 3.8457-1.9523 3.8457-4.3606l2.5864-17.511c-1e-5 -2.4082-1.9526-4.3606-4.3612-4.3606z\" style=\"fill:#1a1a1a;'+str+'3.0045px;stroke:#333;\"/><path d=\"m90.607 102.35a4.6337 4.6332 0 1 0 4.6892 4.6337 4.6337 4.6332 0 0 0-4.6892-4.6337zm49.72 0a4.6337 4.6332 0 1 0 4.6444 4.6337 4.6337 4.6332 0 0 0-4.6444-4.6337z\" style=\"fill:#1a1a1a;\"/><path d=\"m70.66 94.985h-11.775\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m172.13 94.985h-19.484\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m109.32 106.2c4.2045-2.427 9.3036-1.913 12.353-0.0258\" style=\"fill:none;'+str+'3.0045px;stroke:#333;\"/><path d=\"m148.33 109.79-5.7626-8.2324\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m156.27 105-2.403-3.4328\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m82.748 114.34-8.9489-12.784\" style=\"fill:none;'+str+'4;stroke:#fff;\"/><path d=\"m91.408 109.79-5.7626-8.2324\" style=\"fill:none;'+str+'4;stroke:#fff;\"/>',sP[\"05\"].top='<path d=\"m41.835 75.131c-2.8674 12.582 1.2304 27.241 6.0238 39.031 0.25861 0.63658 0.51208 1.3075 0.79989 1.9683 0.71726 1.658 2.1184 3.9751 3.0038 3.9266 0.56895-0.0312 0.71637-1.5512 1.0228-3.1562 2.1988-19.097 8.8981-27.915 15.636-38.107 2.8783-4.0645 3.8616-7.2293 1.0644-9.9325-6.3236-3.5596-14.924-2.8574-21.367-0.67406-3.2312 1.4765-5.2427 3.4773-6.1842 6.9439zm125.65-8.5679c7.65-0.70616 19.714-0.1307 21.694 8.5679 1.455 6.4083 0.26915 17.747-1.0542 24.579-1.1961 5.3203-3.8066 14.231-7.8782 19.75-0.5565 0.44544-0.96888 0.13656-1.4159-1.1606-0.90692-3.0353-1.4298-7.8372-2.2556-10.727-3.4822-12.79-8.2195-21.875-14.429-29.94-5.5782-6.8415-4.2152-9.7207 5.3393-11.069z\" style=\"fill:#4d4d4d;\"/><path d=\"m112.27 73.826c-18.585-7.5217-34.987-14.797-48.939 5.018-4.9752 7.083-3.7876 8.8056-4.9217 0.0749-1.637-12.476-4.7505-34.174 1.9259-45.194 7.6822-12.7 19.323-13.128 31.039-5.3818 10.796 7.7784 24.277 14.647 38.015 12.219 12.732-2.2576 15.835-7.7464 15.707-19.912-0.0215-2.6-0.0963-5.2106-0.2033-7.7999 13.631 3.9267 24.609 14.776 26.513 29.049 0.88804 6.6336 0.26749 12.722-1.9259 19.013-5.9702 17.108-30.119 20.896-45.74 16.841-3.9588-1.0378-7.6822-2.4181-11.47-3.9267z\" style=\"fill:#4d4d4d;\"/>',sP[\"06\"]=[],sP[\"06\"].env=env,sP[\"06\"].clo='<path d=\"m115.5 231a115 115 0 0 0 64.23-19.5 114.79 114.79 0 0 0-38-16.5l-2.41-9a125.19 125.19 0 0 0-13.32-2.28v8.75q3.52 0.32 7 0.84l-17.5 17.48-17.5-17.48q3.45-0.52 7-0.84v-8.75a125.55 125.55 0 0 0-13.34 2.28l-2.41 9a114.79 114.79 0 0 0-38 16.5 114.94 114.94 0 0 0 64.25 19.5z\" style=\"fill:#646464;\"/><path d=\"m132.98 193.33-36.185 36.155-2.4-0.42 36.108-36.081z\" style=\"fill:#e3e3e3;\"/>',sP[\"06\"].head=head,sP[\"06\"].mouth='<path d=\"m127.84 146.73c-2.24 8.93-6.92 15.08-12.34 15.08s-10.1-6.15-12.34-15.08z\" style=\"fill:#fff;'+str+'2.9999px;stroke:#1a1a1a;\"/>',sP[\"06\"].eyes='<path d=\"m129.31 114.14 20-5.37m-47.66 5.37-20-5.37\" style=\"fill:none;'+str+'4.9998px;stroke:#1a1a1a;\"/>',sP[\"06\"].top='<path d=\"m169.65 90.998c3.137 11.94 4.9371 36.484-3.4118 58.213l5.129 3.1164c10.044-15.199 14.959-39.163 13.943-61.33z\" style=\"fill:#1a1a1a;\"/><path d=\"m45.081 90.989c-0.88085 4.9304-0.87534 14.953-0.15027 21.75 2.1318 19.98 16.671 42.505 16.671 42.505l5.7352-4.4331s-13.244-31.348-6.0571-52.751c0.52108-1.5517 0.95592-2.916 1.3462-4.1835z\" style=\"fill:#1a1a1a;\"/><path d=\"m117 3.4883c-8.2136-0.19887-19.13 7.933-18.494 9.3516 1.6214 3.6186 11.176 22.55 11.889 23.963h10.148c2.6022-6.3102 11.32-26.531 11.32-26.531s-4.1382-4.138-12.416-6.4375c-0.77605-0.21556-1.5976-0.32513-2.4473-0.3457z\" style=\"fill:#1a1a1a;\"/><path d=\"m115.95 4.5428c-3.1563 0-6.3123 0.57462-9.2165 1.715-5.8084 2.2817-10.532 6.808-12.779 12.245v-5e-3c-1.8166 4.397-2.0233 9.3441-0.58058 13.857 0.69352 2.1687 1.7693 4.2296 3.1533 6.0968h38.893c0.71032-0.95769 1.3441-1.9641 1.8787-3.0144 2.6811-5.2673 2.9296-11.542 0.67253-16.975-2.257-5.4337-6.9893-9.9522-12.802-12.224-2.9064-1.1335-6.0633-1.6987-9.2196-1.6956z\" style=\"fill:#1a1a1a;\"/><path d=\"m92.512 28.125c0.13387 1.4318 0.41877 2.8511 0.85962 4.2306 1.4429 4.5127 4.5278 8.5654 8.6411 11.353 4.1135 2.7873 9.2311 4.2913 14.336 4.2165 5.1052-0.0764 10.168-1.7333 14.181-4.6419 2.8754-2.0834 5.2132-4.7932 6.7665-7.8447 1.2005-2.3586 1.9085-4.9188 2.127-7.5156-15.037-2.6407-31.421-3.4671-46.912 0.20253z\" style=\"fill:#b3b3b3;\"/><path d=\"m34.426 90.63c14.714 4.0779 22.683 6.4085 45.254 7.4257 2.5318-18.185 4.6689-28.672 10.023-38.352 3.2025 13.403 3.8346 25.22 2.9106 42.253l11.172-0.23161c1.4706-11.886 3.8989-29.213 2.1636-42.021 10.416 12.631 11.373 23.624 13.077 39.726 30.174-0.76004 59.808-4.5121 77.845-10.128-10.76-38.608-41.475-55.66-80.38-56.104-38.182-0.45134-74.543 22.405-82.065 57.432z\" style=\"fill:#1a1a1a;\"/>',sP[\"07\"]=[],sP[\"07\"].env=env,sP[\"07\"].clo='<path d=\"m88.18 194.11c-4.2079 1.021-8.3545 2.2792-12.42 3.7695v26.072a115.5 115.5 0 0 0 79.48 0v-26.072c-4.0858-1.4904-8.2529-2.7486-12.48-3.7695v8.7051c0 9.3888-7.6112 17-17 17h-20.58c-9.3888 0-17-7.6112-17-17v-8.7051z\" style=\"fill:#efefef;\"/>',sP[\"07\"].head=head,sP[\"07\"].mouth='<polygon points=\"121.61 160.74 109.39 160.74 115.5 171.31\" style=\"fill:#797979;\"/><path d=\"m132.64 144.06a34.42 34.42 0 0 1-34.24 0\" style=\"fill:none;'+str+'5.9998px;stroke:#000;\"/>',sP[\"07\"].eyes='<path d=\"m170.25 100c1.69 9.62-4.79 29.23-22.4 29.23-6.81 0-15-3.66-20.23-10-4.34-5.33-7.56-12.87-6.2-19.45 1.63-7.89 7.07-11.45 14.67-12.92a68.16 68.16 0 0 1 12.52-1c10.77 0 19.78 3.61 21.64 14.22z\" style=\"fill:#565656;stroke-width:3.99px;stroke:#000;\"/><path d=\"m60.75 100c-1.69 9.62 4.79 29.23 22.4 29.23 6.81 0 15-3.66 20.23-10 4.34-5.33 7.56-12.87 6.2-19.45-1.63-7.89-7.07-11.45-14.67-12.92a68.16 68.16 0 0 0-12.52-1c-10.77 0-19.78 3.61-21.64 14.22z\" style=\"fill:#565656;stroke-width:3.99px;stroke:#000;\"/><line x1=\"100.2\" x2=\"130.8\" y1=\"87.92\" y2=\"87.92\" style=\"fill:none;'+str+'3.99px;stroke:#000;\"/><path d=\"m109.87 101.73c0-2.59 2.52-4.69 5.63-4.69s5.63 2.1 5.63 4.69\" style=\"fill:none;stroke-width:3.99px;stroke:#000;\"/>',sP[\"07\"].top='<path d=\"m30.622 70.381c2.0971-3.9374 4.6649-7.9604 7.6822-12.037 3.0172-4.0765 6.0987-7.6929 9.2229-10.817l22.897 22.897c-4.4402 4.4403-8.2278 9.5439-11.213 15.14z\" style=\"fill:#999;\"/><path d=\"m160.58 70.423 22.907-22.897c3.1242 3.1242 6.2056 6.7406 9.2229 10.817 3.0065 4.0765 5.5744 8.0994 7.6715 12.037l-28.578 15.182c-2.9851-5.5958-6.7727-10.689-11.224-15.14z\" style=\"fill:#999;\"/><path d=\"m92.411 15.247c3.8197-0.87736 7.6715-1.5407 11.534-1.9794 4.0765-0.46007 7.9282-0.69546 11.555-0.69546 1.53 0 3.1563 0.0428 4.8682 0.1391l1.851 22.255 5.767-21.57c3.1028 0.37449 6.0666 0.86666 8.8912 1.4658l-10.55 49.763c-1.9259-0.41729-3.702-0.70617-5.3176-0.87736-1.423-0.14979-3.2633-0.22468-5.5102-0.22468-2.2362 0-4.237 0.10699-5.981 0.29958-1.9473 0.22469-3.8732 0.55636-5.767 0.99504z\" style=\"fill:#999;\"/><path d=\"m92.411 15.247c1.9152-0.43869 4.023-0.84526 6.3233-1.2304 2.065-0.34238 4.1514-0.62057 6.2698-0.84525l5.1785 50.565c-1.0913 0.10699-2.1827 0.25679-3.2954 0.43868-0.86665 0.14979-1.9152 0.36378-3.1349 0.64196z\" style=\"fill:#4d4d4d;\"/>',sP[\"08\"]=[],sP[\"08\"].env=env,sP[\"08\"].clo='<path d=\"m141.89 195a114.79 114.79 0 0 1 38 16.5 115.55 115.55 0 0 1-128.47 0 114.79 114.79 0 0 1 38-16.5l15.75 15.75h21z\" style=\"fill:#353535;\"/><path d=\"m146.4 196.14-17.4 17.44-1.17 1.17h-24.34l-1.18-1.17-17.43-17.44c1.49-0.41 3-0.79 4.51-1.14l4.67-1 12.74 12.74h17.69l12.73-12.74 4.67 1c1.52 0.35 3 0.73 4.51 1.14z\" style=\"fill:#919191;\"/>',sP[\"08\"].head=head,sP[\"08\"].mouth='<path d=\"m115.68 160.64c7.08 0 13.11-4.93 15.46-11.84a2.14 2.14 0 0 0-1.51-2.6101 2.3 2.3 0 0 0-0.73995-0.0593h-26.42a2.12 2.12 0 0 0-2.31 1.9099 1.85 1.85 0 0 0 0.0593 0.73995c2.3401 6.9301 8.3802 11.86 15.46 11.86z\" style=\"fill:#2f2f2f;\"/>',sP[\"08\"].eyes='<path d=\"m145.38 95.628c-5.1601 2.2597-11.03 2.2597-16.19 0m-47.29 1.75c5.1755-2.2694 11.065-2.2694 16.24 0\" style=\"fill:none;'+str+'5.9998px;stroke:#5e5e5e;\"/><path d=\"m90.016 106.28c-4.4506-0.0105-6.6902 5.3657-3.5508 8.5195 3.1394 3.1539 8.5252 0.93887 8.5352-3.5117 0.0063-2.7522-2.2204-4.9898-4.9727-4.9961l-0.011719-0.01172zm47.281 0c-4.4506-0.0105-6.6902 5.3657-3.5508 8.5195 3.1394 3.1539 8.5252 0.93887 8.5352-3.5117 6e-3 -2.7522-2.2204-4.9898-4.9727-4.9961l-0.01171-0.01172z\" style=\"fill:#1a1a1a;\"/>',sP[\"08\"].top='<path d=\"m108.37 22.019c-6.2698-12.829-17.151-13.396-18.949 1.1769-11.448-9.4583-26.021-4.483-20.361 12.422-12.251-7.9282-24.919 1.7761-17.076 20.853-27.08 2.3646-22.715 24.726-10.111 31.435-9.9002 3.3566-10.701 9.4006-8.464 14.497 2.6574 4.7842 9.0126 6.4737 11.545 9.6519-6.624 0.59419-8.4112 5.6011-5.7404 9.5192 1.6896 2.4787 5.2756 4.2218 8.5971 5.5455 1.0485 0.40658 3.702 1.2732 3.9053 2.4181 0.18744 1.2156-6.7884 3.0055-5.7281 5.2612 0.60648 1.4227 1.7764 2.7151 2.6466 3.7156 1.2807 1.6595 10.755 8.0351 9.4583 4.2049-1.0271-3.7234-2.2148-7.4682-3.1456-11.192-1.1662-5.3069-1.7868-10.721-1.102-16.156 1.4223-5.455 5.069-4.4265 7.7837-8.3588 3.5264-5.7505 2.0296-11.614 2.124-13.575 0.107-1.7868 1.5407-1.1876 3.1884-1.4337 4.3868-0.64196 7.0081-2.1185 8.8377-6.2698 0.77035-1.9259 0.62057-9.7578 0.52426-11.78 0.36378-4.6328 4.1835 0 6.548 0.64196 3.2633 0.88805 6.8797 0.21399 9.0731-2.5037 1.7547-2.3753 2.0864-2.8888 4.6114-0.80245 2.6856 2.2148 4.0979 3.1349 7.6929 3.274 5.5637 0.20329 8.7735-6.2698 11.32-5.6386 3.5201 0.87735 3.6057 5.4567 10.261 4.8682 2.386-0.20329 3.8304-0.86665 5.4032-2.6428 0.88805-0.99505 1.958-2.5037 3.4345-2.6214 1.4658-0.1177 2.3218 2.3646 3.0065 3.4452 1.1926 2.6755 4.0295 3.6513 6.2377 3.3168 1.958-0.17119 3.854-1.4115 5.4268-2.4707 0.99679-0.66102 1.8284-0.81128 1.9256 0.2071 0.29592 2.2271 0.0862 7.7025 0.1596 8.4821 0.10556 8.4609 5.37 10.569 13.223 10.333-0.31871 3.7464 0.0583 11.28 5.4353 14.562 3.9481 2.7604 6.6657 1.2732 6.7299 7.8534 7e-3 6.1914-0.43693 13.061-1.2946 18.189-0.69547 4.0444-1.2412 6.4838-2.5251 10.378-0.64196 1.9152-0.81315 1.9687 1.4123 1.0699 7.1472-3.1456 10.539-11.48 8.3562-18.842-0.43869-2.0436 0.84525-1.7226 2.8781-2.6106 9.5248-4.2363 8.1264-11.335-0.75967-14.273 11.988-3.0926 13.886-8.9002 6.6871-15.375 7.3077-5.9168 3.6378-16.177-2.8032-16.991 12.422-7.0937 5.7349-22.062-5.1036-18.499 4.1728-12.037-5.5637-26.203-21.121-16.894 6.9653-11.373 2.065-22.661-12.101-10.785-3.4559-18.382-15.14-16.584-23.902-5.018 0.09435-20.075-16.001-17.42-18.146-2.5892z\" style=\"fill:#1a1a1a;\"/><path d=\"m5.4353 80.502c7.4468 9.1373 15.632 8.8912 15.632 8.8912s-6.0772 3.7983-6.8369 9.8755c-0.75966 6.088 4.5579 9.6295 8.0994 10.646 3.5522 1.0058 7.0937-2.7925 7.0937-2.7925s-5.8312 10.646-1.5193 15.964c4.3012 5.3176 11.908 3.0386 11.908 3.0386s-5.3283 10.132 1.0057 14.187c5.8312 3.7234 18.542 7.6715 20.511 8.2706-6.0666-9.7472-9.576-21.249-9.576-33.575v-0.0428c0-35.201 28.546-63.747 63.747-63.747 35.212 0 63.758 28.546 63.758 63.747 0 12.476-3.5843 24.116-9.7899 33.949h0.53496s13.931-1.0057 16.21-9.3727c2.279-8.3562 0.75967-9.8756 0.75967-9.8756s10.635 2.0329 13.417-7.5966l2.7926-9.6295s10.132 0 10.892-7.083c0.75963-7.0937-7.0295-12.411-7.0295-12.411s11.459 0.82385 14.498-10.453c1.0164-3.7555 0.83456-8.2171 0.1391-12.497-17.665-41.161-58.569-69.995-106.18-69.995-30.632 0-60.034 12.187-81.679 33.831v0.0107c-13.171 13.171-22.833 29.22-28.386 46.66z\" style=\"fill:#1a1a1a;\"/>',sP[\"09\"]=[],sP[\"09\"].env=env,sP[\"09\"].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l13.85 13.85v-1.2h17.86v3.1h5z\" style=\"fill:#333;\"/><polygon points=\"115.36 207.65 123.37 224.2 148.3 196.86 143.08 189.95\" style=\"fill:#fff;\"/><polygon points=\"115.36 207.65 107.35 224.2 82.42 196.86 87.63 189.95\" style=\"fill:#fff;\"/>',sP[\"09\"].head=head,sP[\"09\"].mouth='<path d=\"m126.28 149.82c-6.16 2.43-15.52 2.42-21.56 0\" style=\"fill:none;'+str+'5.9998px;stroke:#1c1c1c;\"/>',sP[\"09\"].eyes='<path d=\"m83.527 103.98v10h10v-10h-10zm53.945 0v10h10v-10h-10z\" style=\"fill:#1a1a1a;\"/><path d=\"m56.621 94.906v11.688h5.3418v6.4922h5.3418v6.1055h5.3223v6.2324h26.846v-6.2324h5.3047v-6.1055h5.1445v-6.0039h11.154v6.0039h5.1446v6.1055h5.3066v6.2324h26.846v-6.2324h5.3203v-6.1055h5.3438v-6.4922h5.3418v-11.688z\" style=\"fill:#1a1a1a;\"/><path d=\"m67.387 100.65v5.9394h5.1992v-5.9394zm5.1992 5.9394v6.4922h5.4238v-6.4922zm5.4238 0h5.1992v-5.9394h-5.1992zm5.1992 0v6.4922h5.4258v-6.4922zm5.4258 6.4922v6.1055h5.1426v-6.1055zm-10.625 0v6.1055h5.1445v-6.1055zm48.281-12.432v5.9394h5.1992v-5.9394zm5.1992 5.9394v6.4922h5.4238v-6.4922zm5.4238 0h5.1992v-5.9394h-5.1992zm5.1992 0v6.4922h5.4258v-6.4922zm5.4258 6.4922v6.1055h5.1426v-6.1055zm-10.625 0v6.1055h5.1445v-6.1055z\" style=\"fill:#fff;\"/>',sP[\"09\"].top='<path d=\"m157.79 67.5a61.31 61.31 0 0 1-42.79 17.43h-55.7c18.16-37.74 68.27-46.85 98.49-17.43z\" style=\"fill:#4d4d4d;\"/><path d=\"m122.93 7.0078c-10.503-0.15729-21.09 1.6448-29.545 5.4316-17.141 7.8999-32.169 23.297-43.973 38.779-5.1703 6.8631-8.7779 13.46-8.1855 18.395 0.93114 12.312 10.372 26.483 11.068 36.9 15.663-72.081 105.99-70.452 124.91-7.0525l4e-3 0.0156c5.616-10.926 8.0682-20.188 8.352-27.653 0.43654-15.607-7.8088-21.149-21.735-28.249 1.7934-3.7704 1.7273-7.5023 2.0625-10.154-0.79964-7.8568-3.6796-13.51-10.43-17.758-5.9434-3.7404-13.06-6.0867-18.463-7.2266-4.5319-0.87895-9.2901-1.3562-14.064-1.4277z\" style=\"fill:#4d4d4d;\"/><path d=\"m42.426 75.338c0.52158 18.689 10.557 74.338-18.115 101.25 12.38 10.603 28.352 19.061 46.025 24.594 11.032-4.6874 22.88-7.4147 34.817-8.5046l0.0633-14.477c-22.49-4.3813-40.766-18.898-48.862-39.967-8.096-21.07-4.7931-44.72 9.2478-62.393zm124.67 2.7207c7.8997 10.886 11.743 24.64 11.787 37.441-0.36632 30.178-22.389 57.576-53.12 62.708l0.0238 14.471c12.282 1.1216 24.518 3.9888 35.825 8.9128 15.488-5.1448 30.007-13.325 42.396-25.043-13.136-22.051-23.282-63.045-18.694-101.55z\" style=\"fill:#4d4d4d;\"/><path d=\"m143.61 46.383c-11.639 0.12482-20.998 1.8906-20.998 1.8906l-9 3.5059c0.63003-0.0191 1.2603-0.0289 1.8906-0.0293h0.0996c35.169 0.055 60.959 27.235 63.283 63.383 7.4e-4 31.157-22.742 57.213-53.106 63.079l-0.0216 14.498c11.567 1.0563 23.154 3.6067 33.887 8.0463 35.952-15.315 55.082-52.303 36.709-68.279-5.018-7.9035-10.44-15.409-9.5544-23.03 5.0545-50.452 0.39626-63.561-43.189-63.064zm-69.966 21.09c-15.286 3.244-17.096 3.73-31.734 6.6953 3.0304 13.081 3.0583 22.274 1.2085 30.012-3.8004 11.361-8.9712 19.787-12.286 28.764-6.8823 22.459-2.9157 31.982 12.093 46.165 8.6595 8.0693 19.861 16.209 30.939 20.647 2.669-1.0316 5.3729-1.9628 8.106-2.792 7.4979-2.275 15.388-3.6535 23.206-4.3673l0.0433-14.393c-23.933-4.5937-44.283-21.98-50.77-45.817-6.3319-23.265 0.51104-48.752 19.195-64.914z\" style=\"fill:#4d4d4d;\"/>',sP[10]=[],sP[10].env=env,sP[10].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l15.71 15.75h21z\" style=\"fill:#666;\"/><path d=\"m89.291 195a114.79 114.79 0 0 0-38.002 16.5 115.53 115.53 0 0 0 38.002 16.482zm52.434 0v32.982a115.53 115.53 0 0 0 38-16.482 114.79 114.79 0 0 0-38-16.5z\" style=\"fill:#999;\"/><path d=\"m157.15 199.75c0.2548 7.4501 1.54 14.855 4.9512 21.432a115.53 115.53 0 0 0 17.619-9.6797 114.79 114.79 0 0 0-22.57-11.752zm-83.295 2e-3a114.79 114.79 0 0 0-22.57 11.75 115.53 115.53 0 0 0 17.621 9.6797c3.411-6.5765 4.6944-13.98 4.9492-21.43z\" style=\"fill:#ccc;\"/><path d=\"m99.197 204.97v2e-3l16.302 16.301 16.301-16.301v-2e-3z\" style=\"fill:#fff;\"/>',sP[10].head=head,sP[10].mouth='<path d=\"m100.19 152.09c2.8726 4.0616 9.8095 4.7232 15.119-0.45432 5.0656 4.5134 11.167 5.6898 15.495 0.31458\" style=\"fill:none;'+str+'5.8949;stroke:#333;\"/><path d=\"m109.67 135.53c-0.9758 0.0743-2.05 0.45327-3.1485 0.99414-4.3235 2.1399-7.3862 4.2557-10.639 7.1406-0.6251 0.5715 0.1168 0.77785 1.4238 0.87304 5.6967 0.0536 14.384 0.41404 15.098-0.875 1.9251-2.0788 1.7969-5.3303-0.1816-7.3008-0.701-0.67533-1.5769-0.90632-2.5527-0.83203zm11.656 0c-0.9758-0.0743-1.8517 0.1567-2.5527 0.83203-1.9785 1.9705-2.1067 5.222-0.1817 7.3008 0.7142 1.289 9.401 0.9286 15.098 0.875 1.307-0.0952 2.0489-0.30154 1.4238-0.87304-3.2524-2.8849-6.3151-5.0007-10.639-7.1406-1.0985-0.54087-2.1727-0.91985-3.1485-0.99414z\" style=\"fill:#333;\"/>',sP[10].eyes='<path d=\"m97.56 107.84a10.63 10.63 0 0 1-15 0.13l-0.13-0.13\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/><path d=\"m148.59 107.84a10.63 10.63 0 0 1-15 0.13l-0.13-0.13\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/>',sP[10].top='<path d=\"m41.668 87.073c-9.2319-0.0231-11.63 6.5104 2.2676 17.66-14.015 1.1231-4.3662 16.457 4.875 24.66 4.0686 3.0199 6.4647 5.4657 5.5078 1.1348-1.2079-4.9178-1.8184-9.9634-1.8184-15.027 3.26e-4 -7.5692 1.2547-15.016 3.7883-22.183 0.57048-1.7876 1.0689-2.0306-0.37721-2.6839-5.5405-2.4478-10.375-3.5511-14.243-3.5608z\" style=\"fill:#ccc;\"/><path d=\"m185.48 89.513c-2.4418-0.11189-5.4618 0.81187-9.5148 3.2121-1.314 0.81729-0.70075 1.995-0.32301 3.2653 3.194 10.982 3.8215 22.462 1.2538 33.628-0.31613 1.688-0.47649 3.569 2.6953 1.3516 7.7016-5.371 19.17-18.734 16.918-26.105-1.4251-3.9177-11.4-0.35546-11.4-0.35546s4.987-4.2755 5.3437-9.6191c0.20048-3.0057-1.5237-5.2189-4.9726-5.377z\" style=\"fill:#ccc;\"/><path d=\"m91.689 36.108c-3.7298-7.3864-9.5859-10.504-17.578-6.7891-9.5194 4.5907-15.629 18.444-13.416 29.232 0 0-8.5511-4.9878-18.17-3.5625-19.623 8.094-1.4102 29.869 10.817 37.342 2.075 1.297 2.5792 1.7432 3.4291-0.37685 2.6746-6.5374 6.1886-12.722 11.297-17.709 4.1039 8.7427 14.629 4.1809 20.006-0.14062 4.4873 9.6838 10.377 6.3535 15.377 3.4785 4.0764 7.8829 10.756 7.25 17.631 0.0625 4.875 4.5625 14.713 4.1867 15.555-3.426 8.4753 2.6244 14.012 10.437 22.962-1.4764 8.8552 6.8221 14.407 16.853 17.122 27.51 0.34 1.554 1.175 0.85565 2.2212 0.44315 10.255-4.286 22.842-15.749 15.705-23.975-3.5623-3.5623-13.539-2.1387-13.539-2.1387s6.77-7.1233 9.2637-18.168c2.4936-11.043-23.514-4.9883-23.514-4.9883s7.4818-5.6993 12.113-13.537c4.6314-7.8378-2.4943-11.756-11.045-11.043-8.5496 0.71204-17.1 7.4805-17.1 7.4805s3.3946-7.8055-3.5625-12.826c-9.5935-6.9234-23.869 6.4121-23.869 6.4121-4.2562-26.835-24.872-6.386-31.707 8.1953z\" style=\"fill:#ccc;\"/>',sP[11]=[],sP[11].env=env,sP[11].clo='<path d=\"m116 203.13c-0.12 0-0.25 0.12-0.49 0.12s-0.25-0.12-0.49-0.12zm-27.29-8c0.87-0.25 1.72-0.47 2.56-0.69a32.37 32.37 0 0 0 0.3 8.57 21.5 21.5 0 0 0 7 6.88c6.41-6 16.8-6.64 16.8-6.64s10.5 0.58 17 6.69a21.61 21.61 0 0 0 6.93-6.66 32.34 32.34 0 0 0 0.35-8.84l2.13 0.56a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.64 114.64 0 0 1 37.38-16.37z\" style=\"fill:#e9e9e9;\"/><path d=\"m126.15 206-3.92 7.83h-13.46l-3.92-7.83a36.59 36.59 0 0 1 10.65-2.7 35.66 35.66 0 0 1 10.65 2.7z\" style=\"fill:#818181;\"/><path d=\"m124.54 230.65-2.18-16.74h-13.47l-2.19 16.76c2.9 0.22 5.84 0.33 8.8 0.33s6.06-0.12 9-0.35z\" style=\"fill:#989898;\"/><path d=\"m134.84 186s0.86 9.8-19.34 17.26c0 0 15.79 0.86 20.57 11.76 0.12 0.49 9.3-23.26-1.23-29z\" style=\"fill:#fff;\"/><path d=\"m96.16 186c-10.41 5.76-1.35 29.39-1.1 29 4.65-10.78 20.56-11.76 20.56-11.76-20.32-7.45-19.46-17.24-19.46-17.24z\" style=\"fill:#fff;\"/>',sP[11].head=head,sP[11].mouth='<path d=\"m118.57 165.14a8.66 8.66 0 0 0-2.76-4.23h-0.62a8 8 0 0 0-2.76 4.22c-0.52 1.89 2.07 10.61 2.76 12.53h0.62c0.64-1.76 3.19-10.82 2.76-12.52z\" style=\"fill:#333;\"/><path d=\"m102.81 152.24a2.4921 2.4921 0 1 1 1.19-4.84l0.21 0.06a37.1 37.1 0 0 0 5.43 1.12 44.52 44.52 0 0 0 11.76 0 37.1 37.1 0 0 0 5.43-1.12 2.4903 2.4903 0 0 1 1.59 4.72l-0.21 0.06a43.08 43.08 0 0 1-6.15 1.29 48.55 48.55 0 0 1-13.08 0 42.79 42.79 0 0 1-6.17-1.29z\" style=\"fill:#333;\"/>',sP[11].eyes='<path d=\"m86.851 100.39a4.94 4.94 0 1 0 4.9297 5 5 5 0 0 0-4.9297-5zm57.221 0a4.94 4.94 0 1 0 4.9394 4.9394 4.94 4.94 0 0 0-4.9394-4.9394z\" style=\"fill:#333;\"/><path d=\"m86.207 89.365c-25.504 0-21.503 6.8561-21.035 19.596 0.80177 18.121 17.763 16.514 21.201 16.639 14.758-0.041 20.518-8.227 22.951-22.932 1.8166-10.731-9.251-13.174-23.117-13.303zm58.598 0c-13.866 0.1284-24.936 2.5717-23.119 13.303 2.4332 14.705 8.1936 22.891 22.951 22.932 3.4383-0.125 20.399 1.4828 21.201-16.639 0-18.965-0.47958-19.596-21.033-19.596z\" style=\"fill:#4d4d4d;\"/><path d=\"m169.87 90.255a0.51 0.51 0 0 0-0.43991-0.52 167.64 167.64 0 0 0-22.6-1.6801c-12 0-27.47 3.7601-30.17 3.7601h-2.4c-1.2499 0-5.29-0.80996-10.45-1.6801a124.35 124.35 0 0 0-19.72-2.08 166.18 166.18 0 0 0-19.31 1.24c-1.56 0.17999-2.69 0.35009-3.2899 0.44009a0.51 0.51 0 0 0-0.44007 0.52l-0.091 6.4501a0.57 0.57 0 0 0 0.33012 0.52l0.73994 0.23992c1.08 0.41992 1.0001 19.85 6.78 24.71 3.4401 2.8599 6.51 4.4899 19.42 4.4899 7.4699 0 12.17-1.9999 16.63-8 3.21-4.32 6.0999-14.55 6.0999-14.55 0.82006-4.07 3.7702-4.52 4.43-4.5801h0.12068c0.11078 0 3.66 0.0593 4.57 4.5801 0 0 2.8599 10.22 6.0699 14.54 4.4601 5.9999 9.1601 8 16.63 8 12.91 0 16-1.63 19.42-4.4901 5.7898-4.86 5.6998-24.29 6.78-24.71l0.73994-0.23993a0.57 0.57 0 0 0 0.32996-0.52l-0.12068-6.4501zm-65 23c-1.9101 4.5-6.8 10.29-13.7 10.64-20.7 0.99985-21.65-4.7401-23-9.3201a31.45 31.45 0 0 1-1.2099-13.18c0.53997-4.5799 1.7-7.2699 3.7801-8.6201a9.3 9.3 0 0 1 4.3499-1.51 85.07 85.07 0 0 1 11.4-0.52 59.23 59.23 0 0 1 9.2099 0.69999c7.37 1.2 12.35 3.7001 12.35 6.1601a46.12 46.12 0 0 1-3.23 15.64zm58 1.3201c-1.34 4.5799-2.29 10.36-23 9.3201-6.91-0.3501-11.81-6.1401-13.71-10.64a46.35 46.35 0 0 1-3.22-15.64c0-3.39 9.43-6.8599 21.56-6.8599 12.13 0 14 0.89996 15.75 1.9999 2.08 1.3502 3.2398 4 3.77 8.6201a31.23 31.23 0 0 1-1.1601 13.17z\" style=\"fill:#333;\"/>',sP[11].top='<path d=\"m156.1 15.879c-0.38556 5.3015-1.7049 9.4762-3.6602 12.76-0.41226 23.773-9.2343 35.229-15.154 42.797l15.062-4.6641c-0.66253 2.8135-2.4628 7.156-0.34766 12.137 1.6334-2.3144 7.9395-5.807 13-3.3477-0.43442 3.5532-0.95271 7.094-1.4512 10.639l8.9648 0.85937c0.83453 3.8792 0.51719 9.3449-0.59961 11.736l5.5508 2.0098c0.20764 2.7646 0.10001 5.4906-0.74609 8.875 8.4545-1.7225 14.213-4.3896 19.641-13.188 2.8639-4.7524 4.9018-10.483 4.7305-17.242-4.1612 4.916-9.6484 7.2485-15.26 10.109 6.507-11.065 8.8648-22.768 8.1367-30.58-7.3456 10.251-11.649 13.06-19.918 16.9 1.2386-11.4 5.5249-18.582 12.461-27.27-11.392-1.3025-16.301 1.4749-24.891 6.4395 4.5466-14.036 2.2208-26.679-5.5195-38.971zm-117.76 28.682c9.3378 3.6366 19.581 9.0234 21.129 18.549-7.6182 0.0414-14.897-3.5072-20.242-7.1894-0.15967 8.2309 2.8451 12.252 6.7734 19.08-7.2127 1.6129-12.084 4.8315-17.471 9.4805 7.2948-0.15715 12.299-1.0502 16.891 4.2793-6.0512 5.0164-11.99 10.79-11.99 19.24 9.257-6.1688 12.495-5.9486 21.137-2.2012 1.2906-8.0996 2.3978-14.872 2.7869-16.435 2.4719-0.73247 3.5247-0.94807 5.9221-1.2938-2.1556-7.4281 1.0996-9.5176 2.4141-11.6l7.543 1.5059c-3.9093-6.1699 2.6565-12.483 7.1445-15.51-4.4474-7.2082-5.6649-11.558-7.377-16.797-11.198-8.2947-23.895-6.2742-34.66-1.1094z\" style=\"fill:#f9f9f9;\"/><path d=\"m101.9 7.6408c-10.047 6.2416-12.441 28.646-12.131 33.289-6.9249-5.8258-7.8992-13.75-7.7695-19.203-9.6235 6.0158-10.666 14.421-9 23.943 1.1061 5.1411 2.3972 10.461 7.377 16.797 2e-3 -1e-3 4e-3 -3e-3 6e-3 -4e-3 2.7742 2.8742 5.4644 5.5941 8.3477 8.3574 0.41187-6.971 0.45449-13.622 7.1856-15.824 3.9532 2.8169 7.4123 5.9388 11.084 9.1035l10.559-10.25c5.6447 3.961 5.4531 6.5652 6.5215 14.104 2.153-1.7546 8.719-9.0037 15.844-10.139 0.98706 4.1261-0.99388 10.308-2.6387 13.621 0 0 14.32-11.846 15.195-27.971 0.33968-6.2599 0.2237-11.146-0.041-14.826-3.2125 5.5652-8.7118 8.7799-13.789 10.15-4.2715-9.2486-2.4785-21.435-0.48047-29.309-12.21 3.0195-20.932 18.337-22.172 25.07-9.2678-7.397-13.605-16.146-14.098-26.91z\" style=\"fill:#f9f9f9;\"/>',sP[12]=[],sP[12].env=env,sP[12].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5l26.23 13 26.27-13z\" style=\"fill:#131111;\"/><polygon points=\"115.5 208.03 115.5 207.74 82.72 188.91 80.45 198.86 101.46 222.72\" style=\"fill:#cbcbcb;\"/><polygon points=\"115.5 208.03 115.5 207.74 148.28 188.91 150.55 198.86 129.54 222.72\" style=\"fill:#cbcbcb;\"/>',sP[12].head=head,sP[12].mouth='<path d=\"m123.07 154.05a10.61 10.61 0 0 1-15 0.14l-0.14-0.14\" style=\"fill:none;'+str+'6.3px;stroke:#000;\"/><path d=\"m120.1 142.22 0.19-0.11c3-1.87 5.45-2.4 7.3-1.46 2.15 1.1 3.12 3.84 4.84 5.5a5.18 5.18 0 0 0 6.68 0.73m-28.21-4.66-0.19-0.11c-3-1.87-5.45-2.4-7.3-1.46-2.15 1.1-3.12 3.84-4.84 5.5a5.18 5.18 0 0 1-6.68 0.73\" style=\"fill:none;'+str+'5.9998px;stroke:#4d4d4d;\"/>',sP[12].eyes='<path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45c0 3.0002 2.74 5.3001 6.0001 5.3001h32.36c7.0901 0 7.44-19.43 13.82-19.43s6.8801 19.44 13.83 19.44h32.36c3.37 0 5.9999-2.4 5.9999-5.3001v-28.46c0.14043-2.9001-2.6-5.2999-5.9-5.2999z\" style=\"fill:#8f8f8f;\"/><path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45l104.55-28.45c0-2.9001-2.74-5.2999-5.9999-5.2999z\" style=\"fill:#e3e3e3;\"/><path d=\"m161.73 86.016h-92.51c-3.37 0-6.0001 2.3998-6.0001 5.2999v28.45c0 3.0002 2.74 5.3001 6.0001 5.3001h32.36c7.0901 0 7.44-19.43 13.82-19.43s6.8801 19.44 13.83 19.44h32.36c3.37 0 5.9999-2.4 5.9999-5.3001v-28.46c0.14043-2.9001-2.6-5.2999-5.9-5.2999z\" style=\"fill:none;'+str+'4.0026px;stroke:#232323;\"/>',sP[12].top='<path d=\"m69.834 33.826c-8.2001-0.0626-16.444 2.6753-23.152 7.7038-8.5298 6.9899-12.159 19.61-12.329 32.68-0.2041 15.476 1.6092 34.752 1.7464 51.915 0.10414 13.047 0.53485 25.984-2.9197 33.995-2.4994 5.81-9.0955 9.6006-16.196 12.311 7.9599 2.8301 25.009 2.8094 33.58 1.5393 10.8-1.59 17.238-6.5294 17.159-22.699-0.0911-15.93-1.3894-29.23-1.559-45.83-0.3208-11.983-1.569-24.291 4.9774-33.987 4.2139-6.1265 10.452-10.521 17.116-13.588 3.9292-1.8575 8.0384-3.3083 12.263-4.3297-6.8718-13.574-18.732-19.618-30.687-19.709z\" style=\"fill:#b3b3b3;\"/><path d=\"m90.8 76.246c11.918-17.125 31.996-23.218 49.743-17.488 11.81 3.9496 20.692 13.389 22.313 28.237 0.51051 6.2098 0.63413 12.445 0.37007 18.67-0.23973 11.2-0.72946 23.82-1.0995 34.08-0.82005 22.43 0.0593 35.1 24.589 36.3 8.5635 0.32122 17.137-0.22845 25.59-1.6405h-0.0198c-10.74-3.3799-17.98-15.609-19.3-26.289-1.29-10.41-0.6098-23.43-0.7898-38.091-0.1701-14.96 1.0398-29.819 0.28008-42.089-1.414-22.777-14.947-38.505-34.126-45.152-27.813-7.35-51.083 0.091-61.672 17.343-5.4698 8.9112-7.7413 20.07-5.8788 36.121z\" style=\"fill:#b3b3b3;\"/>',sP[13]=[],sP[13].env=env,sP[13].clo='<path d=\"M61.11,205.59l3.49,3.69-6.26,6.6A115.45,115.45,0,0,0,72,222.51v-22a115.19,115.19,0,0,0-10.85,5.1Z\" style=\"fill:#eee;\"/><path d=\"M93.24,228.85V199l-4-4A114.43,114.43,0,0,0,72,200.49v22a114.43,114.43,0,0,0,21.28,6.34Z\" style=\"fill:#787878;\"/><path d=\"m159 222.51v-22a114.63 114.63 0 0 0-17.25-5.51l-4 4v29.86a114.16 114.16 0 0 0 21.25-6.35z\" style=\"fill:#787878;\"/><path d=\"m169.89 205.59-3.49 3.69 6.26 6.6a115.45 115.45 0 0 1-13.66 6.63v-22a115.19 115.19 0 0 1 10.85 5.1z\" style=\"fill:#eee;\"/><path d=\"M115.5,219.62A28.5,28.5,0,0,1,87.25,195c2.93-.74,5.92-1.36,8.94-1.87a19.41,19.41,0,0,0,38.62,0c3,.51,6,1.13,8.94,1.87a28.49,28.49,0,0,1-28.25,24.63Z\" style=\"fill:#c9c9c9;\"/>',sP[13].head=head,sP[13].mouth='<path d=\"m115.5 153.93a14 14 0 0 1-10.5-4.69 3.4209 3.4209 0 0 1 5-4.67l0.08 0.08 0.08 0.09a7.35 7.35 0 0 0 10.39 0.37l0.37-0.37a3.4206 3.4206 0 1 1 5.23 4.41l-0.08 0.09a14 14 0 0 1-10.53 4.69z\" /><path d=\"m115.27 127.32c-7.6627-0.03-15.251 1.4419-20.646 5.1465-7.62 5.33-9.9053 11.512-14.127 18.109-3.4379 5.2447-9.326 10.024-13.467 6.334 25.425 29.755 71.409 29.786 96.875 0.0664-6.8104 3.9305-11.545-2.47-13.508-6.4004-10.697-17.605-14.115-22.656-35.127-23.256zm-0.26758 8.3984c7.457 0.0802 14.986 1.2966 17.146 5.9522 2.5765 11.319-7.5878 17.454-16.681 17.515-6.09-0.05-12.2-2.3802-15.26-7.7402-6.36-11.16 3.6349-15.607 14.795-15.727z\" style=\"fill:#404040;\"/>',sP[13].eyes='<path d=\"m91.72 97.36v11.4m47.56-11.4v11.4\" style=\"fill:none;'+str+'7.9999px;stroke:#333;\"/>',sP[13].top='<path d=\"m52.107 57.293c-1.3411 14.839-3.8707 52.771 1.3145 72.715-0.67572-43.829 12.389-70.177 62.078-70.187 49.689 0.010061 62.754 26.359 62.078 70.187 5.1852-19.944 2.6556-57.876 1.3145-72.715h-63.393-63.393z\" style=\"fill:#4d4d4d;\"/><path d=\"m52.339 30.629c-1.3825 24.448-2.1216 45.905-1.4497 66.517 9.4643-48.304 112.77-54.916 129.22 0 0.67191-20.612-0.3798-47.256-1.4928-66.517-32.241 14.296-91.346 18.861-126.28 0z\" style=\"fill:#4d4d4d;\"/><path d=\"m115.5 24.92c-22.25 0-44.5 4.2296-56.72 12.69-3.32 2.3-5.0602 6.4392-5.5903 10.269-0.45275 3.23-0.84043 6.7561-1.1785 10.461h126.98c-0.33704-3.7047-0.72492-7.2306-1.1775-10.461-0.53009-3.8301-2.2697-7.9992-5.5897-10.269-12.22-8.4601-34.47-12.69-56.72-12.69z\" style=\"fill:#4d4d4d;\"/><path d=\"m76.521 39.139c21.233 3.3965 33.116-13.392 37.59-31.72 4.3614 17.158 14.175 34.968 36.577 31.584-33.921 20.594-57.646 11.594-74.167 0.1345z\" style=\"fill:#4d4d4d;\"/>',sP[14]=[],sP[14].env=env,sP[14].clo='<path d=\"m91.92 194.41a101.47 101.47 0 0 1 23.58 17.09 101.47 101.47 0 0 1 23.58-17.09c0.89 0.19 1.78 0.38 2.67 0.59a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5c0.88-0.21 1.78-0.4 2.67-0.59z\" style=\"fill:#757575;\"/><path d=\"m73.65 199.82c16.59 8.23 28.72 18.91 34.27 30.93a114.86 114.86 0 0 1-56.65-19.25 115.06 115.06 0 0 1 22.38-11.68z\" style=\"fill:#d8d8d8;\"/><path d=\"m60.63 205.85c12.35 5.94 21.93 13.44 27.59 21.91a114.7 114.7 0 0 1-36.95-16.26q4.53-3 9.36-5.65z\" style=\"fill:#757575;\"/><path d=\"m157.35 199.82c-16.6 8.23-28.72 18.91-34.27 30.93a114.86 114.86 0 0 0 56.65-19.25 115.06 115.06 0 0 0-22.38-11.68z\" style=\"fill:#d8d8d8;\"/><path d=\"m170.37 205.85c-12.35 5.94-21.93 13.44-27.59 21.91a114.7 114.7 0 0 0 36.95-16.26q-4.53-3-9.36-5.65z\" style=\"fill:#757575;\"/>',sP[14].head=head,sP[14].mouth='<path d=\"m115.5 131c-17.71 0.65-27 9.41-29.61 23.69-1 5.62-0.43 7.06 2.76 7.17 22.76 0.76 22.23 18.21 26.85 18.89 4.62-0.68 4.09-18.13 26.85-18.89 3.19-0.11 3.79-1.55 2.76-7.17-2.62-14.28-11.9-23-29.61-23.69zm0 29.31c-10 0-18-5-18-11.17s8.08-11.17 18-11.17 18 5 18 11.17-8.08 11.17-18 11.17z\" style=\"fill:#333;\"/><path d=\"m123.54 148.46a11.53 11.53 0 0 1-16.09 0\" style=\"fill:none;'+str+'6.7998px;stroke:#000;\"/>',sP[14].eyes='<path d=\"m133 108.17h14.17m-63.26 0h14.09m-20.69-8.93a21.31 21.31 0 0 1 27.29 0m21.8 0a21.31 21.31 0 0 1 27.29 0\" style=\"fill:none;'+str+'4.8243px;stroke:#000;\"/>',sP[14].top='<path d=\"m115.5 51.75c-38.702 5.3101-54.215 18.038-59.863 35.101\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m115.5 51.75c-7.8393 3.6337-5.5974 16.583-14.341 23.452\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m111.35 48.614c-22.634-6.9181-42.457-3.1988-55.733 2.5105\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m115.47 54.008c0.1965-6.7774-0.1436-26.309 0.05-38.184\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m68.874 28.177c34.115-3.382 41.987 13.321 45.17 19.602\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m116.49 48.69c2.8876-6.3019 10.358-21.518 43.469-22.326\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m116.92 51.766c1.5094 6.3991 3.4988 15.595 10.088 23.058\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m113.81 51.532c22.03-7.8674 46.709-7.3614 59.444-2.0465\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m114.53 52.278c36.226 4.8583 52.414 17.092 59.373 33.347\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m55.637 86.851c-4.1213 12.452-2.9877 27.213-1.777 43.084\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m55.614 51.124c-13.422 5.5019-21.908 16.409-24.712 28.774-1.8322 8.4632-1.9809 18.156-1.6096 28.486\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m173.26 49.486c24.917 10.399 26.707 36.537 27.209 59.62\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m173.9 85.625c5.4042 12.625 5.2413 27.675 4.5745 43.58\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m53.86 129.93c1.293 16.951 2.6738 35.169-2.1664 53.193\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m29.292 108.38c0.6173 17.177 2.6722 36.119 0.8158 54.108\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m200.47 109.11c0.3586 18.529-1.2751 36.94 1.9231 48.985\" style=\"fill:none;'+str+'12;stroke:#333;\"/><path d=\"m178.48 129.2c-0.7279 17.362-2.0563 35.743 2.6011 53.099\" style=\"fill:none;'+str+'12;stroke:#333;\"/>',sP[15]=[],sP[15].env=env,sP[15].clo='<path d=\"m141.75 195a114.79 114.79 0 0 1 38 16.5 115.53 115.53 0 0 1-128.46 0 114.79 114.79 0 0 1 38-16.5 115.77 115.77 0 0 1 15.71-2.53v-14.09a63.8 63.8 0 0 0 21 0v14.09a116.6 116.6 0 0 1 15.75 2.53z\" style=\"fill:#1a1a1a;\"/><path d=\"m60.984 205.66 6.2675 2.2051 3.4074-6.819 2.8018-1.1353-3.9911 7.9907 27.222-3.0857 3.2541-11.739 2.1451-0.2692-3.2833 11.819 20.393-1.6011-14.191-15.945v-2.4379l17.606-5.7274 3.3855-0.473v1.47l-19.167 6.2295 14.731 16.542 19.839-7.7432 3.3636 0.8223-21.371 8.34 20.532 13.842 2.6777-21.687 1.9481 0.5604-2.7726 22.378 0.0584 0.0364 8.5075 4.9923-2.4807 0.85145-6.4718-3.7916-1.2987 6.0622-2.1524 0.53125 1.3425-6.2804-17.037 8.8348-5.0271 0.35661 21.59-11.193-20.962-14.133-7.5006 25.457-2.0721-0.0364 7.6392-25.915-21.05 1.652 9.0109 24.052-1.4155-0.0946-0.49615-0.0437-0.073-7e-3 -0.2043-0.0145-8.3688-22.342-10.127 19.242-1.9846-0.52399 10.514-19.962-26.04 2.9547 13.425 16.418-3.4438-1.0625-12.083-14.781-8.1645 5.9675-1.9043-1.077 8.128-5.9385-6.9898-2.4598 2.3348-1.2881zm92.509-7.2556 14.228 20.093-1.8095 0.89514-15.614-22.043z\" style=\"fill:#b2b2b2;\"/>',sP[15].head=head,sP[15].mouth='<path d=\"m97.06 144.59a20.15 20.15 0 0 0 36.88 4.53z\" style=\"fill:#fff;'+str+'2.9999px;stroke:#000;\"/>',sP[15].eyes='<line x1=\"85.29\" x2=\"85.29\" y1=\"98.73\" y2=\"109.79\" style=\"fill:none;'+str+'8.7999px;stroke:#000;\"/><path d=\"m108.28 72.16h62.18c9.19 0 13.32 1.21 14.71 8.52 3.61 18.95 2.2 33.49-0.44 43.75a65.07 65.07 0 0 1-5.89 14.78 73.52 73.52 0 0 1-7.06 10.26c-1.8 2.27-5.17 1.21-4.19-1.09 0.14-0.47 0.27-1 0.4-1.48a14.29 14.29 0 0 0 0.52-6.62 12.52 12.52 0 0 0-3.88-6.3c-4.17-3.9-12.81-8.71-32.53-13.66-6.4-1.6-10.69-2.24-11.76-2.79a7.08 7.08 0 0 1-3.85-6.31v-9c0-2.39 0.18-4.55-1.56-6.57s-4.16-2.13-6.65-2.14a6 6 0 0 1-6-6v-9.35a6 6 0 0 1 6-6z\" style=\"fill:#1a1a1a;\"/><path d=\"m135.9 98.73v9.27m15.22-9.29v9.29\" style=\"fill:none;'+str+'7.7998px;stroke:#b2b2b2;\"/>',sP[15].top='<path d=\"m109.99 15.57c-13.46 3.6301-19.789 11.95-24.069 24.08-6.9996-7-8.7307-10.82-7.5606-21.43a41 41 0 0 0-9.2698 24.988c0.0366 7.6776 5.6462 13.939 12.697 15.297-13.315 5.8106-15.258 22.033-14.045 33.524 5.7687-11.861 14.254-20.981 27.258-22.951-0.43017 6.6-2.5099 10.22-7.29 17.66 18.29-2.8601 25.119-7.8199 37.15-18.24 0.46001 0 1.0001 0.089 1.4606 0.12058-0.33023 3.5601-1.0906 6.5598-5.0004 12.46 9.5298-1.32 14.721-5.8006 17.539-11.671 8.8862 0.95314 15.836 6.785 21.26 14.818 1.928-15.211-4.4766-26.6-19.807-34.036 1.4167-2.6974 8.0143-11.925 17.661-15.721-1.424-0.28569-2.8883-0.49486-4.4033-0.61125-5.71-0.41992-13.62-0.99982-24.89 4.1703 2.8501-8.5101 10.21-11 18.05-13.12-15.131-1.2501-28.61-2.5898-40.53 8.1801-1.8997-6.21-0.18055-12.54 3.7889-17.52z\" style=\"fill:#fff;\"/><path d=\"m172.63 69.954c1.2292 14.064 0.93841 29.96 0.34635 45.169 1.7887 6.796 3.0379 13.235 3.8842 18.388l0.13973-0.011c1.0001 6.56 2.3597 13.18 3.2698 19.73 2.0002-6.5699 2.5303-18.25 3.2405-25.43 1.2597-13 1.8296-29.311-0.43017-41.931-0.85041-4.72-2.0007-7.6896-2.0007-8.4796 4.6205 3.5601 8.6606 9.2204 13.001 14.15-0.6751-3.4318-1.347-6.6004-2.0567-9.5273-4.047-5.7183-13.726-12.154-19.393-12.06z\" style=\"fill:#fff;\"/><path d=\"m157.97 34.471c-10.339 2.7579-17.715 13.543-19.132 16.24 15.33 7.4361 20.783 17.96 21.278 33.517 5.9534 8.8179 10.066 20.289 12.857 30.895 0.87636-13.178 1.8186-27.726 0.26566-44.28 2.5698 0.44857 9.1372 1.3934 18.781 11.17-2.1158-8.7321-4.5671-15.31-8.4539-20.283-4.5598-5.8401-10.999-10.431-23.809-13 9.6502-3.34 16.27-0.76993 25.5 2.1301-8.1388-7.4315-16.474-14.219-27.287-16.389z\" style=\"fill:#fff;\"/><path d=\"m61.473 73.354c-7.256-0.77501-13.024 2.3746-16.262 5.3879 0.73789-0.45409 1.3868-0.74208 1.8489-0.74208 0 0-1.5198 10.359-1.6197 11.519-1.56 19.73 0.99957 43.401 6.37 62.471 1.3099 4.6899 1.1895 3.0893 1.8898-0.9107 1.7526-10.061 3.3891-24.703 6.9739-38.864-5.068-17.627-4.2508-32.403 0.79937-38.861z\" style=\"fill:#fff;\"/><path d=\"m69.09 43.21c-0.0253 1.0803-8e-3 2.1612 0.0523 3.2402-3.8402 0-12.46 0.71984-16 2.1598-4.4504 1.8001-8.48 5.4801-11.67 11.83 7.2999-3.94 11.899-3.8502 16.66-1.8102-10.39 3.45-19.52 11.37-20.32 26.9 1.1456-1.5053 4.6079-4.9789 7.1393-6.6285 0.09-0.0587 0.17427-0.10556 0.26167-0.15946 3.7141-2.3211 9.0494-5.1247 15.181-4.9553-5.0501 6.4577-6.6824 20.434 0.28207 38.428 1.7866-7.0567 4.0574-13.994 7.0681-20.184-1e-3 -11.664 2.0764-27.774 15.391-33.585-7.0508-2.1538-12.709-7.991-14.043-15.236z\" style=\"fill:#fff;\"/>';var CryptoJS=CryptoJS||function(h,s){var f={},t=f.lib={},g=function(){},j=t.Base={extend:function(a){g.prototype=this;var c=new g;return a&&c.mixIn(a),c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)}),c.init.prototype=c,c.$super=this,c},create:function(){var a=this.extend();return a.init.apply(a,arguments),a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},q=t.WordArray=j.extend({init:function(a,c){a=this.words=a||[],this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||u).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;if(a=a.sigBytes,this.clamp(),b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-e%4*8&255)<<24-(b+e)%4*8;else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);return this.sigBytes+=a,this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<32-c%4*8,a.length=h.ceil(c/4)},clone:function(){var a=j.clone.call(this);return a.words=this.words.slice(0),a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new q.init(c,a)}}),v=f.enc={},u=v.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-b%4*8&255;d.push((e>>>4).toString(16)),d.push((15&e).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,2),16)<<24-b%8*4;return new q.init(d,c/2)}},k=v.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-b%4*8&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(255&a.charCodeAt(b))<<24-b%4*8;return new q.init(d,c)}},l=v.Utf8={stringify:function(a){try{return decodeURIComponent(escape(k.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\")}},parse:function(a){return k.parse(unescape(encodeURIComponent(a)))}},x=t.BufferedBlockAlgorithm=j.extend({reset:function(){this._data=new q.init,this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=l.parse(a)),this._data.concat(a),this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f;if(a=(f=a?h.ceil(f):h.max((0|f)-this._minBufferSize,0))*e,b=h.min(4*a,b),a){for(var m=0;m<a;m+=e)this._doProcessBlock(d,m);m=d.splice(0,a),c.sigBytes-=b}return new q.init(m,b)},clone:function(){var a=j.clone.call(this);return a._data=this._data.clone(),a},_minBufferSize:0});t.Hasher=x.extend({cfg:j.extend(),init:function(a){this.cfg=this.cfg.extend(a),this.reset()},reset:function(){x.reset.call(this),this._doReset()},update:function(a){return this._append(a),this._process(),this},finalize:function(a){return a&&this._append(a),this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return new a.init(d).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return new w.HMAC.init(a,d).finalize(c)}}});var w=f.algo={};return f}(Math);!function(h){for(var s=CryptoJS,f,t=(f=s.lib).WordArray,g=f.Hasher,f=s.algo,j=[],q=[],v=function(a){return 4294967296*(a-(0|a))|0},u=2,k=0;64>k;){var l;a:{l=u;for(var x=h.sqrt(l),w=2;w<=x;w++)if(!(l%w)){l=!1;break a}l=!0}l&&(8>k&&(j[k]=v(h.pow(u,.5))),q[k]=v(h.pow(u,1/3)),k++),u++}var a=[],f=f.SHA256=g.extend({_doReset:function(){this._hash=new t.init(j.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],m=b[2],h=b[3],p=b[4],j=b[5],k=b[6],l=b[7],n=0;64>n;n++){if(16>n)a[n]=0|c[d+n];else{var r=a[n-15],g=a[n-2];a[n]=((r<<25|r>>>7)^(r<<14|r>>>18)^r>>>3)+a[n-7]+((g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10)+a[n-16]}r=l+((p<<26|p>>>6)^(p<<21|p>>>11)^(p<<7|p>>>25))+(p&j^~p&k)+q[n]+a[n],g=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&m^f&m),l=k,k=j,j=p,p=h+r|0,h=m,m=f,f=e,e=r+g|0}b[0]=b[0]+e|0,b[1]=b[1]+f|0,b[2]=b[2]+m|0,b[3]=b[3]+h|0,b[4]=b[4]+p|0,b[5]=b[5]+j|0,b[6]=b[6]+k|0,b[7]=b[7]+l|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;return d[e>>>5]|=128<<24-e%32,d[14+(e+64>>>9<<4)]=h.floor(b/4294967296),d[15+(e+64>>>9<<4)]=b,a.sigBytes=4*d.length,this._process(),this._hash},clone:function(){var a=g.clone.call(this);return a._hash=this._hash.clone(),a}});s.SHA256=g._createHelper(f),s.HmacSHA256=g._createHmacHelper(f)}(Math);var hash=\"\",sha256Hash,sha256Numbers;if(0==string.length)return hash;hash=CryptoJS.SHA256(string).toString().replace(/\\D/g,\"\").substring(0,12);var p=[];for(var part in p.env=hash[0]+\"\"+hash[1],p.env=Math.round(.47*p.env)+\"\",p.clo=hash[2]+\"\"+hash[3],p.clo=Math.round(.47*p.clo)+\"\",p.head=hash[4]+\"\"+hash[5],p.head=Math.round(.47*p.head)+\"\",p.mouth=hash[6]+\"\"+hash[7],p.mouth=Math.round(.47*p.mouth)+\"\",p.eyes=hash[8]+\"\"+hash[9],p.eyes=Math.round(.47*p.eyes)+\"\",p.top=hash[10]+\"\"+hash[11],p.top=Math.round(.47*p.top)+\"\",p){var nr=p[part];nr>31?(1==(nr=nr-32+\"\").length&&(nr=\"0\"+nr),p[part]=nr+\"C\"):nr>15?(1==(nr=nr-16+\"\").length&&(nr=\"0\"+nr),p[part]=nr+\"B\"):p[part]=1==(nr+\"\").length?\"0\"+nr+\"A\":nr+\"A\"}var final=[];for(var part in p){var partV=p[part].substring(0,2),theme=p[part].substring(2,3);void 0!==ver&&(partV=ver.part,theme=ver.theme),final[part]=getFinal(part,partV,theme)}function getFinal(part,partV,theme){var colors=themes[partV][theme][part],svgString=sP[partV][part],regex=/#(.*?);/g,result=svgString.match(regex),resultFinal=svgString;if(null!=result)for(var i=0;i<result.length;i++)resultFinal=resultFinal.replace(result[i],colors[i]+\";\");return resultFinal}return sansEnv&&(final.env=\"\"),svgStart+final.env+final.head+final.clo+final.top+final.eyes+final.mouth+svgEnd} module.exports = multiavatar;"],"names":["class","_createElementVNode","_hoisted_6","_hoisted_7","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","$data","classList","item","index","key","href","_normalizeClass","active","tempData","className","onClick","_withModifiers","$event","$options","selectClass","_hoisted_5","_cache","$refs","addClass","showModal","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","route","_hoisted_14","_createTextVNode","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_createVNode","_component_Group","classData","_component_TopicModal","_component_ScoreModal","_component_Demo","_component_AddClassModal","ref","style","group","innerHTML","avatar","_toDisplayString","id","args","addGroup","data","props","watch","this","JSON","parse","stringify","createMultiavatar","methods","forEach","multiavatar","newAvatar","push","__exports__","choseList","title","addTopic","_component_AddTopicModal","tabindex","type","tempSelect","topicList","value","for","modal","topicData","show","mounted","Modal","AddTopic","sortable","choseData","newList","components","AddTopicModal","Sortable","create","items","animation","onStart","headShakeList","Object","values","document","getElementsByClassName","add","onEnd","remove","tempList","_component_Bar","options","chartOptions","chartData","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","resize","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineJoin","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","borderCapStyle","borderJoinStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","role","createTypedChart","registerables","reforwardRef","Bar","ChartJS","AddClassModal","TopicModal","ScoreModal","Group","Demo","sansEnv","ver","themes","env","clo","mouth","eyes","sP","svgStart","svgEnd","CryptoJS","lib","Base","extend","mixIn","$super","q","WordArray","words","sigBytes","u","clamp","random","enc","Hex","substr","Latin1","fromCharCode","charCodeAt","Utf8","decodeURIComponent","escape","unescape","encodeURIComponent","BufferedBlockAlgorithm","_nDataBytes","_append","_process","blockSize","_minBufferSize","_doProcessBlock","Hasher","_doReset","finalize","_doFinalize","_createHelper","_createHmacHelper","HMAC","algo","SHA256","_hash","HmacSHA256","hash","substring","nr","partV","theme","getFinal","svgString","regex","resultFinal","module","exports"],"sourceRoot":""}